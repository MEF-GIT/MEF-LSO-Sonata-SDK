openapi: 3.0.1
info:
  description: >-
    **This file forms part of MEF 122**


    **This specification represents MEF work in progress and is subject to
    change.** 


    This API allows to retrieve a list of Geographic site and to get all
    information for one geographic site.


    A geographic site is a fixed physical location at which a Product can be
    installed. Its location can be

    described either with geocoding (Lat/Long information) or by association
    with an Address or Address Reference.


    Copyright 2021 MEF Forum and its contributors


    This file includes content based on the TM Forum Geographic Site API (TMF674
    v4.0.0) available at https://github.com/tmforum-apis/TMF674_GeographicSite,
    which is licensed by the TM Forum under the Apache License version 2.0. Such
    content has been modified by the MEF Forum and its contributors.
  title: API Geographic Site Management
  version: 7.0.0-RC
servers:
  - url: "https://serverRoot/mefApi/sonata/geographicSiteManagement/v7/"
tags:
  - name: geographicSite
  - name: events subscription
paths:
  /geographicSite:
    get:
      description: This operation list or find GeographicSite entities
      operationId: listGeographicSite
      parameters:
        - description: >-
            The name of the company that is the administrative authority (e.g.
            controls access) for this Geographic Site. (For example, the
            building owner)
          in: query
          name: companyName
          schema:
            type: string
        - description: >-
            The name of the company that is the administrative authority for the
            space within this Geographic Site. (For example, the company leasing
            space in a multi-tenant building).
          in: query
          name: customerName
          schema:
            type: string
        - description: A textual description of the Geographic Site.
          in: query
          name: description
          schema:
            type: string
        - description:
            This defines whether a Geographic Site is public or private.
          in: query
          name: siteType
          schema:
            enum:
              - public
              - private
            type: string
        - description:
            A name commonly used by people to refer to this Geographic Site.
          in: query
          name: name
          schema:
            type: string
        - description: >-
            Identifies the name of the person or organization at the specific
            site location that is the local contact. This contact will primarily
            be used for gaining access to the site. Filtering is done on the
            name of the relatedContactInformation which has the role
            "serviceSiteContactName" in the Site record.
          in: query
          name: serviceSiteContactName
          schema:
            type: string
        - description: >-
            Identifier of a geographic address (from the seller). It could be
            any type of address reference (Fielded, Formatted,
            GeographicAddressLabel, MEFGeographicPoint)
          in: query
          name: geographicAddress.id
          schema:
            type: string
        - description: Street Nr of the geographic site address
          in: query
          name: streetNr
          schema:
            type: string
        - description: Street Name of the geographic site address
          in: query
          name: streetName
          schema:
            type: string
        - description: Street Type of the geographic site address
          in: query
          name: streetType
          schema:
            type: string
        - description: City of the geographic site address
          in: query
          name: city
          schema:
            type: string
        - description: Postcode of the geographic site address
          in: query
          name: postcode
          schema:
            type: string
        - description: Country of the geographic site address
          in: query
          name: country
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/GeographicSite"
                type: array
          description: "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              schema:
                type: boolean
            X-Total-Count:
              description: >
                The total number of matching records. E.g. if there are 50
                matching records in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of records included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description: Unprocessable entity due to business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: List or find GeographicSite objects
      tags:
        - geographicSite
  "/geographicSite/{id}":
    get:
      description: This operation retrieves a GeographicSite entity.
      operationId: retrieveGeographicSite
      parameters:
        - description: Identifier of the GeographicSite
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/GeographicSite"
          description: "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Retrieves a GeographicSite by ID
      tags:
        - geographicSite
components:
  schemas:
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    Error:
      description: >
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        reason:
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        message:
          description: >-
            Text that provides mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        referenceError:
          description: url pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
          type: object
      description:
        "Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)"
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
          type: object
      description:
        "Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)"
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
          type: object
      description:
        "Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)"
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error404:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                The following error code:

                - notFound: A current representation for the target resource not
                found
              enum:
                - notFound
              type: string
          required:
            - code
          type: object
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error422:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              $ref: "#/components/schemas/Error422Code"
            propertyPath:
              description: >
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
              type: string
          required:
            - code
          type: object
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
      type: string
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    FieldedAddress:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - properties:
            country:
              description: The country that the address is in
              type: string
            streetType:
              description: >-
                The type of street (e.g., alley, avenue, boulevard, brae,
                crescent, drive, highway, lane, terrace, parade, place, tarn,
                way, wharf)
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in a US urban property address
              type: string
            city:
              description: The city that the address is in
              type: string
            streetNr:
              description: >-
                Number identifying a specific property on a public street. It
                may be combined with streetNrLast for ranged addresses. MEF 79
                defines it as required however as in certain countries it is not
                used we make it optional in API.
              type: string
            locality:
              description: >-
                An area of defined or undefined Present boundaries within a
                local authority or other legislatively defined area, usually
                rural or semirural in nature.
              type: string
            postcode:
              description: >-
                A descriptor for a postal delivery area used to speed and
                simplify the delivery of mail (also known as zip code) MEF 79
                defines it as required however as in certain countries it is not
                used we make it optional in API.
              type: string
            streetNrLast:
              description:
                Last number in a range of street numbers allocated to a property
              type: string
            streetNrSuffix:
              description: The first street number suffix
              type: string
            streetName:
              description: Name of the street or other street type
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
            streetNrLastSuffix:
              description: Last street number suffix for a ranged address
              type: string
            geographicSubAddress:
              $ref: "#/components/schemas/GeographicSubAddress"
              description:
                Additional fields used to specify an address, as detailed as
                possible.
            streetSuffix:
              description: A modifier denoting a relative direction
              type: string
          required:
            - city
            - country
            - streetName
          type: object
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
        Reference: MEF 79 (Sn 8.9.2)
    FormattedAddress:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - properties:
            country:
              description: The country that the address is in
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in a US urban property address
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
            city:
              description: The city that the address is in
              type: string
            addrLine2:
              description: The second address line in a formatted address
              type: string
            addrLine1:
              description: The first address line in a formatted address
              type: string
            locality:
              description: >-
                An area of defined or undefined boundaries within a local
                authority or other legislatively defined area, usually rural or
                semi-rural in nature
              type: string
            postcode:
              description: >-
                A descriptor for a postal delivery area used to speed and
                simplify the delivery of mail (also known as ZIP code)
              type: string
          required:
            - addrLine1
            - city
            - country
          type: object
      description: >-
        A type of Address that has discrete fields for each type of boundary or
        identifier with the exception of the street and more specific location
        details, which are combined into a maximum of two strings based on local
        postal addressing conventions.  Reference: MEF 79 (Sn 8.9.3)
    GeographicAddressLabel:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - properties:
            externalReferenceId:
              description: >-
                The unique reference to an Address as provided by the
                Administrative Authority.
              type: string
            externalReferenceType:
              description: >-
                The organization or standard from the organization that
                administers this Geographic Address Label ensuring it is unique
                within the Administrative Authority. The value(s) to be used are
                to be agreed during the onboarding. For North American providers
                this would normally be CLLI (Common Language Location
                Identifier) code.
              type: string
          required:
            - externalReferenceId
            - externalReferenceType
          type: object
      description: >-
        A unique identifier controlled by a generally accepted independent
        administrative authority that specifies a fixed geographical location. 

        Reference: MEF 79 (Sn 8.9.4), MEF 79.0.2 (Sn 8.9.4)
    GeographicAddressRef:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - properties:
            href:
              description: >
                Hyperlink to the referenced place Hyperlink MAY be used by the
                Seller in responses Hyperlink MUST be ignored by the Seller in
                case it is provided by the Buyer in a request
              type: string
            id:
              description: >-
                Identifier of the referenced Geographic Address. This identifier
                is assigned during a successful address validation request
                (Geographic Address Management API)
              type: string
          required:
            - id
          type: object
      description: >
        A reference to a GeographicAddress resource available through Addressing
        Validation API
    GeographicAddressRefOrValue:
      description: >
        Defines a GeographicAddress link by reference or by value. The
        polymorphic attributes @type and @schemaLocation are related to the
        GeographicAddress entity and not the GeographicAddressRefOrValue class
        itself
      discriminator:
        mapping:
          FieldedAddress: "#/components/schemas/FieldedAddress"
          FormattedAddress: "#/components/schemas/FormattedAddress"
          GeographicAddressRef: "#/components/schemas/GeographicAddressRef"
          GeographicAddressLabel: "#/components/schemas/GeographicAddressLabel"
          MEFGeographicPoint: "#/components/schemas/MEFGeographicPoint"
        propertyName: "@type"
      properties:
        "@type":
          description: >
            This field is used as a discriminator and is used between different
            geographicAddress representations. This type might discriminate for
            additional related GeographicAddress as defined in
            '@schemaLocation'.
          type: string
        "@schemaLocation":
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships. May be used to define additional related place types.
            Usage of this attribute must be agreed upon between the Buyer and
            the Seller.
          format: uri
          type: string
      required:
        - "@type"
      type: object
    GeographicSite:
      description: >-
        A fixed physical location at which a Product can be installed. Its
        location can be described either with geographic point (Lat/Long
        information) or by association with an Address or Geographic Address
        Label. This association may include a Sub-address describing where
        within that Address or Geographic Address Label this particular
        Geographic Site is located.
      properties:
        relatedContactInformation:
          description: >-
            An entity or organization that is involved to the geographical site,
            such as the Site Contact or Site Alternate Contact.
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          type: array
        "@type":
          description:
            "When sub-classing, this defines the sub-class entity name"
          type: string
        companyName:
          description: >-
            The name of the company that is the administrative authority (e.g.
            controls access) for this Geographic Site. (For example, the
            building owner.)
          type: string
        name:
          description: >-
            A user-friendly name for the place, such as [Paris Store], [London
            Store], [Main Home]
          type: string
        description:
          description: A textual description of the Geographic Site.
          type: string
        id:
          description:
            Identifier of the Geographic Site unique within the Seller.
          type: string
        href:
          description:
            Unique reference of the Geographic Site unique within the Seller.
          type: string
        place:
          description: >
            A set of location descriptions, each of which describes where this
            GeographicSite is located. It is important to note that this is a
            set because a particular Geographic Site might be described with
            multiple locations. For example, one Geographic Site might have two
            Fielded Addresses (for a building on the corner of two streets), two
            Formatted Addresses, and a Geographic Point.
          items:
            $ref: "#/components/schemas/GeographicAddressRefOrValue"
          type: array
        customerName:
          description: >-
            The name of the company that is the administrative authority for the
            space within this Geographic Site (For example, the company leasing
            space in a multi-tenant building).
          type: string
        siteType:
          $ref: "#/components/schemas/MEFSiteType"
          description: |
            This defines whether a Geographic Site is public or private.

            public - means that the existence of this Geographic Site is public
            information. A meet-me-room in a hosted data center facility (where
            all interconnects between parties take place) is an example of a
            public Geographic Site. A shared facility in the basement of a
            multi-tenant business building where all interconnects between
            parties take place is another example of a public Geographic Site.

            private - means that the existence of this Geographic Site is on a
            need-to-know basis. A wiring closet set up inside a customer facility
            just to connect two parties is an example of a private Geographic
            Site. For private sites, the Seller does not return any information
            regarding the existence of this Geographic Site unless it has been
            established that this Buyer is authorized to obtain this information.
      required:
        - id
      type: object
    GeographicSubAddress:
      description:
        "Additional fields used to specify an address, as detailed as possible."
      properties:
        buildingName:
          description: >
            The well-known name of a building that is located at this Geographic
            Address (e.g. where there is one Address for a campus).
          type: string
        subUnit:
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subAddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: "#/components/schemas/MEFSubUnit"
          type: array
        levelType:
          description: Describes level types within a building
          type: string
        levelNumber:
          description:
            "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
          type: string
        privateStreetNumber:
          description: Private streets numbers internal to a private street
          type: string
        privateStreetName:
          description: >-
            Private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office
          type: string
      type: object
    MEFGeographicPoint:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - properties:
            spatialRef:
              description: >-
                The spatial reference system used to determine the coordinates
                (e.g. "WGS84"). The system used and the value of this field are
                to be agreed during the onboarding process.
              type: string
            x:
              description: >-
                The latitude expressed in the format specified by the
                `spacialRef`
              type: string
            "y":
              description: >-
                The longitude expressed in the format specified by the
                `spacialRef`
              type: string
            z:
              description: >-
                The elevation expressed in the format specified by the
                `spacialRef`
              type: string
          required:
            - spatialRef
            - x
            - "y"
          type: object
      description: >
        A MEFGeographicPoint defines a geographic point through coordinates.
        Reference: MEF 79 (Sn 8.9.5), MEF 79.0.2 (Sn 8.9.5)
    MEFSiteType:
      description: >-
        This defines whether a Geographic Site is public or private. public
        means that the existence of this Geographic Site is public information.
        A meet-me-room in a hosted data center facility (where all interconnects
        between parties take place) is an example of a public Geographic Site. A
        shared facility in the basement of a multi-tenant business building
        where all interconnects between parties take place is another example of
        a public Geographic Site. private means that the existence of this
        Geographic Site is on a need-to-know basis. A wiring closet set up
        inside a customer facility just to connect two parties is an example of
        a private Geographic Site. For private sites, the Seller does not return
        any information regarding the existence of this Geographic Site unless
        it has been established that this Buyer is authorized to obtain this
        information.
      enum:
        - public
        - private
      type: string
    MEFSubUnit:
      description: |
        Allows for sub unit identification
        Reference: MEF 79 (Sn 8.9.2)
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
            WHARF.
          type: string
      required:
        - subUnitNumber
        - subUnitType
      type: object
    RelatedContactInformation:
      description: >-
        Contact data for a person or organization that is involved in the
        product offering qualification. In a given context it is always
        specified by the Seller (e.g. Seller Contact Information) or by the
        Buyer. 

        Reference: MEF 79 (Sn 8.11)
      properties:
        number:
          description: Phone number
          type: string
        emailAddress:
          description: Email address
          type: string
        role:
          description: The role of the particular contact in a given context.
          type: string
        postalAddress:
          $ref: "#/components/schemas/FieldedAddress"
          description:
            Identifies the postal address of the person or office to be
            contacted.
        organization:
          description: The organization or company that the contact belongs to
          type: string
        name:
          description: Name of the contact
          type: string
        numberExtension:
          description: Phone number extension
          type: string
      required:
        - emailAddress
        - name
        - number
        - role
      type: object
