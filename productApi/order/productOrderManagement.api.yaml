openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF W123** 

    **This specification represents MEF work in progress and is subject to
    change.** 

    The scope of this API includes the following capabilities to the API:

    - Create Product Order
    - Update Product Order
    - Retrieve List of Product Orders
    - Retrieve Product Order by Product Order Identifier
    - Modify Product Order Item Completion Date
    - Retrieve Modify Product Order Item Completion Date List
    - Retrieve Modify Product Order Item Completion Date by Identifier
    - Cancel In-Flight Product Order
    - Retrieve List of Cancel Requests
    - Retrieve Cancel Product Order by Cancel Product Order Identifier
    - Initiate Charge
    - Respond to Charge
    - Retrieve List of Charges
    - Retrieve Charge by Identifier
    - Register for Notifications
    - Send Notifications


    Copyright 2021 MEF Forum and its contributors.


    This file includes content based on the TM Forum Product Order API (TMF622
    v4.0.0) available at https://github.com/tmforum-apis/TMF622_ProductOrder,
    which is licensed by the TM Forum under the Apache License version 2.0. Such
    content has been modified by the MEF Forum and its contributors.
  title: Product Ordering Management
  version: 7.0.0-RC
servers:
  - url: "https://serverRoot/mefApi/sonata/productOrderingManagement/v7/"
tags:
  - name: productOrder
  - name: cancelProductOrder
  - name: charge
  - name: modifyProductOrderItemCompletionDate
  - name: events subscription
paths:
  /productOrder:
    get:
      description: This operation list or find ProductOrder entities
      operationId: listProductOrder
      parameters:
        - description: State of the Product Order
          in: query
          name: state
          schema:
            enum:
              - acknowledged
              - assessingCancellation
              - cancelled
              - completed
              - failed
              - held.assessingCharge
              - inProgress
              - partial
              - pending.assessingModification
              - pendingCancellation
              - rejected
            type: string
        - description: >-
            A number that uniquely identifies an order within the Buyer's
            enterprise.
          in: query
          name: externalId
          schema:
            type: string
        - description: >-
            An identifier that is used to group Orders that represent a unit of
            functionality that is important to a Buyer.
          in: query
          name: projectId
          schema:
            type: string
        - description: Date when the order was created greater than
          in: query
          name: orderDate.gt
          schema:
            format: date-time
            type: string
        - description: Date when the order was created lesser than
          in: query
          name: orderDate.lt
          schema:
            format: date-time
            type: string
        - description: Effective completion date greater than
          in: query
          name: completionDate.gt
          schema:
            format: date-time
            type: string
        - description: Effective completion date lesser than
          in: query
          name: completionDate.lt
          schema:
            format: date-time
            type: string
        - description: >-
            This is requested date to get this Product Order completed greater
            than
          in: query
          name: requestedCompletionDate.gt
          schema:
            format: date-time
            type: string
        - description: >-
            This is requested date to get this Product Order completed lesser
            than
          in: query
          name: requestedCompletionDate.lt
          schema:
            format: date-time
            type: string
        - description: Seller planned completion date greater than
          in: query
          name: expectedCompletionDate.gt
          schema:
            format: date-time
            type: string
        - description: Seller planned completion date lesser than
          in: query
          name: expectedCompletionDate.lt
          schema:
            format: date-time
            type: string
        - description: order cancellation date greater than
          in: query
          name: orderCancellationDate.gt
          schema:
            format: date-time
            type: string
        - description: order cancellation date lesser than
          in: query
          name: orderCancellationDate.lt
          schema:
            format: date-time
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when the responding
            entity represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: >-
            Requested number of items to be provided in response requested by
            client
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/ProductOrder_Find"
                type: array
          description: "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              schema:
                type: boolean
            X-Total-Count:
              description: >
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: List or find ProductOrder objects
      tags:
        - productOrder
    post:
      description: This operation creates a ProductOrder entity.
      operationId: createProductOrder
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when the responding
            entity represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductOrder_Create"
        description: The ProductOrder to be created
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ProductOrder"
          description:
            "Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Creates a ProductOrder
      tags:
        - productOrder
      x-codegen-request-body-name: productOrder
  "/productOrder/{id}":
    get:
      description: >-
        This operation retrieves a ProductOrder entity. Attribute selection is
        enabled for all first level attributes.
      operationId: retrieveProductOrder
      parameters:
        - description: Identifier of the ProductOrder
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ProductOrder"
          description: "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Retrieves a ProductOrder by ID
      tags:
        - productOrder
    patch:
      description: This operation updates partially a ProductOrder entity.
      operationId: patchProductOrder
      parameters:
        - description: Identifier of the ProductOrder
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductOrder_Update"
        description: The ProductOrder to be updated
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ProductOrder"
          description:
            "Updated (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error409"
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Updates partially a ProductOrder
      tags:
        - productOrder
      x-codegen-request-body-name: productOrder
  /cancelProductOrder:
    get:
      description: This operation list or find CancelProductOrder entities
      operationId: listCancelProductOrder
      parameters:
        - in: query
          name: productOrderId
          schema:
            type: string
        - in: query
          name: productOrderExternalId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: >-
            Requested number of items to be provided in response requested by
            client
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/CancelProductOrder"
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              schema:
                type: boolean
            X-Total-Count:
              description: >
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: List or find CancelProductOrder objects
      tags:
        - cancelProductOrder
    post:
      description: This operation creates a CancelProductOrder entity.
      operationId: createCancelProductOrder
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/CancelProductOrder_Create"
        description: The CancelProductOrder to be created
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/CancelProductOrder"
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Creates a CancelProductOrder
      tags:
        - cancelProductOrder
      x-codegen-request-body-name: cancelProductOrder
  "/cancelProductOrder/{id}":
    get:
      description: This operation retrieves a CancelProductOrder entity.
      operationId: retrieveCancelProductOrder
      parameters:
        - description: Identifier of the CancelProductOrder
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/CancelProductOrder"
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Retrieves a CancelProductOrder by ID
      tags:
        - cancelProductOrder
  /charge:
    get:
      description: This operation list or find Charge entities
      operationId: listCharge
      parameters:
        - description: id of the Product Order this Charge relates to.
          in: query
          name: productOrderId
          schema:
            type: string
        - description: id of the Product Order Item this Charge relates to.
          in: query
          name: productOrderItemId
          schema:
            type: string
        - description: >-
            The date that the Buyer must respond to the Seller's Charge. If
            there is no response received by the Due Date the Seller will treat
            all charges as declined (greater than)
          in: query
          name: responseDueDate.gt
          schema:
            format: date-time
            type: string
        - description: >-
            The date that the Buyer must respond to the Seller's Charge. If
            there is no response received by the Due Date the Seller will treat
            all charges as declined (greater than)
          in: query
          name: responseDueDate.lt
          schema:
            format: date-time
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: >-
            Requested number of items to be provided in response requested by
            client
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/MEFCharge"
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              schema:
                type: boolean
            X-Total-Count:
              description: >
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: List or find Charge objects
      tags:
        - charge
  "/charge/{id}":
    get:
      description: This operation retrieves a Charge entity.
      operationId: retrieveCharge
      parameters:
        - description: Identifier of the Charge
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MEFCharge"
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Retrieves a Charge by ID
      tags:
        - charge
    patch:
      description: This operation updates partially a Charge entity.
      operationId: patchCharge
      parameters:
        - description: Identifier of the Charge
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/MEFCharge_Update"
        description: The Charge to be updated
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MEFCharge"
          description:
            "Updated (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error409"
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Updates partially a Charge
      tags:
        - charge
      x-codegen-request-body-name: charge
  /hub:
    post:
      description: >-
        Sets the communication endpoint address the service instance must use to
        deliver information about its health state, execution state, failures
        and metrics.
      operationId: registerListener
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/EventSubscriptionInput"
        description:
          Data containing the callback endpoint to deliver the information
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EventSubscription"
          description: Subscribed
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Register a listener
      tags:
        - events subscription
      x-codegen-request-body-name: data
  "/hub/{id}":
    delete:
      description: >-
        Resets the communication endpoint address the service instance must use
        to deliver information about its health state, execution state, failures
        and metrics.
      operationId: unregisterListener
      parameters:
        - description: The id of the registered listener
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "204":
          description: Deleted
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Unregister a listener
      tags:
        - events subscription
    get:
      description: >-
        This operation retrieves a hub entity. Attribute selection is enabled
        for all first level attributes.
      operationId: retrieveHub
      parameters:
        - description: Identifier of the Hub
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EventSubscription"
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Retrieves a Hub by ID
      tags:
        - events subscription
  /modifyProductOrderItemCompletionDate:
    get:
      description: >-
        This operation list or find ModifyProductOrderItemCompletionDate
        entities
      operationId: listModifyProductOrderItemCompletionDate
      parameters:
        - in: query
          name: productOrderId
          schema:
            type: string
        - in: query
          name: state
          schema:
            enum:
              - acknowledged
              - done
              - done.declined
              - inProgress.assessingCharge
              - rejected
            type: string
        - description: Indicates that expedited treatment is requested.
          in: query
          name: expediteIndicator
          schema:
            type: boolean
        - description: >-
            Identifies the Buyer's desired due date (requested delivery date) -
            greater than
          in: query
          name: requestedCompletionDate.gt
          schema:
            format: date-time
            type: string
        - description: >-
            Identifies the Buyer's desired due date (requested delivery date) -
            lesser than
          in: query
          name: requestedCompletionDate.lt
          schema:
            format: date-time
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: >-
            Requested number of items to be provided in response requested by
            client
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/MEFModifyProductOrderItemCompletionDate"
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              schema:
                type: boolean
            X-Total-Count:
              description: >
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: List or find ModifyProductOrderItemCompletionDate objects
      tags:
        - modifyProductOrderItemCompletionDate
    post:
      description:
        This operation creates a ModifyProductOrderItemCompletionDate entity.
      operationId: createModifyProductOrderItemCompletionDate
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: >-
                #/components/schemas/MEFModifyProductOrderItemCompletionDate_Create
        description: The ModifyProductOrderItemCompletionDate to be created
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MEFModifyProductOrderItemCompletionDate"
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Creates a ModifyProductOrderItemCompletionDate
      tags:
        - modifyProductOrderItemCompletionDate
      x-codegen-request-body-name: modifyProductOrderItemCompletionDate
  "/modifyProductOrderItemCompletionDate/{id}":
    get:
      description:
        This operation retrieves a ModifyProductOrderItemCompletionDate entity.
      operationId: retrieveModifyProductOrderItemCompletionDate
      parameters:
        - description: Identifier of the ModifyProductOrderItemCompletionDate
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 57.2 (Sn 9.18)
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/MEFModifyProductOrderItemCompletionDate"
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      summary: Retrieves a ModifyProductOrderItemCompletionDate by ID
      tags:
        - modifyProductOrderItemCompletionDate
components:
  schemas:
    CancelProductOrder:
      description: Request for cancellation an existing product order
      properties:
        note:
          items:
            $ref: "#/components/schemas/Note"
          type: array
        cancellationReason:
          description: >-
            An optional attribute that allows the Buyer to provide additional
            detail to the Seller on their reason for cancelling the Product
            Order
          type: string
        relatedContactInformation:
          description: >-
            Contact information of an individual or organization playing a role
            for this Cancel Product Order.

            The rule for mapping a represented attribute

            value to a `role` is to use the _lowerCamelCase_ pattern e.g.

            - Cancel Request Product Order Contact:
            `role=cancelRequestProductOrderContact`

            - Seller Contact: `role=sellerContact`
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          type: array
        productOrder:
          $ref: "#/components/schemas/MEFProductOrderRef"
        id:
          description: >-
            Unique identifier for the Cancel Product Order that is generated by
            the Seller when the Cancel Product Order request is accepted via an
            API.
          type: string
        href:
          description: >
            Hyperlink to the cancellation request. Hyperlink MAY be used by the
            Seller in responses Hyperlink MUST be ignored by the Seller in case
            it is provided by the Buyer in a request
          type: string
        orderVersion:
          description: >-
            The version of the Product Order. Set by the Buyer using Seller
            specified Product Order Version of the Product Order that is to be
            cancelled.
          type: string
        state:
          description: >-
            The states as defined by TMF622 and extended to meet MEF
            requirements. These states are used to convey the Cancel Product
            Order status during the lifecycle of the Product Order.
          $ref: "#/components/schemas/MEFChargeableTaskStateType"
        cancellationReasonType:
          description: >-
            Identifies the type of reason, Technical or Commercial, for the
            Cancellation Request
          $ref: "#/components/schemas/CancellationReasonType"
      required:
        - id
        - orderVersion
        - productOrder
        - relatedContactInformation
        - state
      type: object
    CancelProductOrder_Create:
      description: |-
        Request for cancellation an existing product order
        Skipped properties: id,href,state,effectiveCancellationDate
      properties:
        note:
          items:
            $ref: "#/components/schemas/Note"
          type: array
        cancellationReason:
          description: >-
            An optional attribute that allows the Buyer to provide additional
            detail to the Seller on their reason for cancelling the Product
            Order
          type: string
        relatedContactInformation:
          description: >-
            Contact information of an individual or organization playing a role
            for this Cancel Product Order.

            The rule for mapping a represented attribute

            value to a `role` is to use the _lowerCamelCase_ pattern e.g.

            - Cancel Product Order Contact: `role=cancelProductOrderContact`

            - Seller Contact: `role=sellerContact`
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          minItems: 1
          type: array
        productOrder:
          $ref: "#/components/schemas/MEFProductOrderRef"
        orderVersion:
          description: >-
            The version of the Product Order. Set by the Buyer using Seller
            specified Product Order Version of the Product Order that is to be
            cancelled.
          type: string
        cancellationReasonType:
          description: >-
            Identifies the type of reason, Technical or Commercial, for the
            Cancellation Request
          $ref: "#/components/schemas/CancellationReasonType"
      required:
        - orderVersion
        - productOrder
        - relatedContactInformation
      type: object
    CancellationReasonType:
      description: >-
        Identifies the type of reason, Technical or Commercial, for the
        Cancellation Request
      enum:
        - technical
        - commercial
      type: string
    Duration:
      description: "A Duration in a given unit of time e.g. 3 hours, or 5 days."
      properties:
        amount:
          description: "Duration (number of seconds, minutes, hours, etc.)"
          type: integer
        units:
          description: Time unit type
          $ref: "#/components/schemas/TimeUnit"
      required:
        - amount
        - units
      type: object
    Error:
      description: >
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        reason:
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        message:
          description: >-
            Text that provides mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        referenceError:
          description: URL pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingQueryParameter: The URI is missing a required
                query-string parameter

                - missingQueryValue: The URI is missing a required query-string
                parameter value

                - invalidQuery: The query section of the URI is invalid.

                - invalidBody: The request has an invalid body
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
          type: object
      description:
        "Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)"
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingCredentials: No credentials provided.

                - invalidCredentials: Provided credentials are invalid or
                expired
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
          type: object
      description:
        "Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)"
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: |-
                This code indicates that the server understood
                the request but refuses to authorize it because
                of one of the following error codes:
                - accessDenied: Access denied
                - forbiddenRequester: Forbidden requester
                - tooManyUsers: Too many users
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
          type: object
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error404:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                The following error code:

                - notFound: A current representation for the target resource not
                found
              enum:
                - notFound
              type: string
          required:
            - code
          type: object
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error409:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                The following error code:

                - conflict: The client has provided a value whose semantics are
                not appropriate for the property.
              enum:
                - conflict
              type: string
          required:
            - code
          type: object
      description:
        "Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)"
    Error422:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: |
                One of the following error codes:
                  - missingProperty: The property the Seller has expected is not present in the payload
                  - invalidValue: The property has an incorrect value
                  - invalidFormat: The property value does not comply with the expected value format
                  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                  - unexpectedProperty: Additional property, not expected by the Seller has been provided
                  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                  - otherIssue: Other problem was identified (detailed information provided in a reason)
              $ref: "#/components/schemas/Error422Code"
            propertyPath:
              description: >
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
              type: string
          required:
            - code
          type: object
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
      type: string
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Error501:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: |-
                The following error code:
                - notImplemented: Method not supported by the server
              enum:
                - notImplemented
              type: string
          required:
            - code
          type: object
      description: >-
        Not Implemented. Used in case Seller is not supporting an optional
        operation (https://tools.ietf.org/html/rfc7231#section-6.6.2)
    EventSubscription:
      description: |
        This resource is used to respond to notification subscriptions.
      properties:
        query:
          description: >-
            The value provided by the Buyer in `EventSubscriptionInput` during
            notification registration
          type: string
        callback:
          description: >-
            The value provided by the Buyer in `EventSubscriptionInput` during
            notification registration
          type: string
        id:
          description: >-
            An identifier of this Event Subscription assigned by the Seller when
            a resource is created.
          type: string
      required:
        - callback
        - id
      type: object
    EventSubscriptionInput:
      description: This class is used to register for Notifications.
      properties:
        query:
          description: >-
            This attribute is used to define to which type of events to register
            to. Example: "query":"eventType = productOrderStateChangeEvent". To
            subscribe for more than one event type, put the values separated by
            comma:
            `eventType=productOrderStateChangeEvent,productOrderItemStateChangeEvent`.
            The possible values are enumerated by 'ProductOrderEventType',
            `CancelProductOrderEventType` in productOrderNotification.api.yaml.
            An empty query is treated as specifying no filters - ending in
            subscription for all event types.
          type: string
        callback:
          description: >-
            This callback value must be set to *host* property from Buyer
            Product Order Notification API (productOrderNotification.api.yaml).
            This property is appended with the base path and notification
            resource path specified in that API to construct an URL to which
            notification is sent. E.g. for "callback":
            "https://buyer.co/listenerEndpoint", the product order state change
            event notification will be sent to:
            `https://buyer.co/listenerEndpoint/mefApi/sonata/productOrderNotification/v7/listener/productOrderStateChangeEvent`
          type: string
      required:
        - callback
      type: object
    FieldedAddress:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - properties:
            country:
              description: Country that the address is in
              type: string
            streetType:
              description: >-
                The type of street (e.g., alley, avenue, boulevard, brae,
                crescent, drive, highway, lane, terrace, parade, place, tarn,
                way, wharf)
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in a US urban property address
              type: string
            city:
              description: The city that the address is in
              type: string
            streetNr:
              description: >-
                Number identifying a specific property on a public street. It
                may be combined with streetNrLast for ranged addresses. MEF 79
                defines it as required however as in certain countries it is not
                used we make it optional in API.
              type: string
            locality:
              description: The locality that the address is in
              type: string
            postcode:
              description: >-
                Descriptor for a postal delivery area, used to speed and
                simplify the delivery of mail (also known as zip code)
              type: string
            streetNrLast:
              description:
                Last number in a range of street numbers allocated to a property
              type: string
            streetNrSuffix:
              description: The first street number suffix
              type: string
            streetName:
              description: Name of the street or other street type
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
            streetNrLastSuffix:
              description: Last street number suffix for a ranged address
              type: string
            geographicSubAddress:
              $ref: "#/components/schemas/GeographicSubAddress"
            streetSuffix:
              description: A modifier denoting a relative direction
              type: string
          required:
            - city
            - country
            - streetName
          type: object
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
        Reference: MEF 79 (Sn 8.9.2)
    FormattedAddress:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - properties:
            country:
              description: Country that the address is in
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in an US urban property address
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
            city:
              description: The city that the address is in
              type: string
            addrLine2:
              description: The second address line in a formatted address
              type: string
            addrLine1:
              description: The first address line in a formatted address
              type: string
            locality:
              description: >-
                An area of defined or undefined boundaries within a local
                authority or other legislatively defined area, usually rural or
                semi-rural in nature
              type: string
            postcode:
              description: >-
                Descriptor for a postal delivery area, used to speed and
                simplify the delivery of mail (also known as ZIP code)
              type: string
          required:
            - addrLine1
            - city
            - country
          type: object
      description: >-
        A type of Address that has discrete fields for each type of boundary or
        identifier with the exception of street and more specific location
        details, which are combined into a maximum of two strings based on local
        postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)
    GeographicAddressLabel:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - properties:
            externalReferenceId:
              description: A reference to an address by id
              type: string
            externalReferenceType:
              description: >-
                Uniquely identifies the authority that specifies the addresses
                reference and/or its type (if the authority specifies more than
                one type of address). The value(s) to be used are to be agreed
                during the onboarding. For North American providers this would
                normally be CLLI (Common Language Location Identifier) code.
              type: string
          required:
            - externalReferenceId
            - externalReferenceType
          type: object
      description: >-
        A unique identifier controlled by a generally accepted independent
        administrative authority that specifies a fixed geographical location. 

        Reference: MEF 79 (Sn 8.9.4)
    GeographicAddressRef:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - properties:
            href:
              description: >
                Hyperlink to the referenced GeographicAddress. Hyperlink MAY be
                used by the Seller in responses. Hyperlink MUST be ignored by
                the Seller in case it is provided by the Buyer in a request
              type: string
            id:
              description: >-
                Identifier of the referenced Geographic Address. This identifier
                is assigned during a successful address validation request
                (Geographic Address Validation API)
              type: string
          required:
            - id
          type: object
      description: >
        A reference to a Geographic Address resource available through Address
        Validation API.
    GeographicSiteRef:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - properties:
            href:
              description: >
                Hyperlink to the referenced GeographicSite. Hyperlink MAY be
                used by the Seller in responses. Hyperlink MUST be ignored by
                the Seller in case it is provided by the Buyer in a request
              type: string
            id:
              description: Identifier of the referenced Geographic Site.
              type: string
          required:
            - id
          type: object
      description: >
        A reference to a Geographic Site resource available through Service Site
        API
    GeographicSubAddress:
      description:
        "Additional fields used to specify an address, as detailed as possible."
      properties:
        buildingName:
          description: >
            Allows for identification of places that require building name  as
            part of addressing information
          type: string
        subUnit:
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: "#/components/schemas/MEFSubUnit"
          type: array
        levelType:
          description: Describes level types within a building
          type: string
        levelNumber:
          description:
            "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
          type: string
        privateStreetNumber:
          description: Private streets numbers internal to a private street
          type: string
        privateStreetName:
          description: >-
            "Private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office
          type: string
      type: object
    MEFAcceptedRejectedType:
      description: Indicator of acceptance
      enum:
        - accepted
        - rejected
      type: string
    MEFBillingAccount:
      description: >-
        References the billing arrangement that a buyer has with a seller that
        provides products to the customer.
      properties:
        billingContact:
          description: >-
            Contact allow to capture contact information. It is used to capture
            billing account contact information.
          $ref: "#/components/schemas/RelatedContactInformation"
        agreementName:
          description: >-
            The name of the Agreement which is referenced for the Product Order
            Item.
          type: string
        id:
          description: >-
            Identifies the buyer's billing account to which the recurring and
            non-recurring charges for this order or order item will be billed.
            Required if the Buyer has more than one Billing Account with the
            Seller and for all new Product Orders.
          type: string
      required:
        - id
      type: object
    MEFBuyerSellerType:
      description: Indicates if the note is from Buyer or Seller.
      enum:
        - buyer
        - seller
      type: string
    MEFCancelProductOrderRef:
      description: A reference to a Cancel Product Order instance
      properties:
        id:
          description: A unique identifier of the Cancel Product Order
          type: string
        href:
          description: Hyperlink to access the Cancel Product Order
          type: string
      required:
        - id
      type: object
    MEFCharge:
      description: >-
        When non-recurring or updated recurring charges are identified by the
        Seller during their processing of a Product Order, the Seller must
        communicate these charges to the Buyer and the Buyer must respond to the
        Seller informing the Seller if they accept or reject each charge. The
        Seller indicates for each charge, if the charge is Blocking or
        non-Blocking. If the Buyer rejects a Blocking Charge, the Seller will
        cancel that Product Order Item and any related Product  Order Items. If
        the Buyer rejects a non-blocking Charge, the Seller may proceed with
        fulfillment of the Product Order Item.
      properties:
        cancelProductOrder:
          description: >-
            A reference to the Cancel Product Order request that is cause of the
            Charge. Required if the Charge was caused by a Cancel Product Order.
          $ref: "#/components/schemas/MEFCancelProductOrderRef"
        responseDueDate:
          description: >-
            The date that the Buyer must respond to the Seller's Charge. If
            there is no response received by the Due Date the Seller will treat
            all charges as declined.
          format: date-time
          type: string
        chargeItem:
          items:
            description: The list of charges for Product Order Item
            $ref: "#/components/schemas/MEFChargeItem"
          type: array
        id:
          description: A unique identifier of the Charge
          type: string
        href:
          description: >
            Hyperlink to the Charge. Hyperlink MAY be used by the Seller in
            responses Hyperlink MUST be ignored by the Seller in case it is
            provided by the Buyer in a request
          type: string
        modifyProductOrderItemCompletionDate:
          description: >-
            A reference to the Modify Product Order Item Completion Date request
            that is cause of the Charge. Required if the Charge was caused by
            a  Modify Product Order Item Completion Date request.
          $ref: "#/components/schemas/MEFModifyProductOrderItemCompletionDateRef"
        state:
          description: The state of the Charge
          $ref: "#/components/schemas/MEFChargeStateType"
        creationDate:
          description: Date that the Charge was created by the Seller.
          format: date-time
          type: string
        productOrderItem:
          description:
            A reference to the Product Order Item that the Charge is related to.
          $ref: "#/components/schemas/MEFProductOrderItemRef"
      required:
        - chargeItem
        - id
        - productOrderItem
        - responseDueDate
        - state
      type: object
    MEFChargeActivityType:
      description: |
        Possible values for the state of the Charge Activity Type
      enum:
        - new
        - change
      type: string
    MEFChargeItem:
      description: A single component part of the Charge
      properties:
        acceptanceIndicator:
          description: >-
            Indicates if this is a new charge or a change to a charge provided
            in a Quote.
          $ref: "#/components/schemas/MEFAcceptedRejectedType"
        unitOfMeasure:
          description: >-
            Unit of Measure if price depending on it is usage based (Gb, SMS
            volume, etc..)
          type: string
        blocking:
          description: >-
            Indicates if rejecting the charge will cause the Seller to cancel
            the Product Order Item, or close the Cancel Product Order or Modify
            Product Order Item Completion Date without action.
          type: boolean
        price:
          description: The value of the Price associated with the charge
          $ref: "#/components/schemas/Price"
        chargeType:
          description: The state of the Charge
          $ref: "#/components/schemas/MEFPriceType"
        description:
          description: A description of the Charge
          type: string
        id:
          description: An identifier that is unique among Charge
          type: string
        state:
          description: The state of the Charge Item
          $ref: "#/components/schemas/MEFChargeItemStateType"
        activityType:
          description: >-
            Indicates if this is a new charge or a change to a charge provided
            in a Quote.
          $ref: "#/components/schemas/MEFChargeActivityType"
        recurringChargePeriod:
          description: >-
            Used for a recurring Charge Item with a chargeType = recurring to
            indicate the period
          $ref: "#/components/schemas/MEFChargePeriod"
      required:
        - id
      type: object
    MEFChargeItemStateType:
      description: |
        Possible values for the state of the Charge Item
      enum:
        - awaitingResponse
        - acceptedByBuyer
        - declinedByBuyer
        - withdrawnBySeller
      type: string
    MEFChargeItem_Update:
      description: >-
        A type used to perform Buyer's response to a Charge Item - to accept or
        reject it.
      properties:
        acceptanceIndicator:
          description: >-
            Indicates if this is a new charge or a change to a charge provided
            in a Quote.
          $ref: "#/components/schemas/MEFAcceptedRejectedType"
        id:
          description: An identifier that is unique among Charge
          type: string
      required:
        - acceptanceIndicator
        - id
      type: object
    MEFChargePeriod:
      description: Used for a recurring charge to indicate period.
      enum:
        - hour
        - day
        - week
        - month
        - year
      type: string
    MEFChargeRef:
      description: a reference to a Charge instance
      properties:
        id:
          description: A unique identifier of the Charge
          type: string
        href:
          description: Hyperlink to access the Charge
          type: string
      required:
        - id
      type: object
    MEFChargeStateType:
      description: |
        Possible values for the state of the Charge
      enum:
        - awaitingResponse
        - completed
        - withdrawnBySeller
      type: string
    MEFCharge_Update:
      description: A subset of MEFCharge
      properties:
        chargeItem:
          items:
            description: The list of charges for Product Order Item
            $ref: "#/components/schemas/MEFChargeItem_Update"
          minItems: 1
          type: array
      required:
        - chargeItem
      type: object
    MEFChargeableTaskStateType:
      description: >-
        The states as defined by TMF622 [11] and extended to meet MEF
        requirements.
      enum:
        - acknowledged
        - done
        - done.declined
        - inProgress.assessingCharge
        - rejected
      type: string
    MEFEndOfTermAction:
      description: The action the Seller will take once the term expires.
      enum:
        - roll
        - autoDisconnect
        - autoRenew
      type: string
    MEFGeographicPoint:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - properties:
            spatialRef:
              description: >-
                The spatial reference system used to determine the coordinates
                (e.g. "WGS84"). The system used and the value of this field are
                to be agreed during the onboarding process.
              type: string
            x:
              description: >-
                The latitude expressed in the format specified by the
                `spacialRef`
              type: string
            "y":
              description: >-
                The longitude expressed in the format specified by the
                `spacialRef`
              type: string
            z:
              description: >-
                The elevation expressed in the format specified by the
                `spacialRef`
              type: string
          required:
            - spatialRef
            - x
            - "y"
          type: object
      description: >
        A MEFGeographicPoint defines a geographic point through coordinates.
        Reference: MEF 79 (Sn 8.9.5)
    MEFItemTerm:
      description: The term of the Item
      properties:
        duration:
          description: Duration of the term
          $ref: "#/components/schemas/Duration"
        endOfTermAction:
          description: >-
            The action that needs to be taken by the Seller once the term
            expires
          $ref: "#/components/schemas/MEFEndOfTermAction"
        name:
          description: Name of the term
          type: string
        description:
          description: Description of the term
          type: string
        rollInterval:
          description: >-
            The recurring period that the Buyer is willing to pay to the end of
            upon disconnecting the Product after the original term has expired.
          $ref: "#/components/schemas/Duration"
      type: object
    MEFModifyProductOrderItemCompletionDate:
      description: >-
        A response to a request initiated by the Buyer to modify the Requested
        Completion Date or the Expedite Indicator of a Product Order Item.
      properties:
        expediteIndicator:
          description: >-
            Indicates that expedited treatment is requested. Set by the Buyer.
            Default Value = FALSE. If this is set to TRUE, the Buyer sets the
            Requested Completion Date to the expedited date
          type: boolean
        id:
          description: >-
            Unique identifier for the MEFModifyProductOrderItemCompletionDate
            that is generated by the Seller when the
            MEFModifyProductOrderItemCompletionDate request is moved to the
            acknowledged state.
          type: string
        href:
          description: >
            Hyperlink to the modification request. Hyperlink MAY be used by the
            Seller in responses Hyperlink MUST be ignored by the Seller in case
            it is provided by the Buyer in a request
          type: string
        orderVersion:
          description: >-
            The version of the Product Order. Set by the Buyer using Seller
            specified Product Order Version of the Product Order that is to be
            modified.
          type: string
        state:
          description:
            The state of the Modify Product Order Item Completion Date request
          $ref: "#/components/schemas/MEFChargeableTaskStateType"
        creationDate:
          description: >-
            Date that the Modify Product Order Item Completion Date was created
            in the Seller's system.
          format: date-time
          type: string
        productOrderItem:
          description: A reference to the Product Order Item to be modified.
          $ref: "#/components/schemas/MEFProductOrderItemRef"
        requestedCompletionDate:
          description:
            Identifies the Buyer's desired due date (requested delivery date)
          format: date-time
          type: string
      required:
        - creationDate
        - expediteIndicator
        - id
        - orderVersion
        - productOrderItem
        - state
      type: object
    MEFModifyProductOrderItemCompletionDateRef:
      description: a reference to Modify Product Order Item Completion Date
      properties:
        id:
          description:
            A unique identifier of the Modify Product Order Item Completion Date
          type: string
        href:
          description:
            Hyperlink to access the Modify Product Order Item Completion Date
          type: string
      required:
        - id
      type: object
    MEFModifyProductOrderItemCompletionDate_Create:
      description: >-
        A request initiated by the Buyer to modify the Requested Completion Date
        or the Expedite Indicator of a Product Order Item.
      properties:
        expediteIndicator:
          default: false
          description: >-
            Indicates that expedited treatment is requested. Set by the Buyer.
            Default Value = FALSE. If this is set to TRUE, the Buyer sets the
            Requested Completion Date to the expedited date
          type: boolean
        orderVersion:
          description: >-
            The version of the Product Order. Set by the Buyer using Seller
            specified Product Order Version of the Product Order that is to be
            modified.
          type: string
        productOrderItem:
          description: A reference to the Product Order Item to be modified.
          $ref: "#/components/schemas/MEFProductOrderItemRef"
        requestedCompletionDate:
          description:
            Identifies the Buyer's desired due date (requested delivery date)
          format: date-time
          type: string
      required:
        - orderVersion
        - productOrderItem
      type: object
    MEFOrderItemCoordinatedAction:
      properties:
        itemId:
          description: >-
            Specifies Product Order Item that is to be coordinated with this
            Product Order Item.
          type: string
        coordinationDependency:
          description: >-
            A dependency between the Product Order Item and a related Product
            Order Item
          $ref: "#/components/schemas/MEFOrderItemCoordinationDependencyType"
        coordinatedActionDelay:
          description:
            The period of time for which the coordinated action is delayed.
          $ref: "#/components/schemas/Duration"
      required:
        - coordinatedActionDelay
        - coordinationDependency
        - itemId
      type: object
    MEFOrderItemCoordinationDependencyType:
      description: |
        Possible values of the Order Item Coordination Dependency

        | OrderItemCoordinationDependencyType | MEF 57.2         |
        | ----------------------------------- | ---------------- |
        | startToStart                        | START_TO_START   |
        | startToFinish                       | START_TO_FINISH  |
        | finishToStart                       | FINISH_TO_START  |
        | finishToFinish                      | FINISH_TO_FINISH |
      enum:
        - startToStart
        - startToFinish
        - finishToStart
        - finishToFinish
      type: string
    MEFPriceType:
      description:
        Indicates if the price is for recurring or non-recurring charges.
      enum:
        - recurring
        - nonRecurring
        - usageBased
      type: string
    MEFProductActionType:
      description: |
        Action to be performed on the Product that the Order Item refers to.

        | ProductActionType | MEF 57.2   |
        | ----------------- | ---------- |
        | add               | INSTALL    |
        | modify            | CHANGE     |
        | delete            | DISCONNECT |
      enum:
        - add
        - modify
        - delete
      type: string
    MEFProductConfiguration:
      description: >-
        MEFProductConfiguration is used as an extension point for MEF specific
        product/service payload.  The `@type` attribute is used as a
        discriminator
      discriminator:
        propertyName: "@type"
      properties:
        "@type":
          description: >-
            The name of the type, defined in the JSON schema specified  above,
            for the product that is the subject of the Product Order Request.
            The named type must be a subclass of MEFProductConfiguration.
          type: string
      required:
        - "@type"
      type: object
    MEFProductOrderItemRef:
      description: It's a ProductOrder item
      properties:
        productOrderHref:
          description: Reference of the related ProductOrder.
          type: string
        productOrderItemId:
          description: Id of an Item within the Product Order
          type: string
        productOrderId:
          description: Unique identifier of a ProductOrder.
          type: string
      required:
        - productOrderId
        - productOrderItemId
      type: object
    MEFProductOrderItemStateChange:
      description: >-
        Holds the State notification reasons and associated date the State
        changed, populated by the server
      properties:
        changeReason:
          description: Additional comment related to state change.
          type: string
        changeDate:
          description: The date on when the state was reached
          format: date-time
          type: string
        state:
          description: Reached state
          $ref: "#/components/schemas/MEFProductOrderItemStateType"
      type: object
    MEFProductOrderItemStateType:
      description: |
        Possible values for the state of the Order Item

        The following mapping has been used between `MEFProductOrderItemStateType` and MEF
        57.2:

        | MEFProductOrderItemStateType | MEF 57.2                                |
        | ---------------------------- | --------------------------------------- |
        | acknowledged                 | ACKNOWLEDGED                            |
        | cancelled                    | CANCELLED                               |
        | completed                    | COMPLETED                               |
        | failed                       | FAILED                                  |
        | held                         | HELD                                    |
        | inProgress                   | IN_PROGRESS                             |
        | pending                      | PENDING                                 |
        | rejected                     | REJECTED                                |
        | rejected.validated           | VALIDATED                               |
        | rejected.unassessed          | UNASSESSED                              |
      enum:
        - acknowledged
        - cancelled
        - completed
        - failed
        - held
        - inProgress
        - pending
        - rejected
        - rejected.validated
        - rejected.unassessed
      type: string
    MEFProductOrderItem_Common:
      description: >
        An identified part of the order. A product order is decomposed into one
        or more order items.
      properties:
        relatedBuyerPON:
          description: >-
            Identifies the Buyer Purchase Product Order Number that is related
            to this Product Order.
          type: string
        note:
          items:
            $ref: "#/components/schemas/Note"
          type: array
        product:
          description: >-
            The Buyer's existing Product for which the Product Order is being
            requested. Set by the Buyer if the Product Action is modify or
            delete.
          $ref: "#/components/schemas/MEFProductRefOrValueOrder"
        relatedContactInformation:
          description: >-
            Contact information of an individual or organization playing a role
            for this Order Item.

            The rule for mapping a represented attribute

            value to a `role` is to use the _lowerCamelCase_ pattern e.g.

            - Buyer Product Order Item Contact:
            `role=buyerProductOrderItemContact`

            - Buyer Implementation Contact: `role=buyerImplementationContact`

            - Buyer Technical Contact : `role=buyerTechnicalContact`
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          type: array
        requestedItemTerm:
          description: Requested term of the Product Order Item
          $ref: "#/components/schemas/MEFItemTerm"
        billingAccount:
          description: >-
            References the billing arrangement that a buyer has with a seller
            that provides products to the customer.
          $ref: "#/components/schemas/MEFBillingAccount"
        productOrderItemRelationship:
          description:
            The relationship between Product Order Items in the Product Order.
          items:
            $ref: "#/components/schemas/OrderItemRelationship"
          type: array
        tspRestorationPriority:
          description: >
            Within the United States, indicates the provisioning and restoration
            priority as defined under the TSP Service Vendor Handbook. The valid
            values are defined in ATIS OBF document: ATIS-0404001.
          type: string
        productOfferingQualificationItem:
          description: >-
            The POQ and POQ Item associated to this Product Order Item. The
            relation may be required by the Seller. In that case, this is a
            mandatory field. If the Seller does not require the POQ Item
            reference, then this is an optional attribute.
          $ref: "#/components/schemas/ProductOfferingQualificationItemRef"
        coordinatedAction:
          description: >-
            The interval after the completion of one or more related Product
            Order Items that this Product Order Item can be started or completed
          items:
            $ref: "#/components/schemas/MEFOrderItemCoordinatedAction"
          type: array
        action:
          description: >-
            Action to be applied to this portion of the Product Order to the
            product referred by this Product Order Item
          $ref: "#/components/schemas/MEFProductActionType"
        quoteItem:
          description: >-
            The Quote Item associated to this Product Order Item. The Quote Item
            reference may be required by the Seller. In that case, this is a
            mandatory field. If the Seller does not require the Quote, then this
            is an optional attribute.
          $ref: "#/components/schemas/MEFQuoteItemRef"
        endCustomerName:
          description: >-
            The name of the End Customer, either a business name or an
            individual name depending on the end customer.
          type: string
        expediteIndicator:
          default: false
          description: >-
            Indicates that expedited treatment is requested. Set by the Buyer.
            If this is set to TRUE, the Buyer sets the Requested Completion Date
            to the expedited date. See MEF 57.2 section 7.2 for a description of
            the interaction between the Buyer and the Seller.
          type: boolean
        id:
          description: >
            Identifier of the item (generally it is a sequence number 01, 02,
            03, ...)  MEF: A Buyer provided identifier to identify Product Order
            Items and to be able to relate them to one another. This is set by
            the Buyer and is unique within the Product Order. Examples of
            Reference Identifier could be 1, 2, 3 or A, B, C. The Reference
            Identifier can be reused in multiple Product Orders to identify a
            Product Order Item within that Product Order.
          type: string
        requestedCompletionDate:
          description:
            Identifies the Buyer's desired due date (requested delivery date)
          format: date-time
          type: string
      required:
        - action
        - id
      type: object
    MEFProductOrderItem_Create:
      allOf:
        - $ref: "#/components/schemas/MEFProductOrderItem_Common"
        - description: >
            An identified part of the order. A product order is decomposed into
            one or more order items.
          type: object
    MEFProductOrderItem_Update:
      description: |
        An updatable representation of the Product Order Item.
      properties:
        relatedBuyerPON:
          description: >-
            Identifies the Buyer Purchase Product Order Number that is related
            to this Product Order.
          type: string
        note:
          items:
            $ref: "#/components/schemas/Note"
          type: array
        relatedContactInformation:
          description: >-
            Contact information of an individual or organization playing a role
            for this Order Item.

            The rule for mapping a represented attribute

            value to a `role` is to use the _lowerCamelCase_ pattern e.g.

            - Buyer Product Order Item Contact:
            `role=buyerProductOrderItemContact`

            - Buyer Implementation Contact: `role=buyerImplementationContact`

            - Buyer Technical Contact : `role=buyerTechnicalContact`
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          type: array
        endCustomerName:
          description: >-
            The name of the End Customer, either a business name or an
            individual name depending on the end customer.
          type: string
        id:
          description: >
            Identifier of the Item. This is to address the Item to be updated
            within the Product Order. The id itself cannot be updated.
          type: string
      required:
        - id
      type: object
    MEFProductOrderRef:
      description: Holds the MEF Product Order reference
      properties:
        productOrderHref:
          description: Hyperlink to access the order
          type: string
        productOrderId:
          description: >-
            Unique (within the ordering domain) identifier for the order that is
            generated by the seller when the order is initially accepted.
          type: string
      type: object
    MEFProductOrderStateChange:
      description: >-
        Holds the State notification reasons and associated date the State
        changed, populated by the server
      properties:
        changeReason:
          description: Additional comment related to state change
          type: string
        changeDate:
          description: The date on when the state was reached
          format: date-time
          type: string
        state:
          description: Reached state
          $ref: "#/components/schemas/MEFProductOrderStateType"
      type: object
    MEFProductOrderStateType:
      description: |
        Possible values for the state of the order
        The following mapping has been used between `MEFProductOrderStateType` and MEF
        57.2:

        | MEFProductOrderStateType      | MEF 57.2                                |
        | ----------------------------- | --------------------------------------- |
        | acknowledged                  | ACKNOWLEDGED                            |
        | assessingCancellation         | ASSESSING_CANCELLATION                  |
        | cancelled                     | CANCELLED                               |
        | completed                     | COMPLETE                                |
        | failed                        | FAILED                                  |
        | held.assessingCharge          | ASSESSING_CHARGE                        |
        | inProgress                    | IN_PROGRESS                             |
        | partial                       | PARTIAL                                 |
        | pending.assessingModification | ASSESSING_MODIFICATION                  |
        | pendingCancellation           | CANCELLING                              |
        | rejected                      | REJECTED                                |
      enum:
        - acknowledged
        - assessingCancellation
        - cancelled
        - completed
        - failed
        - held.assessingCharge
        - inProgress
        - partial
        - pending.assessingModification
        - pendingCancellation
        - rejected
      type: string
    MEFProductRefOrValueOrder:
      description: >-
        Used by the Buyer to point to existing and/or describe the desired shape
        of the product. In case of `add` action - only `productConfiguration`
        MUST be specified. For `modify` action - both `id` and
        `productConfiguration` MUST be provided to point which product instance
        to update and to what state. In `delete` only the `id` must be provided.
      properties:
        productOffering:
          description: >-
            A particular Product Offering defines the technical and commercial
            attributes and behaviors of a Product.
          $ref: "#/components/schemas/ProductOfferingRef"
        productConfiguration:
          description: >-
            MEFProductConfiguration is used to specify the MEF specific product
            payload. This field MUST be populated if an item `action` is `add`
            or `modify`. It MUST NOT be populated when an item `action` is
            `delete`. The @type is used as a discriminator.
          $ref: "#/components/schemas/MEFProductConfiguration"
        productRelationship:
          description: >-
            A list of references to existing products that are related to the
            orderedProduct.
          items:
            $ref: "#/components/schemas/ProductRelationship"
          type: array
        id:
          description: >-
            The unique identifier of an in-service Product that is the ordering
            subject. This field MUST be populated if an item `action` is either
            `modify` or `delete`. This field MUST NOT be populated if an item
            `action` is `add`.
          type: string
        href:
          description: >-
            Hyperlink to the referenced Product. Hyperlink MAY be used by the
            Seller in responses. Hyperlink MUST be ignored by the Seller in case
            it is provided by the Buyer in a request.
          type: string
        place:
          description: >-
            The relationships between this Product Order Item and one or more
            Places as defined in the Product Specification.
          items:
            $ref: "#/components/schemas/RelatedPlaceRefOrValue"
          type: array
      type: object
    MEFQuoteItemRef:
      description: It's a Quote item that has been executed previously.
      properties:
        quoteHref:
          description: Reference of the related Quote.
          type: string
        id:
          description: Id of an Item of a Quote
          type: string
        quoteId:
          description: Unique identifier of a Quote.
          type: string
      required:
        - id
        - quoteId
      type: object
    MEFSubUnit:
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
            WHARF.
          type: string
      required:
        - subUnitNumber
        - subUnitType
      type: object
    Money:
      description: A base / value business entity used to represent money
      properties:
        unit:
          description:
            Currency (ISO4217 norm uses 3 letters to define the currency)
          type: string
        value:
          description: A positive floating point number
          format: float
          type: number
      type: object
    Note:
      description: >-
        Extra information about a given entity. Only useful in processes
        involving human interaction. Not applicable for the automated process.
      properties:
        date:
          description: Date the Note was created
          format: date-time
          type: string
        author:
          description: Author of the note
          type: string
        id:
          description: >-
            Identifier of the note within its containing entity (may or may not
            be globally unique, depending on provider implementation)
          type: string
        source:
          description: Indicates if the note is from Buyer or Seller
          $ref: "#/components/schemas/MEFBuyerSellerType"
        text:
          description: Text of the note
          type: string
      required:
        - author
        - date
        - id
        - source
        - text
      type: object
    OrderItemRelationship:
      properties:
        relationshipType:
          description: >-
            Specifies the nature of the relationship to the related Product
            Order Items. A string that is one of the relationship types
            specified in the Product Specification.
          type: string
        id:
          description: Id of the related Order Item (must be in the same Order).
          type: string
      required:
        - id
        - relationshipType
      type: object
    Price:
      description: >-
        Provides all amounts (tax included, duty free, tax rate), used currency
        and percentage to apply for Price Alteration.
      properties:
        taxRate:
          description:
            "Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax."
          format: float
          type: number
        taxIncludedAmount:
          description:
            All taxes included amount (expressed in the given currency)
          $ref: "#/components/schemas/Money"
        dutyFreeAmount:
          description:
            All taxes excluded amount (expressed in the given currency)
          $ref: "#/components/schemas/Money"
      type: object
    ProductOfferingQualificationItemRef:
      description: >-
        It's a productOfferingQualification item that has been executed
        previously.
      properties:
        productOfferingQualificationId:
          description: Unique identifier of a related entity.
          type: string
        productOfferingQualificationHref:
          description: Reference of the related entity.
          type: string
        id:
          description: Id of an item of a product offering qualification
          type: string
        alternateProductOfferingProposalId:
          description: >-
            A unique identifier for this Alternate Product Proposal assigned by
            the Seller.
          type: string
      required:
        - id
        - productOfferingQualificationId
      type: object
    ProductOfferingRef:
      description: >-
        A reference to a Product Offering offered by the Seller to the Buyer.  A
        Product Offering contains the commercial and technical details of a
        Product sold by a particular Seller. A Product Offering defines all of
        the commercial terms and, through association with a particular Product
        Specification, defines all the technical attributes and behaviors of the
        Product. A Product Offering may constrain the allowable set of
        configurable technical attributes and/or behaviors specified in the
        associated Product Specification.
      properties:
        href:
          description: >
            Hyperlink to a Product Offering in Sellers catalog. In case Seller
            is not providing a catalog capabilities this field is not used.  The
            catalog API definition is provided by the Seller to the Buyer during
            onboarding Hyperlink MAY be used by the Seller in responses  
            Hyperlink MUST be ignored by the Seller in case it is provided by
            the Buyer in a request
          type: string
        id:
          description: >-
            id of a Product Offering. It is assigned by the Seller. The Buyer
            and the Seller exchange information about offerings' ids during the
            onboarding process.
          type: string
      required:
        - id
      type: object
    ProductOrder:
      allOf:
        - $ref: "#/components/schemas/ProductOrder_Common"
        - description: >-
            A Product Order is a type of order which can be used to place an
            order between a customer and a service provider or between a service
            provider and a partner and vice versa
          properties:
            cancellationReason:
              description: >-
                An optional free-form text field for the Seller to provide
                additional information regarding the reason for the
                cancellation.
              type: string
            completionDate:
              description: >-
                Identifies the date that all Product Order Items within the
                Order have reached a terminal state. No further action is
                permitted on the Product Order.
              format: date-time
              type: string
            expectedCompletionDate:
              description: >
                Expected delivery date amended by the provider. MEF: Identifies
                the date

                the Seller expects to complete the Product Order.
              format: date-time
              type: string
            stateChange:
              description: State change for the Product Order
              items:
                $ref: "#/components/schemas/MEFProductOrderStateChange"
              type: array
            id:
              description: >-
                Unique identifier for the Product Order that is generated by the
                Seller when the Product Order is initially accepted via an API.
              type: string
            href:
              description: Hyperlink to access the order
              type: string
            orderVersion:
              description: "The version of the Product Order, set by the Seller"
              type: string
            state:
              description: >-
                Tracks the lifecycle status of the product order, such as
                Acknowledged, Rejected, InProgress, Pending and so on.
              $ref: "#/components/schemas/MEFProductOrderStateType"
            productOrderItem:
              items:
                $ref: "#/components/schemas/ProductOrderItem"
              minItems: 1
              type: array
            orderDate:
              description:
                Date when the order was created in the Seller's system
              format: date-time
              type: string
            cancellationDate:
              description: >-
                Identifies the date the Seller cancelled the Order. Set by
                Seller when the Order is moved to the cancelled state.
              format: date-time
              type: string
          required:
            - id
            - orderDate
            - productOrderItem
            - state
          type: object
    ProductOrderItem:
      allOf:
        - $ref: "#/components/schemas/MEFProductOrderItem_Common"
        - description: >
            An identified part of the order. A product order is decomposed into
            one or more order items.
          properties:
            itemTerm:
              items:
                description: Term of the Product Order Item
                $ref: "#/components/schemas/MEFItemTerm"
              maxItems: 1
              type: array
            terminationError:
              description: >-
                When the Seller cannot process the request, the Seller returns a
                text-based list of reasons here.
              items:
                $ref: "#/components/schemas/TerminationError"
              type: array
            charge:
              description: The Charges associated to this Product Order Item
              items:
                $ref: "#/components/schemas/MEFChargeRef"
              type: array
            completionDate:
              description:
                Identifies the date the Seller completed the Product Order Item.
              format: date-time
              type: string
            expectedCompletionDate:
              description: >
                Expected delivery date amended by the provider. MEF: Identifies
                the date the Seller expects to complete the Product Order Item.
              format: date-time
              type: string
            sellerItemIdentifier:
              description: >-
                A Seller provided identifier to identify the Product Order Items
                within a Product Order. This is only used when required for
                discussion between the Buyer and Seller.
              type: string
            stateChange:
              description: State change for the Product Order Item
              items:
                $ref: "#/components/schemas/MEFProductOrderItemStateChange"
              type: array
            state:
              description:
                "State of the order item : described in the state machine
                diagram"
              $ref: "#/components/schemas/MEFProductOrderItemStateType"
            expediteAcceptedIndicator:
              default: false
              description: >-
                Indicates if the Seller has accepted the Buyer's Expedite
                request. See MEF 57.2 section 7.2 for a description of the
                interaction between the Buyer and Seller. If this is set to
                true, the Seller provides the costs to expedite the Product
                Order in the charge attribute
              type: boolean
          type: object
    ProductOrder_Common:
      description: >-
        A Product Order is a type of order which  can  be used to place an order
        between a customer and a service provider or between a service provider
        and a partner and vice versa,
      properties:
        note:
          items:
            $ref: "#/components/schemas/Note"
          type: array
        relatedContactInformation:
          description: >-
            Contact information of an individual or organization playing a role
            in this context.

            (e.g. Product Order Contact: role=productOrderContact;

            Seller Contact: role=sellerContact)

            Providing the Product Order Contact in the request is mandatory.
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          minItems: 1
          type: array
        description:
          description: >-
            Description of the product order. It is a free text for Buyer
            purpose. The Seller is not obliged to read it.
          type: string
        externalId:
          description:
            An identifier for this order within the Buyer's enterprise.
          type: string
        projectId:
          description: >-
            An identifier that is used to group Orders that is important to the
            Buyer. A ProjectId can be used to relate multiple Orders together.
          type: string
        requestedCompletionDate:
          description:
            This is requested date to get this Product Order completed
          format: date-time
          type: string
      required:
        - relatedContactInformation
      type: object
    ProductOrder_Create:
      allOf:
        - $ref: "#/components/schemas/ProductOrder_Common"
        - description: >
            A Product Order is a type of order which  can  be used to place an
            order between a customer and a service provider or between a service
            provider and a partner and vice versa, Skipped properties:
            id,href,completionDate,orderDate,state,stateChange,cancellationDate,cancellationReason
          properties:
            productOrderItem:
              description: |
                Items contained in the Product Order.
              items:
                $ref: "#/components/schemas/MEFProductOrderItem_Create"
              minItems: 1
              type: array
          required:
            - productOrderItem
          type: object
    ProductOrder_Find:
      description: >-
        Structure to define GET without id response. A list of productOrder
        matching request criteria. Provides Product order summary view.
      properties:
        externalId:
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterward).

            MEF: Buyer Purchase Order Number
          type: string
        completionDate:
          description: >-
            Identifies the date that all Product Order Items within the Order
            have reached a terminal state. No further action is permitted on the
            Product Order after this notification.
          format: date-time
          type: string
        id:
          description: >-
            Unique identifier for the order that is generated by the Seller when
            the order is initially accepted via an API.
          type: string
        orderVersion:
          description:
            "The version of the Product Order, assigned by the Seller"
          type: string
        state:
          description: >-
            The states as defined by TMF622 and extended to meet MEF
            requirements. These states are used to convey the Product Order
            status during the lifecycle of the Product Order.
          $ref: "#/components/schemas/MEFProductOrderStateType"
        orderDate:
          description: Date when the order was created
          format: date-time
          type: string
        projectId:
          description: >-
            An identifier that is used to group Orders that is important to the
            Buyer. A ProjectId can be used to relate multiple Orders together.
          type: string
        cancellationDate:
          description: >-
            Identifies the date the Seller cancelled the Order. Set by Seller
            when the Order is moved to the cancelled state.
          format: date-time
          type: string
        requestedCompletionDate:
          description:
            This is requested date to get this Product Order completed
          format: date-time
          type: string
      required:
        - id
        - orderDate
        - orderVersion
        - state
      type: object
    ProductOrder_Update:
      description:
        A request initiated by the Buyer to update Product Order and/or Product
      properties:
        note:
          items:
            $ref: "#/components/schemas/Note"
          type: array
        relatedContactInformation:
          description: >
            Contact information of an individual or organization playing a role
            in this context. The Buyer is allowed to update the Product Order
            Contact: role=productOrderContact;
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          minItems: 1
          type: array
        description:
          description: >-
            Description of the product order. It is a free text for Buyer
            purpose. The Seller is not obliged to read it.
          type: string
        externalId:
          description:
            An identifier for this order within the Buyer's enterprise.
          type: string
        orderVersion:
          description: >-
            The version of the Product Order. The `orderVersion` attribute
            cannot be updated. It is used only to identify the version of the
            Product Order that the Buyer wants to update. If there is a mismatch
            with the Seller's system, the Seller will reject the request with an
            error response.
          type: string
        productOrderItem:
          description: |
            Order Item attributes that may be updated
          items:
            $ref: "#/components/schemas/MEFProductOrderItem_Update"
          type: array
        projectId:
          description: >-
            An identifier that is used to group Orders that is important to the
            Buyer. A ProjectId can be used to relate multiple Orders together.
          type: string
      required:
        - orderVersion
      type: object
    ProductRelationship:
      description: >-
        A relationship to an existing Product. The requirements for usage for
        given Product are described in the Product Specification.
      properties:
        relationshipType:
          description: >
            Specifies the type (nature) of the relationship to the related
            Product. The nature of required relationships varies for Products of
            different types. For example, a UNI or ENNI Product may not have any
            relationships, but an Access E-Line may have two mandatory
            relationships (related to the UNI on one end and the ENNI on the
            other). More complex Products such as multipoint IP or Firewall
            Products may have more complex relationships. As a result, the
            allowed and mandatory `relationshipType` values are defined in the
            Product Specification.
          type: string
        id:
          description: unique identifier
          type: string
        href:
          description: >-
            Hyperlink to the product in Seller's inventory that is referenced
            Hyperlink MAY be used when providing a response by the Seller
            Hyperlink MUST be ignored by the Seller in case it is provided by
            the Buyer in a request
          type: string
      required:
        - id
        - relationshipType
      type: object
    RelatedContactInformation:
      description: |
        Contact information of an individual or organization playing a role for
        this Order Item. The rule for mapping a represented attribute value to a
        `role` is to use the _lowerCamelCase_ pattern e.g. 
        - Buyer Order Item Contact: `role=buyerOrderItemContact` 
        - Buyer Implementation Contact: `role=buyerImplementationContact` 
        - Buyer Technical Contact: `role=buyerTechnicalContact`
      properties:
        number:
          description: Phone number
          type: string
        emailAddress:
          description: Email address
          type: string
        role:
          description: A role the party plays in a given context.
          type: string
        postalAddress:
          description: >-
            Identifies the postal address of the person or office to be
            contacted.
          $ref: "#/components/schemas/FieldedAddress"
        organization:
          description: The organization or company that the contact belongs to
          type: string
        name:
          description: Name of the contact
          type: string
        numberExtension:
          description: Phone number extension
          type: string
      required:
        - emailAddress
        - name
        - number
        - role
      type: object
    RelatedPlaceRefOrValue:
      description:
        Place defines the places where the product order must be done.
      discriminator:
        mapping:
          FieldedAddress: "#/components/schemas/FieldedAddress"
          FormattedAddress: "#/components/schemas/FormattedAddress"
          GeographicAddressRef: "#/components/schemas/GeographicAddressRef"
          GeographicSiteRef: "#/components/schemas/GeographicSiteRef"
          MEFGeographicPoint: "#/components/schemas/MEFGeographicPoint"
          GeographicAddressLabel: "#/components/schemas/GeographicAddressLabel"
        propertyName: "@type"
      properties:
        role:
          description: Role of this place
          type: string
        "@type":
          description: >
            This field is used as a discriminator and is used between different
            place representations. This type might discriminate for additional
            related place as defined in '@schemaLocation'.
          type: string
        "@schemaLocation":
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships. May be used to define additional related place types.
            Usage of this attribute must be agreed upon between Buyer and
            Seller.
          format: uri
          type: string
      required:
        - "@type"
        - role
      type: object
    TerminationError:
      description: >-
        This indicates an error that caused an Item to be terminated. The code
        and propertyPath should be used like in Error422.
      properties:
        code:
          description: |
            One of the following error codes:
              - missingProperty: The property the Seller has expected is not present in the payload
              - invalidValue: The property has an incorrect value
              - invalidFormat: The property value does not comply with the expected value format
              - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
              - unexpectedProperty: Additional property, not expected by the Seller has been provided
              - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
              - otherIssue: Other problem was identified (detailed information provided in a reason)
          $ref: "#/components/schemas/Error422Code"
        propertyPath:
          description: >
            A pointer to a particular property of the payload that caused the
            validation issue. It is highly recommended that this property should
            be used.

            Defined using JavaScript Object Notation (JSON) Pointer
            (https://tools.ietf.org/html/rfc6901).
          type: string
        value:
          description: Text to describe the reason of the termination.
          type: string
      type: object
    TimeUnit:
      description: |
        Represents a unit of time.
        Reference: MEF 57.2 (Sn 9.22)
      enum:
        - calendarMonths
        - calendarDays
        - calendarHours
        - calendarMinutes
        - businessDays
        - businessHours
        - businessMinutes
      type: string
