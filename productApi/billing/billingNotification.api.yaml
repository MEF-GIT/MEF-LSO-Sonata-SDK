openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF 141**

    **This API implements Business Requirements described in MEF 134.**

    Bill is a legal document generated by the Seller to the Buyer relating 
    to charges associated to Products provided by the Seller to the Buyer. 

    List of supported use cases:
    - Generate Invoice Notifications

    Copyright 2023 MEF Forum and its contributors

    his file includes content based on the TM Forum Customer Bill Management API (TMF678
    v4.0.0) available at https://github.com/tmforum-apis/TMF678_CustomerBill,
    which is licensed by the TM Forum under the Apache License version 2.0.
    Such content has been modified by the MEF Forum and its contributors.
  title: Billing Notification
  version: 2.0.0
servers:
  - url: "https://{serverBase}/mefApi/sonata/customerBillNotification/v2/"
    variables:
      serverBase:
        default: mef.net
        description: The base of Buyer's URL.
tags:
  - description: |
      The Buyer's endpoint to send particular event types notifications to.
    name: Notification listeners
paths:
  /listener/customerBillCreateEvent:
    post:
      description: >-
        Client listener for receiving the billCreatedEvent notification
      operationId: listen to Customer Bill Create Event
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/CustomerBillEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: "No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Client listener for customerBillCreateEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/customerBillStateChangeEvent:
    post:
      description: >-
        Client listener for receiving the customerBillStateChangeEvent notification
      operationId: listen to customer Bill State Change Event
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/CustomerBillEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: "No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Client listener for customerBillStateChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
components:
  schemas:
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    Error:
      description: >
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        message:
          description: >-
            Text that provides mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        reason:
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        referenceError:
          description: URL pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingQueryParameter: The URI is missing a required
                query-string parameter

                - missingQueryValue: The URI is missing a required query-string
                parameter value

                - invalidQuery: The query section of the URI is invalid.

                - invalidBody: The request has an invalid body
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
          type: object
      description: "Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)"
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingCredentials: No credentials provided.

                - invalidCredentials: Provided credentials are invalid or
                expired
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
          type: object
      description: "Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)"
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error403Code'
              description: |-
                This code indicates that the server understood
                the request but refuses to authorize it because
                of one of the following error codes:
                - accessDenied: Access denied
                - forbiddenRequester: Forbidden requester
                - tooManyUsers: Too many users
          required:
            - code
          type: object
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error408:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                List of supported error codes:

                - timeOut: Request Time-out - indicates that the server did not
                receive a complete request message within the time that it was
                prepared to wait.
              enum:
                - timeOut
              type: string
          required:
            - code
          type: object
      description: "Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)"
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Event:
      description: >-
        Event class is used to describe information structure used for
        notification.
      properties:
        eventId:
          description: Id of the event
          type: string
        eventTime:
          description: Date time when the event occurred
          format: date-time
          type: string
      required:
        - eventId
        - eventTime
      type: object
    CustomerBillEvent:
      allOf:
        - $ref: "#/components/schemas/Event"
        - properties:
            eventType:
              description: |
                Indicates the type of the event.
              $ref: >-
                #/components/schemas/CustomerBillEventType
            event:
              description: |
                A reference to the object that is source of the notification.
              $ref: >-
                #/components/schemas/CustomerBillEventPayload
          required:
            - event
            - eventType
          type: object
    CustomerBillEventPayload:
      description: The identifier of the Bill being subject of this event.
      properties:
        sellerId:
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when requester entity
            represents more than one Seller.
          type: string
        id:
          description: ID of the Bill attributed by quoting system
          type: string
        href:
          description: Hyperlink to access the Bill
          type: string
        buyerId:
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the responding
            represents more than one Buyer.
          type: string
      required:
        - id
      type: object
    CustomerBillEventType:
      description: Type of the Bill Event
      enum:
        - customerBillCreateEvent
        - customerBillStateChangeEvent
      type: string
