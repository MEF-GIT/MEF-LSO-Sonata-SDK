openapi: 3.0.1
info:
  title: Product Offering Availability And Pricing Discovery Management
  description: |
    **This file forms part of MEF 160**
     
    **This API implements Business Requirements described in MEF 110**

    **This specification represents MEF work in progress and is subject to
    change.**

    Product Offering Availability Discovery is a way for the Buyer to specify a
    Product Specification to the Seller and to receive from the Seller a list
    of zero or more Product Configurations.

    Pricing Discovery allows the Buyer to receive from the Seller a list of
    one or more terms and pricing information for the Product Configuration
    specified by the Buyer.

    The following use cases are managed: 

    - Retrieve Product Offering Availability
    - Retrieve Pricing for a Product Offering Configuration
  version: 1.0.0-RC
servers:
  - url: >-
      https://{serverBase}/mefApi/sonata/productOfferingAvailabilityAndPricingDiscovery/v1/
    variables:
      serverBase:
        description: The base of Seller's URL.
        default: mef.net
tags:
  - name: Product Offering Availability
  - name: Pricing Discovery
paths:
  /productOfferingAvailability:
    post:
      tags:
        - Product Offering Availability
      summary: This operation sends a Product Offering Availability Request
      operationId: productOfferingAvailabilityRequest
      parameters:
        - name: buyerId
          in: query
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          required: false
          schema:
            type: string
        - name: sellerId
          in: query
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProductOfferingAvailability_Request'
        required: true
      responses:
        '200':
          description:
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProductOfferingAvailability'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
        '422':
          description:
            Unprocessable entity due to the business validation problems
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error422'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
  /pricingDiscovery:
    post:
      tags:
        - Pricing Discovery
      summary: This operation sends a Pricing Discovery Request
      operationId: pricingDiscoveryRequest
      parameters:
        - name: buyerId
          in: query
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          required: false
          schema:
            type: string
        - name: sellerId
          in: query
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PricingDiscovery_Request'
        required: true
      responses:
        '200':
          description:
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PricingDiscovery'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
        '422':
          description:
            Unprocessable entity due to the business validation problems
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error422'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
components:
  schemas:
    Duration:
      description:
        'A Duration in a given unit of time e.g. 3 hours, or 5 days.'
      type: object
      properties:
        amount:
          description: 'Duration (number of seconds, minutes, hours, etc.)'
          type: integer
          minimum: 0
        units:
          description: Time unit enumerated
          $ref: '#/components/schemas/TimeUnit'
      required:
        - amount
        - units
    Error:
      description: >
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      type: object
      properties:
        reason:
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          type: string
          maxLength: 255
        message:
          description: >-
            Text that provides mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        referenceError:
          description: URL pointing to documentation describing the error
          type: string
          format: uri
      required:
        - reason
    Error400:
      description:
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              description: >-
                One of the following error codes:

                - missingQueryParameter: The URI is missing a required
                query-string parameter

                - missingQueryValue: The URI is missing a required query-string
                parameter value

                - invalidQuery: The query section of the URI is invalid.

                - invalidBody: The request has an invalid body
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      type: string
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error401:
      description:
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              description: >-
                One of the following error codes:

                - missingCredentials: No credentials provided.

                - invalidCredentials: Provided credentials are invalid or
                expired
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      type: string
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              description: |-
                This code indicates that the server understood
                the request but refuses to authorize it because
                of one of the following error codes:
                - accessDenied: Access denied
                - forbiddenRequester: Forbidden requester
                - tooManyUsers: Too many users
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      type: string
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error422:
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              description: |
                One of the following error codes:
                  - missingProperty: The property the Seller has expected is not present in the payload
                  - invalidValue: The property has an incorrect value
                  - invalidFormat: The property value does not comply with the expected value format
                  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                  - unexpectedProperty: Additional property, not expected by the Seller has been provided
                  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                  - otherIssue: Other problem was identified (detailed information provided in a reason)
              $ref: '#/components/schemas/Error422Code'
            propertyPath:
              description: >
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
              type: string
          required:
            - code
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      type: string
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
    Error500:
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              type: string
              enum:
                - internalError
          required:
            - code
    FieldedAddress:
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - type: object
          properties:
            country:
              description: Country that the address is in
              type: string
            streetType:
              description: >-
                The type of street (e.g., alley, avenue, boulevard, brae,
                crescent, drive, highway, lane, terrace, parade, place, tarn,
                way, wharf)
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in a US urban property address
              type: string
            city:
              description: The city that the address is in
              type: string
            streetNr:
              description: >-
                Number identifying a specific property on a public street. It
                may be combined with streetNrLast for ranged addresses. MEF 79
                defines it as required for the Seller response, however in
                certain countries it is not used, so it's optional in API.
              type: string
            locality:
              description: The locality that the address is in
              type: string
            postcode:
              description: >-
                A descriptor for a postal delivery area, used to speed and
                simplify the delivery of mail (also known as zip code) MEF 79
                defines it as required however as in certain countries it is
                not used we make it optional in API.
              type: string
            streetNrLast:
              description:
                Last number in a range of street numbers allocated to a
                property
              type: string
            streetNrSuffix:
              description: The first street number suffix
              type: string
            streetName:
              description: Name of the street or other street type
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
            streetNrLastSuffix:
              description: Last street number suffix for a ranged address
              type: string
            geographicSubAddress:
              description: >-
                Additional fields used to specify an address, as detailed as
                possible.
              $ref: '#/components/schemas/GeographicSubAddress'
            streetSuffix:
              description: A modifier denoting a relative direction
              type: string
          required:
            - city
            - country
            - streetName
    FormattedAddress:
      description: >-
        A type of Address that has discrete fields for each type of boundary or
        identifier with the exception of the street and more specific location
        details, which are combined into a maximum of two strings based on
        local postal addressing conventions.
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - type: object
          properties:
            country:
              description: Country that the address is in
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in a US urban property address
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
            city:
              description: The city that the address is in
              type: string
            addrLine2:
              description: The second address line in a formatted address
              type: string
            addrLine1:
              description: The first address line in a formatted address
              type: string
            locality:
              description: >-
                An area of defined or undefined boundaries within a local
                authority or other legislatively defined area, usually rural or
                semi-rural in nature
              type: string
            postcode:
              description: >-
                A descriptor for a postal delivery area used to speed and
                simplify the delivery of mail (also known as ZIP code)
              type: string
          required:
            - addrLine1
            - city
            - country
    GeographicAddressLabel:
      description: >-
        A unique identifier controlled by a generally accepted independent
        administrative authority that specifies a fixed geographical location.
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - type: object
          properties:
            externalReferenceId:
              description: >-
                The unique reference to an Address as provided by the
                Administrative Authority.
              type: string
            externalReferenceType:
              description: >-
                The organization or standard from the organization that
                administers this Geographic Address Label ensuring it is unique
                within the Administrative Authority. The value(s) to be used
                are to be agreed upon during the onboarding. For North American
                providers this would normally be CLLI (Common Language Location
                Identifier) code.
              type: string
          required:
            - externalReferenceId
            - externalReferenceType
    GeographicAddressRef:
      description: >
        A reference to a Geographic Address resource available through Address
        Validation API.
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - type: object
          properties:
            href:
              description: >
                Hyperlink to the referenced Address. Hyperlink MAY be used by
                the Seller in responses. Hyperlink MUST be ignored by the
                Seller in case it is provided by the Buyer in a request.
              type: string
            id:
              description: >-
                Identifier of the referenced Geographic Address. This
                identifier is assigned during a successful address validation
                request (Geographic Address Management API)
              type: string
          required:
            - id
    GeographicSiteRef:
      description: >
        A reference to a Geographic Site resource available through Service
        Site API
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - type: object
          properties:
            href:
              description: >
                Hyperlink to the referenced Site. Hyperlink MAY be used by the
                Seller in responses. Hyperlink MUST be ignored by the Seller in
                case it is provided by the Buyer in a request.
              type: string
            id:
              description: Identifier of the referenced Geographic Site.
              type: string
          required:
            - id
    GeographicSubAddress:
      description:
        'Additional fields used to specify an address, as detailed as possible.'
      type: object
      properties:
        buildingName:
          description: >
            Allows for identification of places that require building name  as
            part of addressing information
          type: string
        subUnit:
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          type: array
          items:
            $ref: '#/components/schemas/MEFSubUnit'
        levelType:
          description: Describes level types within a building
          type: string
        levelNumber:
          description:
            'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT
            2'
          type: string
        privateStreetNumber:
          description: Private streets numbers internal to a private street
          type: string
        privateStreetName:
          description: >-
            Private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office
          type: string
    MEFChargePeriod:
      description: Used for a recurring charge to indicate period.
      type: string
      enum:
        - hour
        - day
        - week
        - month
        - year
    MEFEndOfTermAction:
      description: |
        The action that needs to be taken by the Seller once the term expires.

        | Value          | Description                                                                                                            |
        | -------------- | ---------------------------------------------------------------------------------------------------------------------- |
        | roll           | The Product's contract will continue on a rolling basis once the contract's initial term ex-pires,                     |
        | autoDisconnect | The Product will automatically be disconnected (and contract terminated) by the Seller once the contract term expires, |
        | autoRenew      | The Product's contract will be renewed for another term equivalent to the original contract term.                      |
      type: string
      enum:
        - roll
        - autoDisconnect
        - autoRenew
    MEFGeographicPoint:
      description: |
        A MEFGeographicPoint defines a geographic point through coordinates.
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - type: object
          properties:
            spatialRef:
              description: >-
                The spatial reference system used to determine the coordinates
                (e.g. "WGS84"). The system used and the value of this field are
                to be agreed during the onboarding process.
              type: string
            x:
              description: >-
                The latitude expressed in the format specified by the
                `spacialRef`
              type: string
            'y':
              description: >-
                The longitude expressed in the format specified by the
                `spacialRef`
              type: string
            z:
              description: >-
                The elevation expressed in the format specified by the
                `spacialRef`
              type: string
          required:
            - spatialRef
            - x
            - 'y'
    MEFItemTerm:
      description: Describes a term (also known as commitment)
      type: object
      properties:
        duration:
          description: Duration of the term
          $ref: '#/components/schemas/Duration'
        endOfTermAction:
          description: The action the Seller will take once the term expires.
          $ref: '#/components/schemas/MEFEndOfTermAction'
        name:
          description: Name of the term
          type: string
        description:
          description: Description of the term
          type: string
        rollInterval:
          description: >-
            The recurring period that the Buyer is required to pay at the end
            of the term to extend the term after the original term has expired.
            If `endOfTermAction` is equal to `roll` then `rollInterval` MUST be
            specified. If `endOfTermAction` is equal to `autoRenew` or
            `autoDisconnect`, then `rollInterval` MUST NOT be specified.
          $ref: '#/components/schemas/Duration'
      required:
        - duration
        - endOfTermAction
        - name
    MEFPriceType:
      description:
        Indicates if the price is for recurring or non-recurring charges.
      type: string
      enum:
        - recurring
        - nonRecurring
        - usageBased
    MEFProductConfiguration:
      description: >-
        MEFProductConfiguration is used as an extension point for MEF specific
        product/service payload. The `@type` attribute is used as a
        discriminator
      type: object
      properties:
        '@type':
          description: >-
            The name of the type that uniquely identifies the type of the
            product that is the subject of the POQ Request. In case of MEF
            product this is the URN provided in the Product Specification.
          type: string
      required:
        - '@type'
      discriminator:
        propertyName: '@type'
    MEFSubUnit:
      description: Allows for sub unit identification
      type: object
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          type: string
      required:
        - subUnitNumber
        - subUnitType
    Money:
      description: A base/value business entity used to represent money
      type: object
      properties:
        unit:
          description:
            Currency (ISO4217 norm uses 3 letters to define the currency)
          type: string
        value:
          description: A positive floating point number
          type: number
          format: float
      required:
        - unit
        - value
    Price:
      description: >-
        Provides all amounts (tax included, duty-free, tax rate), used currency
        and percentage to apply for Price Alteration.
      type: object
      properties:
        taxRate:
          description:
            'Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax.'
          type: number
          format: float
        taxIncludedAmount:
          description:
            All taxes included amount (expressed in the given currency)
          $ref: '#/components/schemas/Money'
        dutyFreeAmount:
          description:
            All taxes excluded amount (expressed in the given currency)
          $ref: '#/components/schemas/Money'
      required:
        - dutyFreeAmount
    PricingAndTerm:
      description:
        Pricing and term specification for an available Product Configuration
      properties:
        identifier:
          description: The identifier of the Pricing and Term.
          type: string
        installationInterval:
          description: >
            The indicative duration >0 for the delivery of the configuration in
            the specified Delivery Context when manual work is required. The
            shortest interval is specified by the Seller. It is not considered
            a commitment by the Seller.
          $ref: '#/components/schemas/Duration'
        term:
          description: >-
            The minimum term for this PricingAndTerm for the given
            productConfigurationIdentifier within the requested Delivery
            Context.
          $ref: '#/components/schemas/MEFItemTerm'
        validFor:
          description: >-
            The date that the PricingAndTerm is valid until. For use in the
            context of this attribute, only the endDateTime attribute must be
            used.
          $ref: '#/components/schemas/TimePeriod'
        price:
          description: >-
            The prices that apply to this PricingAndTerm for the given Product
            Configuration within the requested Delivery Context.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/QuotePrice'
        subjectToAdditionalNonrecurringCharges:
          description: >-
            An indicator to inform the Buyer that additional non-recurring
            charges may be added during fulfillment.
          type: boolean
        firm:
          description: >-
            An indicator specifying whether or not this charge may change
            during fulfillment.
          type: boolean
        productOffering:
          description: >
            A reference for the Product Offering that this configuration must
            be ordered as.
          $ref: '#/components/schemas/ProductOfferingRef'
      required:
        - firm
        - identifier
        - installationInterval
        - price
        - productOffering
        - subjectToAdditionalNonrecurringCharges
        - term
        - validFor
    PricingDiscovery:
      allOf:
        - $ref: '#/components/schemas/PricingDiscovery_Common'
        - description: >-
            PricingDiscovery allows the Seller to provide the list of Pricing
            and Terms matching action, delivery context and Product
            Configuration Identifier provided by the Buyer
          type: object
          properties:
            pricingAndTerms:
              description: Pricing and terms matching Buyer's criteria
              type: array
              items:
                $ref: '#/components/schemas/PricingAndTerm'
          required:
            - pricingAndTerms
    PricingDiscovery_Common:
      description: >-
        A set of attribute common to PricingDiscovery_Request and
        PricingDiscovery
      type: object
      properties:
        action:
          description: >-
            The action to be performed by the Seller to fulfill any Order that
            results from this interaction.
          $ref: '#/components/schemas/ProductActionAddModifyType'
        productConfigurationIdentifier:
          description: >
            The identifier for the Product Configuration Pricing Discovery is
            being requested for.
          type: string
        productRef:
          description: |
            A reference to a Product in the Product Inventory
          $ref: '#/components/schemas/ProductRef'
        productRelationship:
          description: >-
            A list of Product Relationships as defined by the Product
            Specification.
          type: array
          items:
            $ref: '#/components/schemas/ProductRelationship'
        place:
          description: >-
            A list of Addresses or Sites and their roles with relation to the
            Product.
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
      required:
        - action
        - productConfigurationIdentifier
    PricingDiscovery_Request:
      allOf:
        - $ref: '#/components/schemas/PricingDiscovery_Common'
        - description: >-
            Pricing Discovery Request allows the Buyer to provide the action,
            delivery context and Product Configuration Identifier to ask the
            Seller to provide a list of available Pricing and Terms
          type: object
    ProductActionAddModifyType:
      description: |
        Action to be performed on the Product.

        The following mapping has been used between `ProductActionType` and MEF
        110:

        | ProductActionType | MEF 110    |
        |------------------ | ---------- |
        | add               | INSTALL    |
        | modify            | CHANGE     |
      type: string
      enum:
        - add
        - modify
    ProductOfferingAvailability:
      description: >-
        Product Offering Availability allows the Seller to provide the list of
        Product Offering Configurations matching action, delivery context and
        Product Specification provided by the Buyer
      allOf:
        - $ref: '#/components/schemas/ProductOfferingAvailability_Common'
        - type: object
          properties:
            availableProductOfferingConfigurations:
              type: array
              minItems: 0
              items:
                $ref: '#/components/schemas/ProductOfferingConfiguration'
          required:
            - availableProductOfferingConfigurations
    ProductOfferingAvailability_Common:
      description: >
        Common attributes for ProductOfferingAvailability_Request and
        ProductOfferingAvailability
      type: object
      properties:
        action:
          description: >-
            The action to be performed by the Seller to fulfil any Order that
            results from this interaction.
          $ref: '#/components/schemas/ProductActionAddModifyType'
        productRef:
          description: >
            A reference to a Product in the Product Inventory. It MUST be
            provided when the `action` = `modify`. It MUST NOT be provided when
            the `action` = `add`
          $ref: '#/components/schemas/ProductRef'
        productSpecification:
          description: >-
            A reference to a Product Specification used to describe the
            Product. This MUST be provided when the `action` is `add`. It MUST
            NOT be provided when the `action` = `modify`
          $ref: '#/components/schemas/ProductSpecificationRef'
        productRelationship:
          description: >-
            A list of Product Relationships as defined by the Product
            Specification.
          type: array
          items:
            $ref: '#/components/schemas/ProductRelationship'
        place:
          description: >-
            A list of Addresses or Sites and their roles with relation to the
            Product.
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
      required:
        - action
        - product
    ProductOfferingAvailability_Request:
      description: >-
        Product Offering Availability Request allows the Buyer to provide the
        action, delivery context and Product Specification to ask the Seller to
        provide a list of available Product Offering Configurations.
      allOf:
        - $ref: '#/components/schemas/ProductOfferingAvailability_Common'
        - type: object
    ProductOfferingConfiguration:
      description: >-
        Allows the Seller to provide a detailed information of Product
        Configuration matching Buyer's Product Offering Availability Request.
      type: object
      properties:
        productOffering:
          description: >
            A reference for the Product Offering that this configuration must
            be ordered as.
          $ref: '#/components/schemas/ProductOfferingRef'
        productConfigurationIdentifier:
          description: >
            An identifier of the returned `productConfiguration` that can be
            used in next step for Pricing Discovery
          type: string
        productConfiguration:
          description: >-
            MEFProductConfiguration is used to specify the product specific
            attributes. The @type is used as a discriminator. It holds the
            detailed configuration of the product attributes.
          $ref: '#/components/schemas/MEFProductConfiguration'
        installationInterval:
          description: >
            The indicative duration >0 for the delivery of the configuration in
            the specified Delivery Context when manual work is required. The
            shortest interval is specified by the Seller. It is not considered
            a commitment by the Seller.
          $ref: '#/components/schemas/Duration'
      required:
        - installationInterval
        - productConfiguration
        - productConfigurationIdentifier
        - productOffering
    ProductOfferingRef:
      description:
        A reference to a Product Offering offered by the Seller to the Buyer.
      type: object
      properties:
        href:
          description: >
            Hyperlink to a Product Offering in Sellers catalog. In case Seller
            is not providing a catalog API this field is not used. The catalog
            is provided by the Seller to the Buyer during onboarding. Hyperlink
            MAY be used by the Seller in responses   Hyperlink MUST be ignored
            by the Seller in case it is provided by the Buyer in a request.
          type: string
        id:
          description: >-
            id of a Product Offering. It is assigned by the Seller. The Buyer
            and the Seller exchange information about offerings' ids during the
            onboarding process.
          type: string
      required:
        - id
    ProductRef:
      description: A reference to a Product in the Product Inventory
      type: object
      properties:
        id:
          description: Unique identifier of a Product
          type: string
        href:
          description: >-
            Hyperlink to a Product instance in Sellers Product Inventory.
            Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be
            ignored by the Seller in case it is provided by the Buyer in a
            request.
          type: string
      required:
        - id
    ProductRelationship:
      description: >-
        A relationship to an existing Product. The requirements for usage for
        given Product are described in the Product Specification.
      type: object
      properties:
        href:
          description: >-
            Hyperlink to the product in Seller's inventory that is referenced
            Hyperlink MAY be used when providing a response by the Seller
            Hyperlink MUST be ignored by the Seller in case it is provided by
            the Buyer in a request
          type: string
        id:
          description: Unique identifier of the related Product
          type: string
        relationshipType:
          description: >
            Specifies the type (nature) of the relationship to the related
            Product. The nature of required relationships varies for Products
            of different types. For example, a UNI or ENNI Product may not have
            any relationships, but an Access E-Line may have two mandatory
            relationships (related to the UNI on one end and the ENNI on the
            other). More complex Products such as multipoint IP or Firewall
            Products may have more complex relationships. As a result, the
            allowed and mandatory `relationshipType` values are defined in the
            Product Specification.
          type: string
      required:
        - id
        - relationshipType
    ProductSpecificationRef:
      description: >-
        A reference to a structured set of well-defined technical attributes
        and/or behaviors that are used to construct a Product Offering for sale
        to a market.
      type: object
      properties:
        href:
          description: >
            Hyperlink to a Product Specification in Sellers catalog. In case
            Seller is not providing a catalog API this field is not used. The
            catalog is provided by the Seller to the Buyer during onboarding.
            Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be
            ignored by the Seller in case it is provided by the Buyer in a
            request.
          type: string
        id:
          description: Unique identifier of the Product Specification
          type: string
      required:
        - id
    QuotePrice:
      description: Description of price and discount awarded
      type: object
      properties:
        name:
          description: Name of the price
          type: string
        description:
          description: Description of the price
          type: string
        priceType:
          description: >-
            Indicates if the price is for recurring, non-recurring, or usage
            based charges
          $ref: '#/components/schemas/MEFPriceType'
        unitOfMeasure:
          description: >-
            Unit of Measure if price depending on it (Gb, SMS volume, etc..)
            MSU be specified when `priceType` is `usageBased`
          type: string
        price:
          description: The associated price
          $ref: '#/components/schemas/Price'
        recurringChargePeriod:
          description: >-
            The recurring duration for which this charge will be applied. MUST
            be provided if `priceType is `recurring`
          $ref: '#/components/schemas/MEFChargePeriod'
      required:
        - name
        - price
        - priceType
    RelatedPlaceRefOrValue:
      description: >-
        Place defines the places (locations) where the products being subject
        of this qualification are to be provided.
      type: object
      properties:
        role:
          description: >-
            Role of this place. The values that can be specified here are
            described by Product Specification (e.g. "INSTALL_LOCATION").
          type: string
        '@type':
          description: >
            This field is used as discriminator. The value is the name of one
            of the types that inherit from it using 'allOf', i.e. one of
            FieldedAddress, FormattedAddress, GeographicAddressLabel,
            MEFGeographicPoint, GeographicAddressRef, GeographicSiteRef.
            Moreover, it might discriminate for an additional related place as
            defined in '@schemaLocation'.
          type: string
        '@schemaLocation':
          description: >-
            A URL to a JSON-Schema file that defines additional attributes and
            relationships. May be used to define additional related place
            types. Usage of this attribute must be agreed between Buyer and
            Seller.
          type: string
          format: uri
      required:
        - '@type'
        - role
      discriminator:
        propertyName: '@type'
        mapping:
          FieldedAddress: '#/components/schemas/FieldedAddress'
          FormattedAddress: '#/components/schemas/FormattedAddress'
          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'
          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    TimePeriod:
      description: >-
        A period of time, either as a deadline (endDateTime only) a
        startDateTime only, or both.
      type: object
      properties:
        startDateTime:
          description: >-
            Start of the time period, using IETC-RFC-3339 format. If you define
            a start, you must also define an end
          type: string
          format: date-time
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
    TimeUnit:
      description: |
        Represents a unit of time.
      type: string
      enum:
        - calendarMonths
        - calendarDays
        - calendarHours
        - calendarMinutes
        - businessDays
        - businessHours
        - businessMinutes
