openapi: 3.0.1
info:
  description: >
    **This file forms part of MEF W124**

    **This specification represents MEF work in progress and is subject to
    change.** 


    Copyright 2021 MEF Forum and its contributors


    This file includes content based on the TM Forum Trouble Ticket API (TMF621
    v4.0.0) available at https://github.com/tmforum-apis/TMF621_TroubleTicket,
    which is licensed by the TM Forum under the Apache License version 2.0. Such
    content has been modified by the MEF Forum and its contributors.
  title: Trouble Ticket
  version: 1.0.0-RC
servers:
  - url: "https://serverRoot/mefApi/sonata/troubleTicket/v1/"
tags:
  - name: troubleTicket
  - name: troubleTicket operations
  - name: events subscription
paths:
  /troubleTicket:
    get:
      description: >
        The Buyer requests a list of Trouble Tickets from the Seller based on a
        set

        of specified filter criteria. The Seller returns a summarized list of
        Trouble Tickets.
      operationId: listTroubleTicket
      parameters:
        - description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
          in: query
          name: externalId
          schema:
            type: string
        - description: >-
            The priority (ITIL) is based on the assessment of the impact and
            urgency of how quickly the Ticket should be resolved as evaluated by
            the Buyer. The Priority is used by the Seller to determine the order
            in which Tickets get resolved across Buyers.
          in: query
          name: priority
          schema:
            enum:
              - low
              - medium
              - high
              - critical
            type: string
        - description: >-
            The priority (ITIL) is based on the assessment of the impact and
            urgency of how quickly the Ticket should be resolved after
            evaluation by the Seller of the impact of the Issue on the Buyer.
          in: query
          name: sellerPriority
          schema:
            enum:
              - low
              - medium
              - high
              - critical
            type: string
        - description: >-
            The severity or impact (ITIL) of the Ticket as evaluated by the
            Buyer.
          in: query
          name: severity
          schema:
            enum:
              - minor
              - moderate
              - significant
              - extensive
            type: string
        - description: >-
            The severity or impact (ITIL) of the Ticket on the Buyer as
            evaluated by the Seller.
          in: query
          name: sellerSeverity
          schema:
            enum:
              - minor
              - moderate
              - significant
              - extensive
            type: string
        - description:
            The presumed cause of the trouble ticket as evaluated by the Buyer.
          in: query
          name: ticketType
          schema:
            enum:
              - assistance
              - degraded
              - down
              - failure
              - installation
              - maintenance
            type: string
        - description: The current status of the trouble ticket
          in: query
          name: status
          schema:
            enum:
              - acknowledged
              - assessingCancellation
              - cancelled
              - closed
              - inProgress
              - pending
              - resolved
              - reopened
            type: string
        - description: >-
            ID of a related entity that this ticket is related to and is present
            in the `relatedEntity` list
          in: query
          name: relatedEntityId
          schema:
            type: string
        - description: >-
            Type of a related entity that this ticket is related to and is
            present in the `relatedEntity` list
          in: query
          name: relatedEntityType
          schema:
            default: Product
            type: string
        - description:
            The date on which the trouble ticket was created - greater than
          in: query
          name: creationDate.gt
          schema:
            format: date-time
            type: string
        - description:
            The date on which the trouble ticket was created - lower than
          in: query
          name: creationDate.lt
          schema:
            format: date-time
            type: string
        - description: >-
            The date provided by the Seller to indicate when the Ticket is
            expected to be resolved - greater than
          in: query
          name: expectedResolutionDate.gt
          schema:
            format: date-time
            type: string
        - description: >-
            The date provided by the Seller to indicate when the Ticket is
            expected to be resolved - lower than
          in: query
          name: expectedResolutionDate.lt
          schema:
            format: date-time
            type: string
        - description: >-
            The date the Ticket status was set to resolved by the Seller -
            greater than
          in: query
          name: resolutionDate.gt
          schema:
            format: date-time
            type: string
        - description: >-
            The date the Ticket status was set to resolved by the Seller - lower
            than
          in: query
          name: resolutionDate.lt
          schema:
            format: date-time
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
        - description:
            Requested index for start of resources to be provided in response
          in: query
          name: offset
          schema:
            type: integer
        - description: Requested number of resources to be provided in response
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/TroubleTicket_Find"
                type: array
          description: "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              schema:
                type: boolean
            X-Total-Count:
              description: >
                The total number of matching records. E.g. if there are 50
                matching records in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of records included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: List or find Trouble Ticket objects
      tags:
        - troubleTicket
    post:
      description: >-
        A request initiated by the Buyer to create a Ticket in the Seller's
        system to report an Issue experienced by the Buyer
      operationId: createTroubleTicket
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/TroubleTicket_Create"
        description: The TroubleTicket to be created
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/TroubleTicket"
          description:
            "Created  (https://tools.ietf.org/html/rfc7231#section-6.3.2)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Creates a TroubleTicket
      tags:
        - troubleTicket
      x-codegen-request-body-name: troubleTicket
  "/troubleTicket/{id}":
    get:
      description: >-
        The Buyer requests detailed information about a single Ticket based on a
        Ticket Identifier.
      operationId: retrieveTroubleTicket
      parameters:
        - description: Identifier of the TroubleTicket
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/TroubleTicket"
          description: "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Retrieves a TroubleTicket by ID
      tags:
        - troubleTicket
    patch:
      description: >-
        A request by the Buyer to patch a Ticket created by the Buyer in the
        Seller's system.
      operationId: patchTroubleTicket
      parameters:
        - description: Identifier of the TroubleTicket
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/TroubleTicket_Update"
        description: The TroubleTicket to be updated
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/TroubleTicket"
          description: Updated
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error409"
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Updates partially a TroubleTicket
      tags:
        - troubleTicket
      x-codegen-request-body-name: troubleTicket
  "/troubleTicket/{id}/cancel":
    post:
      description: This operation sends a cancellation request.
      operationId: cancelTroubleTicket
      parameters:
        - description: Identifier of the TroubleTicket
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "204":
          description: Cancelled
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Cancels a Trouble Ticket
      tags:
        - troubleTicket operations
  "/troubleTicket/{id}/close":
    post:
      description: This operation closes a Trouble Ticket
      operationId: closeTroubleTicket
      parameters:
        - description: Identifier of the TroubleTicket
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "204":
          description: Closed
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Closes a Trouble Ticket
      tags:
        - troubleTicket operations
  "/troubleTicket/{id}/reopen":
    post:
      description: This operation reopens the Trouble Ticket.
      operationId: reopenTroubleTicket
      parameters:
        - description: Identifier of the TroubleTicket
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Reason"
        description: The reason for reopening.
        required: true
      responses:
        "204":
          description: Reopened
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: "#/components/schemas/Error422"
                type: array
          description:
            Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Reopens a Trouble Ticket
      tags:
        - troubleTicket operations
      x-codegen-request-body-name: reason
  /hub:
    post:
      description: The Buyer requests to subscribe to Ticket Notifications.
      operationId: registerListener
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/EventSubscriptionInput"
        description:
          Data containing the callback endpoint to deliver the information
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EventSubscription"
          description:
            "Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: >-
        Allows the Buyer to register to Trouble Ticket state change
        notifications
      tags:
        - events subscription
      x-codegen-request-body-name: data
  "/hub/{id}":
    delete:
      description: The Buyer requests to unsubscribe from Ticket Notifications
      operationId: unregisterListener
      parameters:
        - description: The id of the EventSubscription
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
            represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        "204":
          description:
            "Deleted (https://tools.ietf.org/html/rfc7231#section-6.3.5)"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      summary: Unregister a listener
      tags:
        - events subscription
components:
  schemas:
    AttachmentValue:
      description: >-
        Complements the description of an element (for instance a product)
        through video, pictures...
      properties:
        size:
          description: The size of the attachment.
          $ref: "#/components/schemas/MEFByteSize"
        author:
          description: Author of the Attachment
          type: string
        name:
          description: The name of the attachment
          type: string
        description:
          description: A narrative text describing the content of the attachment
          type: string
        attachmentId:
          description: >-
            locally unique identifier to distinguish items from the Attachment
            list.
          type: string
        mimeType:
          description: >-
            Attachment mime type such as extension file for video, picture and
            document
          type: string
        source:
          description:
            Indicates if the Attachment was added by the Buyer or Seller.
          $ref: "#/components/schemas/MEFBuyerSellerType"
        creationDate:
          description: The date the Attachment was added.
          format: date-time
          type: string
        content:
          description: >-
            The actual contents of the attachment object, if embedded, encoded
            as base64
          type: string
        url:
          description: URL where the attachment is located.
          type: string
      type: object
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    DataSizeUnit:
      description: The unit of measure in the data size.
      enum:
        - BYTES
        - KBYTES
        - MBYTES
        - GBYTES
        - TBYTES
        - PBYTES
        - EBYTES
        - ZBYTES
        - YBYTES
      type: string
    Error:
      description: >
        Standard Class used to describe API response error

        Not intended to be use directly only via specialization which defines a
        code
      properties:
        reason:
          description: >-
            Text that explains the reason for error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        message:
          description: >-
            Text that provide mode details and corrective actions related to the
            error. This can be shown to a client user.
          type: string
        referenceError:
          description: url pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingQueryParameter: The URI is missing a required
                query-string parameter

                - missingQueryValue: The URI is missing a required query-string
                parameter value

                - invalidQuery: The query section of the URI is invalid.

                - invalidBody: The request has an invalid body
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
          type: object
      description:
        "Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)"
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingCredentials: No credentials provided.

                - invalidCredentials: Provided credentials are invalid or
                expired
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
          type: object
      description:
        "Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)"
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: |-
                This code indicates that the server understood
                the request but refuses to authorize it because
                of one of the following error codes:
                - accessDenied: Access denied
                - forbiddenRequester: Forbidden requester
                - tooManyUsers: Too many users
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
          type: object
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error404:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                The following error code:

                - notFound: A current representation for the target resource not
                found
              enum:
                - notFound
              type: string
          required:
            - code
          type: object
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error405:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: |-
                The following error code::
                - methodNotAllowed: Requested method is not supported
              enum:
                - methodNotAllowed
              type: string
          required:
            - code
          type: object
      description: >-
        Method not allowed. This should be used to notify that the method is
        known by the origin server but not supported.
    Error409:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                The following error code:

                - conflict: The client has provided a value whose semantics are
                not appropriate for the property.
              enum:
                - conflict
              type: string
          required:
            - code
          type: object
      description:
        "Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)"
    Error422:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: |
                One of the following error codes:
                  - missingProperty: The property the Seller has expected is not present in the payload
                  - invalidValue: The property has an incorrect value
                  - invalidFormat: The property value does not comply with the expected value format
                  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                  - unexpectedProperty: Additional property, not expected by the Seller has been provided
                  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                  - otherIssue: Other problem was identified (detailed information provided in a reason)
              $ref: "#/components/schemas/Error422Code"
            propertyPath:
              description: >
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
              type: string
          required:
            - code
          type: object
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
      type: string
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            code:
              description: >-
                One of the following error codes:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    EventSubscription:
      description: >-
        Sets the communication endpoint address the service instance must use to
        deliver notification information
      properties:
        query:
          description: >-
            This attribute is used to define notification registration
            constraints.
          type: string
        callback:
          description: >-
            The value provided by the Buyer in `EventSubscriptionInput` during
            notification registration
          type: string
        id:
          description: >-
            An identifier of the event subscription assigned by the Seller when
            a resource is created.
          type: string
      required:
        - callback
        - id
      type: object
    EventSubscriptionInput:
      description: This class is used to register for Notifications.
      properties:
        query:
          description: >-
            This attribute is used to define to which type of events to register
            to. Example: "query":"eventType = troubleTicketStatusChangeEvent".
            To subscribe for more than one event type, put the values separated
            by comma:
            `eventType=troubleTicketStatusChangeEvent,troubleTicketResolvedEvent`.
            The possible values are enumerated by the 'TroubleTicketEventType'
            in troubleTicketNotification.api.yaml. An empty query is treated as
            specifying no filters - ending in  subscription for all event types.
          type: string
        callback:
          description: >-
            This callback value must be set to *host* property from Buyer
            Notification API (troubleTicketNotification.api.yaml). This property
            is appended with the base path and notification resource path
            specified in that API to construct an URL to which notification is
            sent. E.g. for "callback": "http://buyer.co/listenerEndpoint", the
            state change event notification will be sent to:
            `http://buyer.co/listenerEndpoint/mefApi/sonata/troubleTicketNotification/v1/listener/troubleTicketStatusChangeEvent`
          type: string
      required:
        - callback
      type: object
    FieldedAddress:
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
      properties:
        country:
          description: Country that the address is in
          type: string
        streetType:
          description: >-
            Alley, avenue, boulevard, brae, crescent, drive, highway, lane,
            terrace, parade, place, tarn, way, wharf
          type: string
        postcodeExtension:
          description: >-
            An extension of a postal code. E.g. the part following the dash in
            an american urban property address
          type: string
        city:
          description: The city that the address is in
          type: string
        streetNr:
          description: >-
            Number identifying a specific property on a public street. It may be
            combined with streetNrLast for ranged addresses.
          type: string
        locality:
          description: The locality that the address is in
          type: string
        postcode:
          description: >-
            Descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also known as zip code)
          type: string
        streetNrLast:
          description:
            Last number in a range of street numbers allocated to a property
          type: string
        streetNrSuffix:
          description: The first street number suffix
          type: string
        streetName:
          description: Name of the street or other street type
          type: string
        stateOrProvince:
          description: The State or Province that the address is in
          type: string
        streetNrLastSuffix:
          description: Last street number suffix for a ranged address
          type: string
        geographicSubAddress:
          description: >-
            Additional fields used to specify an address, as detailed as
            possible.
          $ref: "#/components/schemas/GeographicSubAddress"
        streetSuffix:
          description: A modifier denoting a relative direction
          type: string
      required:
        - city
        - country
        - streetName
      type: object
    GeographicSubAddress:
      description:
        "Additional fields used to specify an address, as detailed as possible."
      properties:
        buildingName:
          description: >
            Allows for identification of places that require building name  as
            part of addressing information
          type: string
        subUnit:
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: "#/components/schemas/MEFSubUnit"
          type: array
        levelType:
          description: Describes level types within a building
          type: string
        levelNumber:
          description:
            "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
          type: string
        id:
          description: Unique Identifier of the subAddress
          type: string
        privateStreetNumber:
          description: Private streets numbers internal to a private street
          type: string
        privateStreetName:
          description: >-
            "Private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office
          type: string
      type: object
    MEFBuyerSellerType:
      description: An enumeration with buyer and seller values.
      enum:
        - buyer
        - seller
      type: string
    MEFByteSize:
      description: A size represented by value and Byte units
      properties:
        amount:
          default: 1
          description: Numeric value in a given unit
          format: float
          type: number
        units:
          description: Byte Unit
          $ref: "#/components/schemas/DataSizeUnit"
      type: object
    MEFSubUnit:
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
            WHARF.
          type: string
      required:
        - subUnitNumber
        - subUnitType
      type: object
    Note:
      description: >-
        Extra information about a given entity. Only useful in processes
        involving human interaction. Not applicable for automated process.
      properties:
        date:
          description: Date of the note
          format: date-time
          type: string
        author:
          description: Author of the note
          type: string
        id:
          description: >-
            Identifier of the note within its containing entity (may or may not
            be globally unique, depending on provider implementation)
          type: string
        source:
          description: Indicates if this Note was added by the Buyer or Seller.
          $ref: "#/components/schemas/MEFBuyerSellerType"
        text:
          description: Text of the note
          type: string
      required:
        - author
        - date
        - id
        - source
        - text
      type: object
    Reason:
      description: An object to convey a reason for the operation.
      properties:
        reason:
          description: A text description of why given operation was requested.
          type: string
      required:
        - reason
      type: object
    RelatedContactInformation:
      description: >-
        Contact data for a person or organization that is involved in a given
        context. It is specified by the Seller (e.g. Seller Contact Information)
        or by the Buyer.
      properties:
        number:
          description: Phone number
          type: string
        emailAddress:
          description: Email address
          type: string
        role:
          description: A role the party plays in a given context.
          type: string
        postalAddress:
          description: >-
            Identifies the postal address of the person or office to be
            contacted.
          $ref: "#/components/schemas/FieldedAddress"
        organization:
          description: The organization or company that the contact belongs to
          type: string
        name:
          description: Name of the contact
          type: string
        numberExtension:
          description: Phone number extension
          type: string
      required:
        - emailAddress
        - name
        - number
        - role
      type: object
    RelatedEntity:
      description: >-
        A reference to an entity, where the type of the entity is not known in
        advance.
      properties:
        "@referredType":
          default: Product
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
          type: string
        role:
          description: The role of an entity.
          type: string
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
      required:
        - "@referredType"
        - id
        - role
      type: object
    TroubleTicket:
      allOf:
        - $ref: "#/components/schemas/TroubleTicket_Common"
        - description: >-
            A trouble ticket is a record of an issue that is created, tracked,
            and managed by a trouble ticket management system
          properties:
            statusChange:
              description: >-
                The status change history that are associated to the ticket.
                Populated by the server
              items:
                $ref: "#/components/schemas/TroubleTicketStatusChange"
              type: array
            sellerPriority:
              description: >-
                The priority (ITIL) is based on the assessment of the impact and
                urgency of how quickly the Ticket should be resolved after
                evaluation by the Seller of the impact of the Issue on the
                Buyer.
              $ref: "#/components/schemas/TroubleTicketPriorityType"
            sellerSeverity:
              description: >-
                The severity or impact (ITIL) of the Ticket on the Buyer as
                evaluated by the Seller.
              $ref: "#/components/schemas/TroubleTicketSeverityType"
            expectedResolutionDate:
              description: >-
                The date provided by the Seller to indicate when the Ticket is
                expected to be resolved
              format: date-time
              type: string
            lastUpdate:
              description:
                The date and time that the trouble ticked was last updated
              format: date-time
              type: string
            resolutionDate:
              description:
                The date the Ticket status was set to resolved by the Seller
              format: date-time
              type: string
            id:
              description: >-
                Unique (within the Seller Ticket domain) identifier for the
                Ticket.
              type: string
            href:
              description: "Hyperlink, a reference to the trouble ticket entity"
              type: string
            creationDate:
              description: The date on which the trouble ticket was created
              format: date-time
              type: string
            status:
              description: The current status of the trouble ticket
              $ref: "#/components/schemas/TroubleTicketStatusType"
          required:
            - creationDate
            - id
            - sellerPriority
            - sellerSeverity
            - status
          type: object
    TroubleTicketPriorityType:
      description: Possible values for the priority of the trouble ticket
      enum:
        - low
        - medium
        - high
        - critical
      type: string
    TroubleTicketRelationship:
      description: Represents a relationship between trouble Trouble Tickets
      properties:
        relationshipType:
          description: >-
            Type of the  Trouble Ticket relationship can be isChiled, dependent
            etc...
          type: string
        description:
          description: A description of the reason for the Relationship
          type: string
        id:
          description: Unique identifier of the referenced Trouble Ticket
          type: string
        href:
          description: Reference of the referenced Trouble Ticket
          type: string
        source:
          description:
            Indicates if this Related Object was added by the Buyer or Seller.
          $ref: "#/components/schemas/MEFBuyerSellerType"
        creationDate:
          description: The date the Relationship war created
          format: date-time
          type: string
      type: object
    TroubleTicketSeverityType:
      description: Possible values for the severity of the trouble ticket
      enum:
        - minor
        - moderate
        - significant
        - extensive
      type: string
    TroubleTicketStatusChange:
      description: >-
        Holds the status notification reasons and associated date the status
        changed, populated by the server
      properties:
        changeReason:
          description: The reason why the status changed.
          type: string
        changeDate:
          description: The date and time the status changed.
          format: date-time
          type: string
        status:
          description: Reached state
          $ref: "#/components/schemas/TroubleTicketStatusType"
      type: object
    TroubleTicketStatusType:
      description: Possible values for the status of the trouble ticket
      enum:
        - acknowledged
        - assessingCancellation
        - cancelled
        - closed
        - inProgress
        - pending
        - resolved
        - reopened
      type: string
    TroubleTicketType:
      description: >
        Possible values for the type of the trouble ticket:

        - installation: Related to installation of Product, provisioning is
        complete, but Product is not operational.

        - maintenance: Any scheduled or non-scheduled maintenance related Issue.

        - degraded: When the Product is impacted and not meeting the Product
        specifications.

        - failure: When the Product is not operational as intended, including
        backup and load-balancing failures.

        - assistance: Requesting help for a situation (not a failure) requiring
        attention that is not categorized.
      enum:
        - assistance
        - degraded
        - down
        - failure
        - installation
        - maintenance
      type: string
    TroubleTicket_Common:
      description: >
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system Skipped properties:
        id,href
      properties:
        severity:
          description: >-
            The severity of the issue. Indicate the implication of the issue on
            the expected functionality e.g. of a system, application, service
            etc..
          $ref: "#/components/schemas/TroubleTicketSeverityType"
        note:
          description: The note(s) that are associated to the ticket.
          items:
            $ref: "#/components/schemas/Note"
          type: array
        troubleTicketRelationship:
          description: >-
            A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
          items:
            $ref: "#/components/schemas/TroubleTicketRelationship"
          type: array
        attachment:
          description: >-
            Attachments to the Ticket, such as a file, screen shot or embedded
            content. Attachments may be added but may not be modified or deleted
            (for historical reasons).
          items:
            $ref: "#/components/schemas/AttachmentValue"
          type: array
        relatedContactInformation:
          description: >-
            Party playing a role for this Trouble Ticket.

            The 'role' is to specify the type of contact as specified in MEF
            113:

            Reporter Contact ('role=reporterContact') - REQUIRED in the request

            Buyer Technical Contacts ('role=buyerTechnicalContact') 

            Seller Ticket Contact ('role=sellerTicketContact') 

            Seller Technical Contact ('role=sellerTechnicalContact')
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          minItems: 1
          type: array
        issueStartDate:
          description: >-
            The date indicating when the Buyer first observed the Issue, to
            provide the Seller with additional insight.
          format: date-time
          type: string
        relatedEntity:
          description: >-
            An entity that is related to the ticket such as a bill, a product,
            etc. The entity against which the ticket is associated.
          items:
            $ref: "#/components/schemas/RelatedEntity"
          minItems: 1
          type: array
        description:
          description: Description of the trouble or issue
          type: string
        externalId:
          description: >-
            Identifier provided by the Buyer to allow the Buyer to use as a
            search attribute in Retrieve Ticket List.
          type: string
        ticketType:
          description:
            The presumed cause of the trouble ticket as evaluated by the Buyer.
          $ref: "#/components/schemas/TroubleTicketType"
        priority:
          description: >-
            The priority of the trouble ticket and how quickly the issue should
            be resolved. Example: Critical, High, Medium, Low. The value is set
            by the ticket management system considering the severity, ticket
            type etc...
          $ref: "#/components/schemas/TroubleTicketPriorityType"
      required:
        - description
        - priority
        - relatedContactInformation
        - relatedEntity
        - severity
        - ticketType
      type: object
    TroubleTicket_Create:
      allOf:
        - $ref: "#/components/schemas/TroubleTicket_Common"
        - type: object
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system The modeling pattern
        introduces the `Common` supertype to aggregate attributes that are
        common to both `TroubleTicket` and `TroubleTicket_Create`. It this case
        the Create type has a subset of attributes of the response type and does
        not introduce any new, thus the `Create` type has an empty definition.
    TroubleTicket_Find:
      description: >
        This class represents a single list item for the response of
        `listTroubleTicket` operation.
      properties:
        severity:
          description: >-
            The severity or impact (ITIL) of the Ticket as evaluated by the
            Buyer.
          $ref: "#/components/schemas/TroubleTicketSeverityType"
        resolutionDate:
          description:
            The date the Ticket status was set to resolved by the Seller
          format: date-time
          type: string
        relatedEntity:
          description: >-
            An entity that is related to the ticket such as a bill, a product,
            etc. The entity against which the ticket is associated.
          items:
            $ref: "#/components/schemas/RelatedEntity"
          minItems: 1
          type: array
        description:
          description: Description of the trouble or issue
          type: string
        externalId:
          description: Additional identifier coming from an external system
          type: string
        ticketType:
          description:
            The presumed cause of the trouble ticket as evaluated by the Buyer.
          $ref: "#/components/schemas/TroubleTicketType"
        creationDate:
          description: The date on which the trouble ticket was created
          format: date-time
          type: string
        priority:
          description: >-
            The priority (ITIL) is based on the assessment of the impact and
            urgency of how quickly the Ticket should be resolved as evaluated by
            the Buy-er.   The Priority is used by the Seller to determine the
            order in which Tickets get resolved across Buyers.
          $ref: "#/components/schemas/TroubleTicketPriorityType"
        sellerPriority:
          description: >-
            The priority (ITIL) is based on the assessment of the impact and
            urgency of how quickly the Ticket should be resolved after
            evaluation by the Seller of the impact of the Issue on the Buyer.
          $ref: "#/components/schemas/TroubleTicketPriorityType"
        sellerSeverity:
          description: >-
            The severity or impact (ITIL) of the Ticket on the Buyer as
            evaluated by the Seller.
          $ref: "#/components/schemas/TroubleTicketSeverityType"
        expectedResolutionDate:
          description: >-
            The date provided by the Seller to indicate when the Ticket is
            expected to be resolved
          format: date-time
          type: string
        id:
          description: Unique identifier of the trouble ticket
          type: string
        status:
          description: The current status of the trouble ticket
          $ref: "#/components/schemas/TroubleTicketStatusType"
      required:
        - creationDate
        - description
        - expectedResolutionDate
        - externalId
        - id
        - priority
        - relatedEntity
        - resolutionDate
        - sellerPriority
        - sellerSeverity
        - severity
        - status
        - ticketType
      type: object
    TroubleTicket_Update:
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system

        Skipped properties:
        id,href,creationDate,lastUpdate,statusChange,statusChangeDate
      properties:
        severity:
          description: >-
            The severity of the issue. Indicate the implication of the issue on
            the expected functionality e.g. of a system, application, service
            etc..
          $ref: "#/components/schemas/TroubleTicketSeverityType"
        note:
          description: The note(s) that are associated to the ticket.
          items:
            $ref: "#/components/schemas/Note"
          type: array
        troubleTicketRelationship:
          description: >-
            A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
          items:
            $ref: "#/components/schemas/TroubleTicketRelationship"
          type: array
        attachment:
          description: >-
            Attachments to the Ticket, such as a file, screen shot or embedded
            content.
          items:
            $ref: "#/components/schemas/AttachmentValue"
          type: array
        relatedContactInformation:
          description: >-
            Party playing a role for this quote. If `instantSyncQuote=false` 

            then the Buyer MUST specify Buyer Contact Information
            ('role=buyerContactInformation') 

            and the Seller MUST specify Seller Contact Information
            ('role=sellerContactInformation')
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          type: array
        issueStartDate:
          description: >-
            The date indicating when the Buyer first observed the Issue, to
            provide the Seller with additional insight.
          format: date-time
          type: string
        externalId:
          description: Additional identifier coming from an external system
          type: string
        priority:
          description: >-
            The priority of the trouble ticket and how quickly the issue should
            be resolved. Example: Critical, High, Medium, Low. The value is set
            by the ticket management system considering the severity, ticket
            type etc...
          $ref: "#/components/schemas/TroubleTicketPriorityType"
      type: object
