openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF 116**

    This API implements Business Requirements described in MEF 81

    It allows the Buyer to retrieve the information about existing Product
    instances from Seller's Product Inventory.

    List of supported use cases:
    - Retrieve Product List
    - Retrieve Product by Identifier

    Copyright 2021 MEF Forum and its contributors.

    This file includes content based on the TM Forum Product Inventory
    Management API (TMF637 v4.0.0) available at
    https://github.com/tmforum-apis/TMF637_ProductInventory, which is licensed
    by the TM Forum under the Apache License version 2.0. Such content has been
    modified by the MEF Forum and its contributors.
  title: Product Inventory Management
  version: 7.0.2
servers:
  - url: 'https://{serverBase}/mefApi/sonata/productInventory/v7/'
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
tags:
  - name: product
  - name: events subscription
paths:
  /product:
    get:
      description: This operation lists or finds Product entities
      operationId: listProduct
      parameters:
        - description: The status of the product
          explode: true
          in: query
          name: status
          required: false
          schema:
            enum:
              - active
              - active.pendingChange
              - cancelled
              - pendingActive
              - pendingTerminate
              - suspended
              - suspendedPendingTerminate
              - terminated
            type: string
          style: form
        - description: A reference to a product spec by id
          explode: true
          in: query
          name: productSpecificationId
          required: false
          schema:
            type: string
          style: form
        - description: A reference to a product offering by id
          explode: true
          in: query
          name: productOfferingId
          required: false
          schema:
            type: string
          style: form
        - description: A reference to the externalId provided in the order
          explode: true
          in: query
          name: externalId
          required: false
          schema:
            type: string
          style: form
        - description: A site identifier which is associated to the product
          explode: true
          in: query
          name: geographicalSiteId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            This criteria allows to retrieve all Product records with a Product
            Relationship to a specified Product.

            E.g. All Products related to Product with ID 5
          explode: true
          in: query
          name: relatedProductId
          required: false
          schema:
            type: string
          style: form
        - description: The Billing Account associated with the Product.
          explode: true
          in: query
          name: billingAccountId
          required: false
          schema:
            type: string
          style: form
        - description: Identifies Product Order associated with the Product
          explode: true
          in: query
          name: productOrderId
          required: false
          schema:
            type: string
          style: form
        - description: Less than the date that is the initial install date for the Product
          explode: true
          in: query
          name: startDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Greater than the date that is the initial install date for the
            Product
          explode: true
          in: query
          name: startDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Less than date that the last change affecting this Product was
            completed
          explode: true
          in: query
          name: lastUpdateDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Greater than the date that the last change affecting this Product
            was completed
          explode: true
          in: query
          name: lastUpdateDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: buyerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: sellerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - description: >-
            Requested number of items to be provided in response requested by
            client
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/MEFProduct_Find'
                type: array
          description: 'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Product objects
      tags:
        - product
  '/product/{id}':
    get:
      description: This operation retrieves a Product entity.
      operationId: retrieveProduct
      parameters:
        - description: Identifier of the Product
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-separated properties to provide in response
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: buyerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: sellerId
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MEFProduct'
          description: 'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Product by ID
      tags:
        - product
components:
  schemas:
    AccessLinkBfd:
      description: >-
        The Access Link BFD Service Attribute indicates whether Bidirectional
        Forwarding Detection (BFD) is enabled on the UNI Access Link. Reference
        MEF 61.1[1] Section 13.8 UNI Access Link BFD Service Attribute and
        Section 16.5 ENNI Link BFD Attribute.
      properties:
        activeEnd:
          description: >-
            BFD Active End. At least one end of BFD session has to have an
            active role, meaning that it sends out asynchronous control messages
            regardless of whether it has received any. Reference MEF 61.1
            Section 13.8 UNI Access Link BFD Service Attribute.
          $ref: '#/components/schemas/BfdActiveEnd'
        transmissionInterval:
          description: >-
            BFD allows for asymmetrical operation, where packets can be sent a
            different interval in each direction, and a different detect
            multiplier can be used. For simplicity, this specification mandates
            symmetrical operation. Units are in milliseconds. Reference MEF 61.1
            Section 13.8 UNI Access Link BFD Service Attribute and Section 16.5
            ENNI Link BFD Attribute.
          $ref: '#/components/schemas/BfdTransmissionInterval'
        authenticationType:
          description: >-
            BFD Authentication as describer in RFC 5880. Reference MEF 61.1
            Section 13.8 UNI Access Link BFD Service Attribute and Section 16.5
            ENNI Link BFD Attribute.
          $ref: '#/components/schemas/BfdAuthenticationType'
        connectionAddressFamily:
          description: >-
            The Connection Address Family parameter specifies whether the
            session is established over IPv4 or IPv6 or whether two separate
            sessions are established using IPv4 and IPv6. Reference MEF 61.1
            Section 13.8 UNI Access Link BFD Service Attribute and Section 16.5
            ENNI Link BFD Attribute.
          $ref: '#/components/schemas/ConnectionAddressFamily'
        detectMultiplier:
          description: >-
            BFD Detect multiple as an Integer. Reference MEF 61.1 Section 13.8
            UNI Access Link BFD Service Attribute and Section 16.5 ENNI Link BFD
            Attribute.
          type: integer
      type: object
    Addressing:
      description: >
        Enumeration representing the Address type for the Control Protocols data

        type. 

        - SP_OPERATOR_ADDRESSES: If the addressing information is

        SP/Operator Addresses, then Ingress IP Packets for the specified 
        protocol

        that have a multicast or broadcast destination address, or a unicast

        destination address  that is reachable within the SP's or Operator's

        network, are considered to be IP Control Protocol  Packets, and Egress
        IP

        Packets for the specified protocol that have a source address that is

        reachable  within the SP's or Operator's network are considered to be IP

        Control Protocol Packets.

        - ANY: If the addressing information is Any, then all IP Packets for the

        specified protocol that cross the UNI are considered to be 

        IP Control Protocol Packets.
      enum:
        - SP_OPERATOR_ADDRESSES
        - ANY
      type: string
    AdvancedIaIpvc:
      allOf:
        - $ref: '#/components/schemas/MEFProductConfiguration'
        - description: >-
            The Advanced Internet Access IPVC is a MEF 69.1 defined version of
            MEF 61.1 IPVC. Reference MEF 69.1 Section 9.1 Internet Access IPVC
            Requirements.
          properties:
            cloud:
              description: >-
                Reference MEF 61.1 Section 10.13 IPVC Cloud Service Attribute.
                The absence of this attribute corresponds to a value of "None". 
              $ref: '#/components/schemas/AdvancedIaIpvcCloud'
            maximumNumberOfIpv4Routes:
              description: >-
                Maximum number of IPv4 routes supported by the service as a
                whole. Absence of this attribute corresponds to a value of
                "Unlimited". Reference MEF 61.1 Section 10.5 IPVC Maximum Number
                of IPv4 Routes Service Attribute.
              type: integer
            pathMtuDiscovery:
              description: >-
                Indicates whether the Path MTU Discovery is supported for the
                IPVC. Reference MEF 61.1 Section 10.11 IPVC Path MTU Discovery
                Service Attribute.
              $ref: '#/components/schemas/EnabledDisabled'
            dscpPreservation:
              description: >-
                Indicates where the SP or Operator is allowed to modify the
                value of the IP DS field in the IP header of the Subscriber's
                traffic as it traverses the IPVC. Reference MEF 61.1 Section
                10.7 IPVC DSCP Preservation Service Attribute. The value SHOULD
                be set to DISABLED. Reference MEF 69.1 Section 9.1 [D3]
              $ref: '#/components/schemas/EnabledDisabled'
            serviceLevelSpecification:
              description: >-
                The set of performance objectives for CoS Name in the IPVC. The
                absence of this attribute corresponds to a value of "None".
                Reference MEF 61.1 Section 10.9 IPVC Service Level Specification
                Service Attribute.
              $ref: '#/components/schemas/IaIpSls'
            reservedPrefixes:
              description: >-
                Reference MEF 61.1 Section 10.14 IPVC Reserved Prefixes Service
                Attribute. For Advanced Internet Access the prefixes must be
                either empty, or free from any public address pre-fixes.
                (Reference MEF 69.1 Section 9.1 [R14])
              $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
            classOfServiceName:
              description: >-
                The Class of Service Name supported by the IPVC. Reference MEF
                61.1 Section 10.8 IPVC List of Class of Service Names Service
                Attribute. This is "listOfClassOfServiceNames" attribute
                narrowed to single ref per Reference MEF 69.1 Section 9.1 [R7]
              type: string
            advancedIaIpvcEndPoint:
              description: >-
                Advanced IPVC End Point. Reference MEF 61.1 Section 10.3 IPVC
                End Point List Service Attribute. This is narrowed to
                multiplicity = 1 and to AdvancedIaIpvcEndPoint type. Reference
                MEF 69.1 Section 9.1 [R5] AdvancedIaIpvc
              $ref: '#/components/schemas/AdvancedIaIpvcEndPoint'
            maximumNumberOfIpv6Routes:
              description: >-
                Maximum number of IPv6 routes supported by the service as a
                whole. Absence of this attribute corresponds to a value of
                "Unlimited". Reference MEF 61.1 Section 10.6 IPVC Maximum Number
                of IPv6 Routes Service Attribute.
              type: integer
            maximumTransferUnit:
              description: >-
                Indicates the maximum size (in octets) of an IP packet that can
                traverse the IPVC without fragmentation. Reference MEF 61.1
                Section 10.10 IPVC MTU Service Attribute.
              minimum: 576
              type: integer
            packetDelivery:
              description: >-
                Indicates whether packets are delivered per standard IP routing
                behavior or by some other means. Reference MEF 61.1 Section 10.4
                IPVC Packet Delivery Service Attribute.
              $ref: '#/components/schemas/PacketDelivery'
          type: object
      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:advancedIaIpvc:v0.1.0:all'
    AdvancedIaIpvcCloud:
      description: >-
        Reference MEF 61.1 Section 10.13 IPVC Cloud Service Attribute. The
        absence of this attribute corresponds to a value of "None".
      properties:
        networkAddressTranslation:
          description: >-
            Specifies whether Network Address Translation is used, and if so the
            IPv4 Prefix. If not selected, then Disabled. Reference MEF 61.1
            Section 10.13.4 Cloud Network Address Translation.
          $ref: '#/components/schemas/Ipv4Prefix'
        dataLimit:
          description: >-
            Limit on the amount of Data traffic sent to/received from the cloud
            service. Unlimited or a 4-tupe (scdl, Tcdl, ucdl, dcdl). If not
            provided, then Unlimited. Reference MEF 61.1 Section 10.13.3 Cloud
            Data Limit.
          $ref: '#/components/schemas/CloudDataLimit'
        dns:
          description: >-
            Specifies whether and how DNS is provided for the service. Reference
            MEF 61.1 Section 10.13.5 Cloud DNS Service.
          $ref: '#/components/schemas/CloudDns'
        subscriberPrefixList:
          description: >-
            List of Public IP Prefixes used in the Subscriber Network. Reference
            MEF 61.1 Section 10.13.6 Cloud Subscriber Prefix List.
          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
        ingressClassOfServiceMap:
          description: >-
            Specification of how ingress packets are mapped to different CoS
            Names. Reference MEF 61.1 Section 10.13.2 Cloud Ingress Class of
            Service Map.
          $ref: '#/components/schemas/IaIngressClassOfServiceMap'
      type: object
    AdvancedIaIpvcEndPoint:
      allOf:
        - $ref: '#/components/schemas/SlsReferencePoint'
        - description: >-
            The Advanced Internet Access IPVC End Point is a MEF 69.1 defined
            version of MEF 61.1 IPVC End Point. Reference MEF 69.1 Section 9.2
            Internet Access IPVC End Point Requirements.
          properties:
            maximumNumberOfIpv4Routes:
              description: >-
                Maximum number of IPv4 routes supported by this IPVC End Point.
                Reference MEF 61.1 Section 11.7 IPVC EP Maximum Number of IPv4
                Routes Service Attribute. Absence of this attribute corresponds
                to a value of "Unlimited".
              type: integer
            identifier:
              description: >-
                A unique identifier for the IPVC End Point for management
                purposes. Reference MEF 61.1 Section 11.1 IPVC EP Identifier
                Service Attribute.
              type: string
            prefixMapping:
              description: >-
                Indicates which IP Prefixes can send and receive traffic to/from
                the IPVC. Reference MEF 61.1 Section 11.5 IPVC EP Prefix Mapping
                Service Attribute.
              $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
            egressBandwidthProfileEnvelope:
              description: >-
                Egress Bandwidth Profile Envelope for the IPVC End Point. The
                absence of this attribute corresponds to a value of "None".
                Reference MEF 61.1 Section 11.12 IPVC EP Egress Bandwidth
                Profile Envelope Service Attribute.
              $ref: '#/components/schemas/IpvcEpEgressBwpEnvelope'
            egressClassOfServiceMap:
              description: >-
                Specification of how egress packets are mapped to CoS Name.
                Reference MEF 61.1 Section 11.10 IPVC EP Egress Class of Service
                Map Service Attribute.
              $ref: '#/components/schemas/EgressClassOfServiceMap'
            maximumNumberOfIpv6Routes:
              description: >-
                Maximum number of IPv6 routes supported by this IPVC End Point.
                Reference MEF 61.1 Section 11.8 IPVC EP Maximum Number of IPv6
                Routes Service Attribute. Absence of this attribute corresponds
                to a value of "Unlimited".
              type: integer
            ingressClassOfServiceMap:
              description: >-
                Specification of how ingress packets are mapped to CoS Name.
                Reference MEF 61.1 Section 11.9 IPVC EP Ingress Class of Service
                Map Service Attribute.
              $ref: '#/components/schemas/IaIngressClassOfServiceMap'
            ingressBandwidthProfileEnvelope:
              description: >-
                Ingress Bandwidth Profile Envelope for the IPVC End Point. The
                absence of this attribute corresponds to a value of "None".
                Reference MEF 61.1 Section 11.11 IPVC EP Ingress Bandwidth
                Profile Envelope Service Attribute.
              $ref: '#/components/schemas/IpvcEpIngressBwpEnvelope'
          type: object
    AdvancedIaUni:
      allOf:
        - $ref: '#/components/schemas/MEFProductConfiguration'
        - description: >-
            The Advanced Internet Access UNI is a MEF 69.1 defined version of
            MEF 61.1 UNI. Reference MEF 69.x Section 8.3 Internet Access UNI
            Requirements.
          properties:
            reversePathForwarding:
              description: >-
                Indicates whether Reverse Path Forwarding checks are used by the
                SP at the UNI. Reference MEF 61.1 Section 12.8 UNI Reverse Path
                Forwarding Service Attribute. [D11] At a UNI with an IPVC EP for
                an Internet Access Service, reversePathForwarding SHOULD be
                ENABLED. Reference MEF 69.1 Section 9.3 Internet Access UNI
                Requirements.
              $ref: '#/components/schemas/EnabledDisabled'
            egressBandwidthProfileEnvelope:
              description: >-
                Attribute used for an egress UNI Bandwidth Profile. Reference
                MEF 61.1 Section 12.5 UNI Egress Bandwidth Profile Envelope
                Service Attribute. Absence of this attribute corresponds to a
                value of "None".
              $ref: '#/components/schemas/IpUniEgressBwpEnvelope'
            listOfControlProtocols:
              description: >-
                Indication of IP Control Protocols that are not forwarded
                transparently by the SP. Reference MEF 61.1 Section 12.6 UNI
                List of Control Protocols Service Attribute. Absence of this
                attribute corresponds to a value of "None". [D9]  At a UNI with
                an IPVC EP for an Internet Access Service, if the UNI has at
                least one UNI Access Link where the UNI Access Lin IPv4
                Connection Addressing is not None, the UNI List of Control
                Protocols SHOULD include ICMP with a list of applicable ISP IP
                addresses.  [D10]  At a UNI with an IPVC EP for an Internet
                Access Service with at least one UNI Access Link where the UNI
                Access Link IPv6 Connection Addressing is not None, the UNI List
                of Control Protocols SHOULD include ICMPv6 with a list of
                applicable SP IP addresses. Reference MEF 69.1 Section 9.3
                Internet Access UNI Requirements.
              items:
                $ref: '#/components/schemas/ControlProtocol'
              type: array
            routingProtocols:
              description: >-
                List of Routing Protocols used across the UNI. Reference MEF
                61.1 Section 12.7 UNI Routing Protocols Service Attribute.
                Absence of this attribute corresponds to a value of "None".
              $ref: '#/components/schemas/RoutingProtocols'
            ingressBandwidthProfileEnvelope:
              description: >-
                Attribute used for an ingress UNI Bandwidth Profile. Reference
                MEF 61.1 Section 12.4 UNI Ingress Bandwidth Profile Envelope
                Service Attribute. Absence of this attribute corresponds to a
                value of "None".
              $ref: '#/components/schemas/IpUniIngressBwpEnvelope'
            managementType:
              description: >-
                Attribute indicating whether the CE is the responsibility of the
                Subscriber or the Service Provider. Reference MEF 61.1 Section
                12.2 UNI Management Type Service Attribute.
              $ref: '#/components/schemas/UniManagementType'
          type: object
      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:advancedIaUni:v0.1.0:all'
    AdvancedIaUniAccessLink:
      allOf:
        - $ref: '#/components/schemas/MEFProductConfiguration'
        - description: >-
            The Advanced Internet Access UNI Access Link is a MEF 69.1 defined
            version of MEF 61.1 UNI Access Link. Reference MEF 69.1 Section 9.4
            Internet Access UNI Access Link Requirements.
          properties:
            dhcpRelay:
              description: >-
                Indicates whether DHCP Relay functionality is enabled. Reference
                MEF 61.1 Section 13.6 UNI Access Link DHCP Relay Service
                Attribute. Absence of this attribute corresponds to a value of
                "Disabled".
              $ref: '#/components/schemas/DhcpRelay'
            reservedVrids:
              description: >-
                List of VRRP (Virtual Router Redundancy Protocol) VRIDs (Virtual
                Router Identifier) reserved for use by the SP or Operator.
                Reference MEF 61.1 Section 13.12 UNI Access Link Reserved VRIDs
                Service Attribute.
              items:
                $ref: '#/components/schemas/Vrid'
              type: array
            bfd:
              description: >-
                Indication of whether BFD is used on the
                IpServicesExternalInterfaceLink. Reference MEF 61.1 Section 16.5
                ENNI Link BFD Attribute and MEF 61.1 Section 13.8 UNI Access
                Link BFD Service Attribute.
              $ref: '#/components/schemas/AccessLinkBfd'
            ipv4ConnectionAddressing:
              description: >-
                IPv4 Connection Addressing. Reference MEF 61.1 Section 13.4 UNI
                Access Link IPv4 Connection Addressing Service Attribute.
                Absence of this attribute corresponds to a value of "None".
              $ref: '#/components/schemas/AdvancedIaUniIpv4ConnectionAddressing'
            ipv6ConnectionAddressing:
              description: >-
                IPv6 Connection Addressing. Reference MEF 61.1 Section 13.5 UNI
                Access Link IPv6 Connection Addressing Service Attribute.
                Absence of this attribute corresponds to a value of "None".
              $ref: '#/components/schemas/AdvancedIaUniIpv6ConnectionAddressing'
            prefixDelegation:
              description: >-
                Indicates whether DHCP Prefix delegation is enabled. Reference
                MEF 61.1 Section 13.7 UNI Access Link Prefix Delegation Service
                Attribute.
              $ref: '#/components/schemas/EnabledDisabled'
            egressBandwidthProfileEnvelope:
              description: >-
                Egress Bandwidth Profile Envelope for the UNI Access Link.
                Reference MEF 61.1 Section 13.11 UNI Access Link Egress
                Bandwidth Profile Envelope Service Attribute. Absence of this
                attribute corresponds to a value of "None".
              $ref: '#/components/schemas/IpUniEgressBwpEnvelope'
            ingressBandwidthProfileEnvelope:
              description: >-
                Ingress Bandwidth Profile Envelope for the UNI Access Link.
                Reference MEF 61.1 Section 13.10 UNI Access Link Ingress
                Bandwidth Profile Envelope Service Attribute. Absence of this
                attribute corresponds to a value of "None".
              $ref: '#/components/schemas/IpUniIngressBwpEnvelope'
            mtu:
              description: >-
                Maximum size, in octets of an IP Packet that can traverse the
                UNI Access Link. Reference MEF 61.1 Section 13.9 UNI Access Link
                IP MTU Service Attribute.
              minimum: 576
              type: integer
          type: object
      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:advancedIaUniAccessLink:v0.1.0:all'
    AdvancedIaUniIpv4ConnectionAddressing:
      description: >-
        UniIpv4ConnectionAddressing is a data type representing how IPv4
        addresses are allocated to the devices on the UNI Access Link. Reference
        MEF 61 Section 13.4 UNI Access Link IPv4 Connection Addressing Service
        Attribute. [R22]  At a UNI Access Link in a UNI with an IPVC EP for an
        Advanced Internet Access Service, UNI Access Link IPv4 Connection
        Addressing MUST be Static or None. Reference MEF 69.1 Section 9.4
        Internet
      properties:
        ipv4SecondarySubnetList:
          description: >-
            Secondary IPv4 Subnet List. Includes IPv4 Prefix and Service
            Provider IPv4 Addresses.
          items:
            $ref: '#/components/schemas/Ipv4Subnet'
          type: array
        ipv4PrimarySubnet:
          description: >-
            Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider IPv4
            Addresses.
          $ref: '#/components/schemas/Ipv4Subnet'
      type: object
    AdvancedIaUniIpv6ConnectionAddressing:
      description: >-
        UniIpv6ConnectionAddressing is a data type representing how IPv6
        addresses are allocated to the devices on the UNI Access Link. 
        Reference MEF 61 Section 13.5 UNI Access Link IPv6 Connection Addressing
        Service Attribute. [R26] [R26]  At a UNI Access Link in a UNI with an
        IPVC EP for an Advanced Internet Access Service, UNI Ac-cess Link IPv6
        Connection Addressing MUST be Static or None. Reference MEF 69.1 Section
        9.4 Internet
      properties:
        ipv6SubnetList:
          description: Ipv6 Subnet
          items:
            $ref: '#/components/schemas/Ipv6Subnet'
          type: array
      type: object
    BasicIaIpvc:
      allOf:
        - $ref: '#/components/schemas/MEFProductConfiguration'
        - description: >-
            The Basic Internet Access IPVC is a MEF 69.1 defined version of MEF
            61.1 IPVC. Reference MEF 69.1 Section 9.1 Internet Access IPVC
            Requirements.
          properties:
            cloud:
              description: >-
                Reference MEF 61.1 Section 10.13 IPVC Cloud Service Attribute.
                The absence of this attribute corresponds to a value of "None".
              $ref: '#/components/schemas/BasicIaIpvcCloud'
            maximumNumberOfIpv4Routes:
              description: >-
                Maximum number of IPv4 routes supported by the service as a
                whole. Absence of this attribute corresponds to a value of
                "Unlimited". Reference MEF 61.1 Section 10.5 IPVC Maximum Number
                of IPv4 Routes Service Attribute.
              type: integer
            pathMtuDiscovery:
              description: >-
                Indicates whether the Path MTU Discovery is supported for the
                IPVC. Reference MEF 61.1 Section 10.11 IPVC Path MTU Discovery
                Service Attribute.
              $ref: '#/components/schemas/EnabledDisabled'
            dscpPreservation:
              description: >-
                Indicates where the SP or Operator is allowed to modify the
                value of the IP DS field in the IP header of the Subscriber's
                traffic as it traverses the IPVC. Reference MEF 61.1 Section
                10.7 IPVC DSCP Preservation Service Attribute. MEF 69.1 [D3] For
                an Internet Access Service, IPVC DSCP Preservation SHOULD be
                Disabled.
              $ref: '#/components/schemas/EnabledDisabled'
            reservedPrefixes:
              description: >-
                Reference MEF 61.1 Section 10.14 IPVC Reserved Prefixes Service
                Attribute. For Advanced Internet Access the prefixes must be
                either empty, or free from any public address prefixes.
                (Reference MEF 69.1 Section 9.1 [R14])
              $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
            basicIaIpvcEndPoint:
              description: >-
                Basic IPVC End Point. Reference MEF 61.1 Section 10.3 IPVC End
                Point List Service Attribute. This is narrowed to multiplicity =
                1 and to BasicIaIpvcEndPoint type. Reference MEF 69.1 Section
                9.1 [R5] AdvancedIaIpvc
              $ref: '#/components/schemas/BasicIaIpvcEndPoint'
            classOfServiceName:
              description: >-
                The Class of Service Name supported by the IPVC. Reference MEF
                61.1 Section 10.8 IPVC List of Class of Service Names Service
                Attribute. This is "listOfClassOfServiceNames" attribute
                narrowed to single ref per Reference MEF 69.1 Section 9.1 [R7]
              type: string
            maximumNumberOfIpv6Routes:
              description: >-
                Maximum number of IPv6 routes supported by the service as a
                whole. Absence of this attribute corresponds to a value of
                "Unlimited". Reference MEF 61.1 Section 10.6 IPVC Maximum Number
                of IPv6 Routes Service Attribute.
              type: integer
            maximumTransferUnit:
              description: >-
                Indicates the maximum size (in octets) of an IP packet that can
                traverse the IPVC without fragmentation. Reference MEF 61.1
                Section 10.10 IPVC MTU Service Attribute.
              minimum: 576
              type: integer
          type: object
      x-discriminator-value: 'urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all'
    BasicIaIpvcCloud:
      description: >-
        The IPVC Cloud Service Attribute is a set of parameters describing the
        access connectivity to the cloud service. Reference MEF 61.1 Section
        10.13 IPVC Cloud Service Attribute. The absence of this attribute
        corresponds to a value of "None".
      properties:
        networkAddressTranslation:
          description: >-
            Specifies whether Network Address Translation is used, and if so the
            IPv4 Prefix. If not selected, then Disabled. Reference MEF 61.1
            Section 10.13.4 Cloud Network Address Translation.
          $ref: '#/components/schemas/Ipv4Prefix'
        dataLimit:
          description: >-
            Limit on the amount of Data traffic sent to/received from the cloud
            service. Unlimited or a 4-tupe (scdl, Tcdl, ucdl, dcdl). If not
            provided, then Unlimited. Reference MEF 61.1 Section 10.13.3 Cloud
            Data Limit.
          $ref: '#/components/schemas/CloudDataLimit'
        dns:
          description: "Specifies whether and how DNS is provided for the service. Reference MEF 61.1 Section 10.13.5 Cloud DNS Service. [R12]\tFor a Basic Internet Access Service, Cloud DNS MUST NOT be None."
          $ref: '#/components/schemas/CloudDns'
        subscriberPrefixList:
          description: >-
            List of Public IP Prefixes used in the Subscriber Network. Reference
            MEF 61.1 Section 10.13.6 Cloud Subscriber Prefix List.
          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
        ingressClassOfServiceMap:
          description: >-
            Specification of how ingress packets are mapped to different CoS
            Names. Reference MEF 61.1 Section 10.13.2 Cloud Ingress Class of
            Service Map.
          $ref: '#/components/schemas/IaIngressClassOfServiceMap'
      type: object
    BasicIaIpvcEndPoint:
      allOf:
        - $ref: '#/components/schemas/SlsReferencePoint'
        - description: >-
            The Basic Internet Access IPVC End Point is a MEF 69.1 defined
            version of MEF 61.1 IPVC End Point. Reference MEF 69.1 Section 9.2
            Internet Access IPVC End Point Requirements.
          properties:
            maximumNumberOfIpv4Routes:
              description: >-
                Maximum number of IPv4 routes supported by this IPVC End Point.
                Reference MEF 61.1 Section 11.7 IPVC EP Maximum Number of IPv4
                Routes Service Attribute. Absence of this attribute corresponds
                to a value of "Unlimited".
              type: integer
            identifier:
              description: >-
                A unique identifier for the IPVC End Point for management
                purposes. Reference MEF 61.1 Section 11.1 IPVC EP Identifier
                Service Attribute.
              type: string
            ipUni:
              description: >-
                Indicates where the SP or Operator is allowed to modify the
                value of the IP DS field in the IP header of the Subscriber's
                traffic as it traverses the IPVC. Reference MEF 61.1 Section
                10.7 IPVC DSCP Preservation Service Attribute.
              $ref: '#/components/schemas/BasicIaUni'
            egressBandwidthProfileEnvelope:
              description: >-
                Egress Bandwidth Profile Envelope for the IPVC End Point. The
                absence of this attribute corresponds to a value of "None".
                Reference MEF 61.1 Section 11.12 IPVC EP Egress Bandwidth
                Profile Envelope Service Attribute. Reference MEF 69.1 Section
                9.2. [D6] For a Basic Internet Access Service, the
                egressBandwidthProfileEnvelope SHOULD be empty.
              $ref: '#/components/schemas/IpvcEpEgressBwpEnvelope'
            egressClassOfServiceMap:
              description: >-
                Specification of how egress packets are mapped to CoS Name.
                Reference MEF 61.1 Section 11.10 IPVC EP Egress Class of Service
                Map Service Attribute.
              $ref: '#/components/schemas/EgressClassOfServiceMap'
            maximumNumberOfIpv6Routes:
              description: >-
                Maximum number of IPv6 routes supported by this IPVC End Point.
                Reference MEF 61.1 Section 11.8 IPVC EP Maximum Number of IPv6
                Routes Service Attribute. Absence of this attribute corresponds
                to a value of "Unlimited".
              type: integer
            ingressClassOfServiceMap:
              description: >-
                Specification of how ingress packets are mapped to CoS Name.
                Reference MEF 61.1 Section 11.9 IPVC EP Ingress Class of Service
                Map Service Attribute.
              $ref: '#/components/schemas/IaIngressClassOfServiceMap'
            ingressBandwidthProfileEnvelope:
              description: >-
                Ingress Bandwidth Profile Envelope for the IPVC End Point. The
                absence of this attribute corresponds to a value of "None".
                Reference MEF 61.1 Section 11.11 IPVC EP Ingress Bandwidth
                Profile Envelope Service Attribute. Reference MEF 69.1 Section
                9.2. [D5] For a Basic Internet Access Service, the
                ingressBandwidthProfileEnvelope SHOULD be empty.
              $ref: '#/components/schemas/IpvcEpIngressBwpEnvelope'
          required:
            - ipUni
          type: object
    BasicIaUni:
      description: >-
        The Basic Internet Access UNI is a MEF 69.1 defined version of MEF 61.1
        UNI. Reference MEF 69.1 Section 9.3 Internet Access UNI Requirements.
      properties:
        identifier:
          description: >-
            Unique identifier for the Basic Internet Access UNI for management
            purposes. Reference MEF 61.1 Section 12.1 UNI Identifier Service
            Attribute.
          maxLength: 53
          type: string
        ipUniAccessLink:
          description: >-
            Reference to IP UNI Access Link(s). Reference MEF 61.1 Section 12.3
            UNI List of UNI Access Links Service Attribute.
          $ref: '#/components/schemas/BasicIaUniAccessLink'
        reversePathForwarding:
          description: >-
            Indicates whether Reverse Path Forwarding checks are used by the SP
            at the UNI. Reference MEF 61.1 Section 12.8 UNI Reverse Path
            Forwarding Service Attribute. [D11]  At a UNI with an IPVC EP for an
            Internet Access Service, reversePathForwarding SHOULD be ENABLED.
            Reference MEF 69.1 Section 9.3 Internet Access UNI Requirements.
          $ref: '#/components/schemas/EnabledDisabled'
        egressBandwidthProfileEnvelope:
          description: >-
            Attribute used for an egress UNI Bandwidth Profile. Reference MEF
            61.1 Section 12.5 UNI Egress Bandwidth Profile Envelope Service
            Attribute. Absence of this attribute corresponds to a value of
            "None". [D8]  At a UNI with an IPVC EP for a Basic Internet Ac-cess
            Service, if the UNI Egress Bandwidth Profile Envelope is not None,
            it SHOULD have Bandwidth Profile Flows that contain all Egress IP
            Data Packets at the UNI that are mapped to any of a given set of
            IPVC EPs (as defined in MEF 61.1 [8] Table 28). Reference MEF 69.1
            Section 9.3 Internet Access UNI Requirements.
          $ref: '#/components/schemas/IpUniEgressBwpEnvelope'
        listOfControlProtocols:
          description: >
            Indication of IP Control Protocols that are not forwarded
            transparently by the SP. Reference MEF 61.1 Section 12.6 UNI List of
            Control Protocols Service Attribute. Absence of this attribute
            corresponds to a value of "None". [D9]  At a UNI with an IPVC EP for
            an Internet Access Service, if the UNI has at least one UNI Access
            Link where the UNI Access Lin IPv4 Connection Addressing is not
            None, the UNI List of Control Protocols SHOULD include ICMP with a
            list of applicable ISP IP addresses. [D10]  At a UNI with an IPVC EP
            for an Internet Access Service with at least one UNI Access Link
            where the UNI Access Link IPv6 Connection Addressing is not None,
            the UNI List of Control Protocols SHOULD include ICMPv6 with a list
            of applicable SP IP addresses. Reference MEF 69.1 Section 9.3
            Internet Access UNI Requirements.
          items:
            $ref: '#/components/schemas/ControlProtocol'
          type: array
        ingressBandwidthProfileEnvelope:
          description: >-
            Attribute used for an ingress UNI Bandwidth Profile. Reference MEF
            61.1 Section 12.4 UNI Ingress Bandwidth Profile Envelope Service
            Attribute. Absence of this attribute corresponds to a value of
            "None". [D7]  At a UNI with an IPVC EP for a Basic Internet Access
            Service, if the UNI Ingress Bandwidth Profile Envelope is not None,
            it SHOULD have Bandwidth Profile Flows that contain all Ingress IP
            Data Packets at the UNI that are mapped to any of a given set of
            IPVC EPs (as defined in MEF 61.1 [8] Table 28). Reference MEF 69.1
            Section 9.3 Internet Access UNI Requirements.
          $ref: '#/components/schemas/IpUniIngressBwpEnvelope'
        managementType:
          description: >-
            Attribute indicating whether the CE is the responsibility of the
            Subscriber or the Service Provider. Reference MEF 61.1 Section 12.2
            UNI Management Type Service Attribute.
          $ref: '#/components/schemas/UniManagementType'
      required:
        - ipUniAccessLink
      type: object
    BasicIaUniAccessLink:
      description: >-
        An individual connection between the Subscriber and the SP that forms
        part of a UNI. Reference MEF 61.1[1] Section 7.3 UNIs and UNI Access
        Link.
      properties:
        reservedVrids:
          description: >
            List of VRRP (Virtual Router Redundancy Protocol) VRIDs (Virtual

            Router Identifier) reserved for use by the SP or Operator. Reference

            MEF 61.1 Section 13.12 UNI Access Link Reserved VRIDs Service

            Attribute. [D14]  At a UNI Access Link in a UNI with an IPVC EP for
            a

            Basic Internet Access Service, UNI Access Link Reserved VRIDs
            Service

            Access UNI Access Link Service Attributes Requirements

            Attribute SHOULD be None. 

            Note - The use of VRRP by the ISP is discouraged in the

            Basic Internet Access Service, as it requires coordination of VRID

            resources between the Subscriber and ISP, which compromises

            the simplicity and plug-and-play nature of this service type.

            Reference MEF 69.1 Section 9.4 Internet
          items:
            $ref: '#/components/schemas/Vrid'
          type: array
        ipv4ConnectionAddressing:
          description: >
            ipv4ConnectionAddressing.uniAccessLinkIpv4AddressType MUST be DHCP
            or None. Reference MEF 69.1 Section 9.4 Subscriber Internet Access
            Service: UNI Access Link Requirements [R23]. If
            ipv4ConnectionAddressing.uniAccessLinkIpv4AddressType is DHCP, the
            UNI Access Link IPv4 Connection Addressing Primary Subnet parameter
            MUST contain only a single Service Provider IPv4 Address. Reference
            MEF 69.1[1] Section 9.4 Subscriber Internet Access Service: UNI
            Access Link Requirements [R25].
          $ref: '#/components/schemas/BasicIaUniIpv4ConnectionAddressing'
        ipv6ConnectionAddressing:
          description: >
            [R27]  At a UNI Access Link in a UNI with an IPVC EP for a Basic
            Internet Access Service, UNI Access Link IPv6 Connection Addressing
            MUST be DHCP or SLAAC or None. Reference MEF 69.1[1] Section 9.4
            Subscriber Internet Access Service: UNI Access Link Requirements.
          $ref: '#/components/schemas/BasicIaUniIpv6ConnectionAddressing'
        prefixDelegation:
          description: >-
            Indicates whether DHCP Prefix delegation is enabled. Reference MEF
            61.1 Section 13.7 UNI Access Link Prefix Delegation Service
            Attribute.
          $ref: '#/components/schemas/EnabledDisabled'
        egressBandwidthProfileEnvelope:
          description: >-
            Egress Bandwidth Profile Envelope for the UNI Access Link. Reference
            MEF 61.1 Section 13.11 UNI Access Link Egress Bandwidth Profile
            Envelope Service Attribute. Absence of this attribute corresponds to
            a value of "None". [D13]  At a UNI Access Link in a UNI with an IPVC
            EP for a Basic Internet Access Service, UNI Access Link Egress
            Bandwidth Profile Envelope SHOULD be None. Reference MEF 69.1
            Section 9.4 Internet Access UNI Access Link Service Attributes
            Requirements
          $ref: '#/components/schemas/IpUniEgressBwpEnvelope'
        ingressBandwidthProfileEnvelope:
          description: >-
            Ingress Bandwidth Profile Envelope for the UNI Access Link.
            Reference MEF 61.1 Section 13.10 UNI Access Link Ingress Bandwidth
            Profile Envelope Service Attribute. Absence of this attribute
            corresponds to a value of "None". [D12]  At a UNI Access Link in a
            UNI with an IPVC EP for a Basic Internet Access Service, UNI Access
            Link Ingress Bandwidth Profile Envelope SHOULD be None. Reference
            MEF 69.1 Section 9.4 Internet Access UNI Access Link Service
            Attributes Requirements
          $ref: '#/components/schemas/IpUniIngressBwpEnvelope'
        mtu:
          description: >-
            Maximum size, in octets of an IP Packet that can traverse the UNI
            Access Link. Reference MEF 61.1 Section 13.9 UNI Access Link IP MTU
            Service Attribute.
          minimum: 576
          type: integer
      type: object
    BasicIaUniIpv4ConnectionAddressing:
      description: >-
        UniIpv4ConnectionAddressing is a data type representing how IPv4
        addresses are allocated to the devices on the UNI Access Link. Reference
        MEF 61 Section 13.4 UNI Access Link IPv4 Connection Addressing Service
        Attribute. [R23]  At a UNI Access Link in a UNI with an IPVC EP for a
        Basic Internet Access Service, UNI Access Link IPv4 Connection
        Addressing MUST be DHCP or None. [R25] If IPv4 Connection Addressing is
        DHCP, the UNI Access Link IPv4 Connection Addressing Primary Subnet
        parameter MUST contain only a single Service Provider IPv4 Address.
        Reference MEF 69.1[1] Section 9.4 Subscriber Internet Access Service:
        UNI Access Link Requirements.
      properties:
        ipv4PrimarySubnet:
          description: >-
            Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider IPv4
            Addresses. [R25] If IPv4 Connection Addressing is DHCP, the UNI
            Access Link IPv4 Connection Addressing Primary Subnet parameter MUST
            contain only a single Service Provider IPv4 Address. Reference MEF
            69.1[1] Section 9.4 Subscriber Internet Access Service: UNI Access
            Link Requirements
          $ref: '#/components/schemas/Ipv4Subnet'
      type: object
    BasicIaUniIpv6ConnectionAddressing:
      description: "UniIpv6ConnectionAddressing is a data type representing how IPv6 addresses are allocated to the devices on the UNI Access Link. Reference MEF 61 Section 13.5 UNI Access Link IPv6 Connection Addressing Service Attribute. [R27]  At a UNI Access Link in a UNI with an IPVC EP for a Basic Internet Access Service, UNI Access Link IPv6 Connection Addressing MUST be DHCP or SLAAC or None. Reference MEF 69.1[1] Section 9.4 Subscriber Internet Access Service: UNI Access Link Requirements. [R29]\tAt a UNI Access Link in a UNI with an IPVC EP for a Basic Internet Access Service, if the UNI Ac-cess Link IPv6 Connection Addressing is DHCP or SLAAC, the UNI Access Link IPv6 Connection Ad-dressing Subnet List parameter MUST contain only a single Service Provider IPv6 Address."
      properties:
        ipv6AddressType:
          description: Basic Internet Access IPv6 Connection Address mechanism.
          $ref: '#/components/schemas/Ipv6AddressType'
        ipv6Subnet:
          description: >-
            IPv6 Subnet. [R29]At a UNI Access Link in a UNI with an IPVC EP for
            a Basic Internet Access Service, if the UNI Ac-cess Link IPv6
            Connection Addressing is DHCP or SLAAC, the UNI Access Link IPv6
            Connection Ad-dressing Subnet List parameter MUST contain only a
            single Service Provider IPv6 Address.
          $ref: '#/components/schemas/Ipv6Subnet'
      type: object
    BfdActiveEnd:
      description: >
        At least one end of the BFD session must have an active role, meaning
        that

        it sends out asynchronous control messages regardless of whether it has

        received any. This enumeration represents the values that can be set for

        the BFD Active End. Reference MEF 61.1 Section 13.8 UNI Access Link BFD

        Service Attribute [R171] and [R172].

        - SUBSCRIBER: Subscriber takes active BFD role.

        - SP: Service Provider takes active BFD role.

        - BOTH: Subscriber and Service Provider take active BFD role.
      enum:
        - SUBSCRIBER
        - SP
        - BOTH
      type: string
    BfdAuthenticationType:
      description: |
        RFC 7419 specifies a set of common intervals which are used to ensure
        interoperability.
        - NONE: No BFD authentication.
        - SIMPLE_PASSWORD: Simple Password Authentication is the most 
        straightforward (and weakest) form of authentication. In this method
        of authentication one or more Passwords (with corresponding Key IDs) 
        are configured in each system and one of these Password/ID pairs is 
        carried in each BFD Control packet. The receiving system accepts the 
        packet if the Password and Key ID matches one of the Password/ID 
        pairs configured in that system. Reference IETF RFC5880 Section 6.7.2.
        - KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 Authentication 
        mechanisms are very similar to those used in other protocols. 
        In these methods of authentication, one or more security keys 
        (with corresponding key IDs) are configured in each system. 
        Reference RFC5880 Section 6.7.3 Keyed MD5 and Meticulous Keyed MD5 
        Authentication.
        - METICULOUS_KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 
        Authentication mechanisms are very similar to those used in other 
        protocols. In these methods of authentication, one or more security
        keys (with corresponding key IDs) are configured in each system.
        Reference RFC5880 Section 6.7.3 Keyed MD5 and Meticulous Keyed MD5
        Authentication.
        - KEYED_SHA1: The Keyed SHA1 and Meticulous Key SHA1 Authentication
        mechanisms are very similar to those used in other protocols. In 
        these methods of authentication, one or more secret keys (with 
        corresponding key IDs) are configured in each system. Reference
        RFC5880 Section 6.7.4 Keyed SHA1 and Meticulous Keyed SHA1 
        Authentication.
        - METICULOUS_KEYED_SHA1: The Keyed SHA1 and Meticulous Key 
        SHA1 Authentication mechanisms are very similar to those used in
        other protocols. In these methods of authentication, one or more 
        secret keys (with corresponding key IDs) are configured in each system.
        Reference RFC5880 Section 6.7.4 Keyed SHA1 and Meticulous Keyed SHA1 
        Authentication.
      enum:
        - NONE
        - SIMPLE_PASSWORD
        - KEYED_MD5
        - METICULOUS_KEYED_MD5
        - KEYED_SHA1
        - METICULOUS_KEYED_SHA1
      type: string
    BfdTransmissionInterval:
      description: >-
        UNI Access Link BFD authentication type. When Authentication is NOT
        NONE, RFC5880 Section 6.7 Authentication mechanisms are used.
      enum:
        - 3_3_MILLISECONDS
        - 10_MILLISECONDS
        - 20_MILLISECONDS
        - 50_MILLISECONDS
        - 100_MILLISECONDS
        - 1_SECOND
      type: string
    Bgp:
      description: >-
        When an entry in the UNI Routing Protocol is for BGP, BGP as specified
        in RFC 4271 is used across the UNI to exchange information. Reference
        MEF 61.1 Section 12.7.3 BGP.
      properties:
        subscriberAsNumber:
          description: BGP Subscriber Autonomous System number.
          type: integer
        peerAsNumber:
          description: BGP Peer Autonomous System Number.
          type: integer
        bgpExtendedCommunityList:
          description: >-
            Mechanism for labeling information carried in BGP-4. Provide
            enhancement over existing BGP Community Attribute an extended range,
            the addition of type field.
          items:
            $ref: '#/components/schemas/BgpExtendedCommunityListItem'
          type: array
        connectionAddressFamily:
          description: Connection Address Family (IPv4 or IPv6).
          $ref: '#/components/schemas/ConnectionAddressFamily'
        damping:
          description: >-
            Route flap damping. When the Damping parameter is NONE, the
            attribute is not set. When not NONE a single set of parameters
            described in Section 4.3 of RFC 2430 MUST be agreed.
          $ref: '#/components/schemas/Damping'
        ipPrefixes:
          description: IPv4/IPv6 Prefixes that are advertised using BGP.
          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
        administrativeDistance:
          description: BGP Administrative Distance.
          type: integer
        asOverride:
          description: Autonomous System Override.
          $ref: '#/components/schemas/EnabledDisabled'
        holdTime:
          description: >-
            Hold time in seconds. Indicates the agreed Hold Time used for BGP
            sessions. The possible values are 0 or an integer in the range
            3-65535.
          maximum: 65535
          minimum: 0
          type: integer
        peeringAddresses:
          description: Peering Addresses.
          $ref: '#/components/schemas/PeeringAddress'
        authentication:
          description: BGP Authentication (None or MD5 plus a password).
          $ref: '#/components/schemas/BgpAuthentication'
        bgpCommunityList:
          description: >-
            Used to control which routers are accepted, preferred, distributed,
            or advertised.
          items:
            $ref: '#/components/schemas/BgpCommunityListItem'
          type: array
      type: object
    BgpAuthentication:
      description: |
        BGP Authentication options as an enumeration.
        - NONE: No authentication for BGP.
        - MD5_PASSWORD: BGP Authentication is MD5 plus a password.
      enum:
        - NONE
        - MD5_PASSWORD
      type: string
    BgpCommunity:
      description: >
        Set of BGP Community enumerations.

        - NO_ADVERTISE: When a No-Advertise community is attached to a route,
        the BGP speaker won't advertise the route to any internal or external
        BGP peers.

        - NO_EXPORT: When a No-Export community is attached to a route, the
        router won't advertise the route to external peers--only to internal
        peers.

        - LOCAL_AS: To avoid any BGP routing loops, there is an important rule
        regarding the internal BGP neighbors: an IBGP neighbor cannot advertise
        a route to an IBGP neighbor if it received that route from another IBGP
        neighbor.

        - GRACEFUL_SHUTDOWN: The Graceful SHUTDOWN (65535:0) community is used
        to smoothly shut down paths a router might use when its peer router is
        about to be intentionally shut down.

        - EXTENDED: An Extended community is an 8-byte value that is divided
        into two main sections:An extended community has three fields: type,
        administrator, assigned number (type:administrator:assigned-number).
        Based on the value of the high-order byte in the Type field, the
        administrator field can be an AS or an IP address.

        - ROUTE_TARGET: The Route Target community is used in MPLS VPN
        environments to separate two customers routing tables.

        - ROUTE_ORIGIN: In an MPLS VPN environment, the route origin community
        is used to identify where routes originated from, so that
        readvertisement back to that site is avoided.

        - LARGE: A Large community is a 12-byte BGP community that was developed
        when the 4-byte AS began to be allocated. Since each of the standard or
        extended communi-ties use 2-byte values for the AS, a 4-byte AS would
        not fit into the standard 2-byte value.
      enum:
        - NO_ADVERTISE
        - NO_EXPORT
        - LOCAL_AS
        - GRACEFUL_SHUTDOWN
        - EXTENDED
        - ROUTE_TARGET
        - ROUTE_ORIGIN
        - LARGE
      type: string
    BgpCommunityListItem:
      description: Bgp Community List Item
      properties:
        communityPrefixes:
          description: The prefixes that the BGP Community contains
          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
        communityName:
          description: The name of BGP Community.
          type: string
        communityValue:
          description: BGP Community value.
          $ref: '#/components/schemas/BgpCommunity'
        communityId:
          description: Unique identifier for BGP Community.
          type: integer
    BgpExtendedCommunityListItem:
      description: BGP Extended Community List Item
      properties:
        routeTargetImport:
          description: BGP Community value.
          $ref: '#/components/schemas/RouteDistinguisherFields'
        routeDistinguisher:
          description: The prefixes that the BGP Community contains
          $ref: '#/components/schemas/RouteDistinguisherFields'
        routeTargetOrigin:
          description: BGP Community value.
          $ref: '#/components/schemas/RouteDistinguisherFields'
        routeTargetExport:
          description: BGP Community value.
          $ref: '#/components/schemas/RouteDistinguisherFields'
    BurstBehavior:
      description: >
        Enumeration used to select the Bandwidth Profile Flow Burst Behavior

        attribute. Reference MEF 61.1 Section 17.3 Table 29 Bandwidth Profile

        Parameters for a Bandwidth Profile Flow.

        - OPTIMIZE_DELAY: Enumeration representing the Burst Behavior of
        optimization of delay.

        - OPTIMIZE_THROUGHPUT: Enumeration representing the Burst Behavior of
        optimization of throughput.
      enum:
        - OPTIMIZE_DELAY
        - OPTIMIZE_THROUGHPUT
      type: string
    CloudDataLimit:
      description: >-
        Specifies an absolute limit on the amount of data the Subscriber can
        transmit to, or receive from, the cloud service in a given time period.
        It is either Unlimited or a 4-tuple (scdl, tcdl, ucdl, dcdl).  Reference
        MEF 61.1 Section 10.13.3 Cloud Data Limit.
      properties:
        duration:
          description: >-
            Specifies a duration. Together with the start time, it describes a
            service of contiguous time intervals, starting at the specified
            start time and each lasting for the specified duration.
          $ref: '#/components/schemas/TimeDuration'
        download:
          description: >-
            An integer indicating a limit, in octets, on the amount of IP
            traffic received from the cloud service that can be delivered to the
            Subscriber during each time interval described by startTime and
            duration.
          type: integer
        upload:
          description: >-
            An integer indicating a limit, in octets, on the amount of IP
            traffic that can be transmitted towards the cloud service during
            each time interval described by startTime and duration.
          type: integer
        startTime:
          description: Specifies a start time.
          format: date-time
          type: string
      type: object
    CloudDns:
      description: >
        Data type representing a Domain Name System. Reference MEF 69.1 Section

        9.1

        [R13]  For an Internet Access Service, if the Cloud DNS parameter of the

        IPVC Cloud Service Attribute is STATIC, the associated list of DNS
        Servers

        MUST have at least one entry. 

        [D4] For an Internet Access Service, if the Cloud DNS parameter of the

        IPVC Cloud Service Attribute is STATIC, the associated list of DNS
        Servers

        SHOULD contain at least two DNS servers.
      properties:
        dnsType:
          description: Domain Name System type.
          $ref: '#/components/schemas/DnsType'
        dnsServerIpv6List:
          description: DNS server list an IPv6 addresses
          items:
            type: string
          type: array
        dnsServerIpv4List:
          description: DNS server list an IPv4 addresses
          items:
            type: string
          type: array
      type: object
    ConnectionAddressFamily:
      description: >-
        Specifies whether the session is established over IPv4 or IPv6 or
        whether two separate session are established using IPv4 and IPv6.
      enum:
        - IPV4
        - IPv6
        - BOTH
      type: string
    ControlProtocol:
      description: >-
        Data type representing Control Protocol. Each entry consists of a
        3-tuple containing the protocol name, addressing information (either
        SP/Operator Addresses or Any) and one or more references. Reference MEF
        61.1 Section 12.6 UNI List of Control Protocols Service Attribute
      properties:
        reference:
          description: Protocol reference.
          items:
            type: string
          minItems: 1
          type: array
        addressing:
          description: Enumeration representing the addressing.
          $ref: '#/components/schemas/Addressing'
        protocolName:
          description: Protocol name.
          type: string
      type: object
    Damping:
      description: >-
        Damping parameters as defined in RFC 2439 BGP Route Flap Damping,
        Section 4.2
      properties:
        decayHalfLifeWhileReachable:
          description: >-
            This value is the time duration in seconds during which the
            accumulated stability figure of merit will be reduced by half if the
            route if considered reachable (whether suppressed or not).
          type: integer
        reuseListMemoryReuseListMax:
          description: >-
            This is the time (in seconds) value corresponding to the last reuse
            list. This may be the maximum value of T-hold for all parameter sets
            of may be configured.
          type: integer
        maxHoldDownTime:
          description: >-
            This value is the maximum time a route can be suppressed no matter
            how unstable it has been prior to this period of stability. In
            seconds.
          type: integer
        reuseListTimeGranularity:
          description: >-
            This is the time (in seconds) interval between evaluations of the
            reuse lists.  Each reuse lists corresponds to an additional time
            increment.
          type: integer
        timeGranularity:
          description: >-
            This is the time granularity in seconds used to perform all decay
            computations.
          type: integer
        decayHalfLifeWhileUnReachable:
          description: >-
            This value is the time duration in seconds during which the
            accumulated stability figure of merit will be reduced by half if the
            route if considered unreachable.  If not specified or set to zero,
            no decay will occur while a route remains unreachable.
          type: integer
        decayMemoryLimit:
          description: >-
            This is the maximum time (in seconds) that any memory of previous
            instability will be retained given that the route's state remains
            unchanged, whether reachable or unreachable.  This parameter is
            generally used to determine array sizes.
          type: integer
        reuseThreshold:
          description: >-
            This value is expressed as a number of route withdrawals.  It is the
            value below which a suppressed route will now be used again.
          type: integer
        cutoffThreshold:
          description: >-
            This value is expressed as a number of route withdrawals.  It is the
            value above which a route advertisement will be suppressed.
          type: integer
        numberOfReuseLists:
          description: >-
            This is the number of reuse lists.  It may be determined from
            reuse-list-max or set explicitly.
          type: integer
      type: object
    DhcpRelay:
      description: >-
        Dynamic Host Configuration Protocol (DHCP) Relay functionality is useful
        when the Subscriber uses DHCP (per RFC 2131 and RFC 8415) in the
        Subscriber Network but does not want to place a DHCP server (or possibly
        a pair of redundant DHCP servers) in each part of the network.
      properties:
        dhcpServerList:
          description: >-
            Non-empty list of IP addresses for DHCP Servers belonging to the
            Subscriber. Reference MEF 61.1 Section 13.6 UNI Access Link DHCP
            Relay Server Attribute.
          items:
            $ref: '#/components/schemas/DhcpServer'
          minItems: 1
          type: array
        ipvcEndPointIdentifier:
          description: IPVC identifier as described in MEF 61.1 Section 11.1.
          maxLength: 53
          type: string
      type: object
    DhcpServer:
      description: Data type representing a DHCP Server
      properties:
        ipv6Address:
          description: DHCP Server IPv6 address.
          type: string
        ipv4Address:
          description: DHCP Server IPv4 address.
          type: string
      type: object
    DnsType:
      description: Enumeration representing the different types of DNS.
      enum:
        - DHCP
        - PPP
        - STATIC
        - SLAAC
      type: string
    DscpMapping:
      description: IP DSCP mapping of CoS name to DSCP value
      properties:
        ipds:
          description: DSCP value
          maximum: 63
          minimum: 0
          type: integer
        cosName:
          description: Class of Service name
          type: string
      type: object
    Duration:
      description: 'A Duration in a given unit of time e.g. 3 hours, or 5 days.'
      properties:
        amount:
          description: 'Duration (number of seconds, minutes, hours, etc.)'
          type: integer
        units:
          $ref: '#/components/schemas/TimeUnit'
      required:
        - amount
        - units
      type: object
    EgressClassOfServiceMap:
      description: >-
        Pair of values (D,P). D specifies how to set the DS field in Egress IP
        Data Packets based on CoS Name. It is either None, or a mapping from CoS
        Names to DSCP values. P specifies how to set the PCP field in VLAN
        Tagged Ethernet Frames containing Egress IP Data Packets based on CoS
        Name. It is eitherNone, or a mapping from CoS Names to PCP values.
        Reference MEF 61.1 Section 11.10 IPVC EP  Egress Class of Service Map
        Service Attribute.
      properties:
        dscpMapping:
          description: Reference to CoS to IP DSCP mapping.
          items:
            $ref: '#/components/schemas/DscpMapping'
          type: array
        pcpMapping:
          description: Reference to CoS to Ethernet PCP mapping.
          items:
            $ref: '#/components/schemas/PcpMapping'
          type: array
      type: object
    EnabledDisabled:
      description: Enumeration to indicate Enabled/Disabled state of an attribute
      enum:
        - ENABLED
        - DISABLED
      type: string
    EndPointIdentifierAndCosName:
      description: >-
        Data type representing IPVC End Point Identifier and CoS name use for
        Bandwidth Profiles.
      properties:
        ipvcEndPointIdentifier:
          description: IPVC End Point Identifier for an IPVC End Point located at the UNI.
          type: string
        cosName:
          description: Class of Service Name.
          type: string
      type: object
    Error:
      description: >
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        reason:
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        message:
          description: >-
            Text that provides mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        referenceError:
          description: URL pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
          type: object
      description: 'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
          type: object
      description: 'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
          type: object
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error404:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                The following error code:

                - notFound: A current representation for the target resource not
                found
              enum:
                - notFound
              type: string
          required:
            - code
          type: object
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error422:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error422Code'
            propertyPath:
              description: >
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
              type: string
          required:
            - code
          type: object
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
      type: string
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    FieldedAddress:
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
        Reference: MEF 79 (Sn 8.9.2)
      properties:
        country:
          description: Country that the address is in
          type: string
        streetType:
          description: >-
            The type of street (e.g., alley, avenue, boulevard, brae, crescent,
            drive, highway, lane, terrace, parade, place, tarn, way, wharf)
          type: string
        postcodeExtension:
          description: >-
            An extension of a postal code. E.g. the part following the dash in a
            US urban property address
          type: string
        city:
          description: The city that the address is in
          type: string
        streetNr:
          description: >-
            Number identifying a specific property on a public street. It may be
            combined with streetNrLast for ranged addresses. MEF 79 defines it
            as required however as in certain countries it is not used we make
            it optional in API.
          type: string
        locality:
          description: The locality that the address is in
          type: string
        postcode:
          description: >-
            Descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also known as zip code)
          type: string
        streetNrLast:
          description: Last number in a range of street numbers allocated to a property
          type: string
        streetNrSuffix:
          description: The first street number suffix
          type: string
        streetName:
          description: Name of the street or other street type
          type: string
        stateOrProvince:
          description: The State or Province that the address is in
          type: string
        streetNrLastSuffix:
          description: Last street number suffix for a ranged address
          type: string
        geographicSubAddress:
          $ref: '#/components/schemas/GeographicSubAddress'
        streetSuffix:
          description: A modifier denoting a relative direction
          type: string
      required:
        - city
        - country
        - streetName
      type: object
    ForwardingInformation:
      description: >-
        Forwarding information, consisting of either a nexthop IP address in the
        Subscriber Network (if the access medium is multipoint capable, e.g.,
        Ethernet), or a specific UNI Access Link (if the access medium is
        strictly point-to-point, e.g., HDLC,  PPP over DSL).
      properties:
        nextHopIpAddress:
          description: Next hop IP address.
          type: string
        uniAccessLink:
          description: UNI Access Link unique identifier.
          maxLength: 53
          type: string
      type: object
    GeographicSubAddress:
      description: 'Additional fields used to specify an address, as detailed as possible.'
      properties:
        buildingName:
          description: >
            Allows for identification of places that require building name  as
            part of addressing information
          type: string
        subUnit:
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: '#/components/schemas/MEFSubUnit'
          type: array
        levelType:
          description: Describes level types within a building
          type: string
        levelNumber:
          description: 'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
          type: string
        privateStreetNumber:
          description: Private streets numbers internal to a private street
          type: string
        privateStreetName:
          description: >-
            "Private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office
          type: string
      type: object
    HeaderFieldTypes:
      description: >-
        HeaderFieldTypes is an enumeration for fields defined in MEF 61.1[1]
        Section 10.13.2 Cloud Ingress Class of Service Map.
      enum:
        - SOURCE_IP_ADDRESS
        - DESTINATION_IP_ADDRESS
        - L4_PROTOCOL
        - SOURCE_L4_PORT
        - DESTINATION_L4_PORT
        - ETHERNET_PCP
        - IP_DS
      type: string
    IaIngressClassOfServiceMap:
      properties:
        defaultCosName:
          description: >-
            Default Class of Service Name. Reference MEF 61.1 Section 10.13.2
            Cloud Ingress Class of Service Map and Section 11.9 IPVC EP Ingress
            Class of Service Map Service Attribute. Reference MEF 69.1 Section
            9.1 [R11], [R18] For an Internet Access Service, Cloud Ingress Class
            of Service Map (F, M, D), default CoS name, D, MUST NOT be Discard.
          type: string
        headerFieldTypes:
          description: >-
            Is a list of one or more fields in the packet header that are used
            to determine the CoS Name. Reference MEF 61.1 Section 10.13.2 Cloud
            Ingress Class of Service Map.
          items:
            $ref: '#/components/schemas/HeaderFieldTypes'
          minItems: 1
          type: array
      type: object
    IaIpSls:
      description: >-
        The IPVC Service Level Specification (SLS) describes the performance
        objectives for the performance of conformant IP Data Packets that flow
        over the IPVC. The IPVC Service Level Specification Attribute is either
        None, or a four-tuple of the form (s,T,E,L) where s is the start time, T
        is a period of time, E is a set of SLS entries and L is a set of the CoS
        Name and number of other parameters specific to the Performance Metric.
        Reference MEF 61.1 Section 10.9 IPVC Service Level Specification Service
        Attribute.
      properties:
        oneWayPacketDelayPercentile:
          description: One-way Packet Delay Percentile metric.
          items:
            $ref: '#/components/schemas/OneWayPacketDelayPercentile'
          type: array
        oneWayInterPacketDelayVariation:
          description: One-way Inter-Packet Delay Variation metric.
          items:
            $ref: '#/components/schemas/OneWayInterPacketDelayVariation'
          type: array
        oneWayPacketDelayRange:
          description: One-way Packet Delay Range metric.
          items:
            $ref: '#/components/schemas/OneWayPacketDelayRange'
          type: array
        serviceUptime:
          description: Service uptime metric.
          items:
            $ref: '#/components/schemas/ServiceUptime'
          type: array
        oneWayPacketLossRatio:
          description: One-way Packet Loss Ratio metric.
          items:
            $ref: '#/components/schemas/OneWayPacketLossRatio'
          type: array
        oneWayMeanPacketDelay:
          description: One-way Mean Packet Delay metric.
          items:
            $ref: '#/components/schemas/OneWayMeanPacketDelay'
          type: array
        startTime:
          description: Start time of IP SLS.
          format: date-time
          type: string
        periodOfTime:
          description: Period of time over which IP SLS is measured.
          $ref: '#/components/schemas/TimeDuration'
      type: object
    InformationRate:
      description: A value and a unit of measure that specifies an Information Rate.
      properties:
        irValue:
          description: >-
            The value in the information rate. For example if the information
            rate is 70 kbps this element is 70.
          minimum: 0
          type: number
        irUnits:
          description: >-
            The unit of measure for the Information Rate. For example if the
            Information Rate is 70KBPS this element is KBPS. Note that the
            values are decimal values. 1 KBPS is 1000 bits per second and 1MBPS
            is 1,000,000 bits per second.
          $ref: '#/components/schemas/IrUnits'
      type: object
    IpBwpEnvelope:
      description: >-
        A BWP Envelope is a list of Bandwidth Profile Flows, plus additional
        parameters for the BWP as a whole. A BWP Envelope is a set of one or
        more BWP Flows that are associated such that the amount of traffic for
        one flow can affect the amount that is permitted for another flow.
        Reference MEF 61.1 Section 17.3 Bandwidth Profile Envelopes.
      properties:
        tE:
          description: >-
            The Envelope IR Time in milliseconds. This is the time period over
            which average Information Rates are calculated and thus it limits
            the size of a burst. Reference MEF 61.1 Section 17.3 Bandwidth
            Profile Envelopes.
          type: integer
        maxIrE:
          description: >-
            The Envelope Maximum Information Rate in bits per second. This is
            the limit on the total aggregate information rate of traffic across
            all BWP Flows in the Envelope. Reference MEF 61.1 Section 17.3
            Bandwidth Profile Envelopes.
          $ref: '#/components/schemas/InformationRate'
      type: object
    IpBwpFlow:
      description: >-
        A Bandwidth Profile Flow is a stream of IP Packets meeting certain
        criteria. The criteria than can be used depends on which BWP Envelope
        the BWP Flow is a part of. Reference MEF 61.1 Section 17.2 Bandwidth
        Profile Flows.
      properties:
        maxIr:
          description: >-
            Identifier for Maximum Information Rate in bits per second. Limit on
            the average information rate of IP Packets for this BWP Flow.
            Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters for a
            Bandwidth Profile Flow.
          $ref: '#/components/schemas/InformationRate'
        flowIdentifier:
          description: >-
            Identifier for the BWP Flow within the BWP Envelope. Unique integer
            between 1 and n where n is the number of BWP Flows in the BWP
            Envelope. Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters
            for a Bandwidth Profile Flow.
          type: integer
        weight:
          description: >-
            Identifier for Weight as an integer greater than or equal to 0.
            Relative weight for this BWP Flow compared to other BWP Flows in the
            BWP Envelope. Reference MEF 61.1 Table 29 - Bandwidth Profile
            Parameters for a Bandwidth Profile Flow.
        burstBehavior:
          description: >-
            Identifier for Burst Behavior either Optimize-Delay or
            Optimize-Throughput. Whether the SP is requested to optimize the
            delay characteristic of this flow, or the throughput. Reference MEF
            61.1 Table 29 - Bandwidth Profile Parameters for a Bandwidth Profile
            Flow.
          $ref: '#/components/schemas/BurstBehavior'
        cir:
          description: >-
            Identifier for Committed Information Rate in bits per second.
            Average information rate of IP Packets that is committed to this BWP
            Flow. Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters for
            a Bandwidth Profile Flow.
          $ref: '#/components/schemas/InformationRate'
      type: object
    IpUniEgressBwpAccessLink:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            All Ingress IP Data Packets at the UNI that are received over one of
            a give set of UNI Access Links. Reference MEF 61.1 Section 12.5 UNI
            Egress BWP Envelope.
          properties:
            uniAccessLinkIdentifier:
              description: UNI Access Link Identifier.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpUniEgressBwpEnvelope:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            A single Bandwidth Profile Envelope consisting of parameters and
            Bandwidth Profile  Flow specifications. If specified, the BWP
            Envelope is used for an egress Bandwidth Profile. The BWP Flows can
            be defined per UNI, per IPVC EP, per UNI Access Link, per CosName,
            etc. Reference MEF 61.1 Section 12.5 UNI Egress Bandwidth Profile
            Envelope Service Attribute.
          properties:
            ipUniEgressBwpUni:
              description: >-
                All Egress IP Data Packets at the UNI. Reference MEF 61.1
                Section 12.5 UNI Egress BWP Envelope.
              $ref: '#/components/schemas/IpUniEgressBwpUni'
            ipUniEgressBwpAccessLink:
              description: >-
                All Egress IP Data Packets at the UNI that are mapped to any of
                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1
                Section 12.5 UNI Egress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniEgressBwpAccessLink'
              type: array
            ipUniEgressBwpIpvcEpCos:
              description: >-
                All Egress IP Data Packets at the UNI that are mapped to any of
                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1
                Section 12.5 UNI Egress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniEgressBwpIpvcEpCos'
              type: array
            ipUniEgressBwpIpvcEpCosAccessLink:
              description: >-
                All Egress IP Data Packets at the UNI that are received over one
                of a given set of UNI Access Links, and that are mapped to the
                any of a given set of (IPVC EP, Cos Name) pairs. Reference MEF
                61.1 Section 12.5 UNI Egress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniEgressBwpIpvcEpCosAccessLink'
              type: array
            ipUniEgressBwpIpvcEp:
              description: >-
                All Egress IP Data Packets at the UNI that are mapped to any of
                a given set of IPVC EPs. Reference MEF 61.1 Section 12.5 UNI
                Egress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniEgressBwpIpvcEp'
              type: array
            ipUniEgressBwpIpvcEpAccessLink:
              description: >-
                All Egress IP Data Packets at the UNI that are received over one
                of a give set of UNI Access Links. Reference MEF 61.1 Section
                12.5 UNI Egress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniEgressIpvcBwpIpvcEpAccessLink'
              type: array
          type: object
    IpUniEgressBwpIpvcEp:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
        - description: >-
            All Ingress IP Data Packets at the UNI that are mapped to any of a
            given set of IPVC EPs. Reference MEF 61.1 Section 12.5 UNI Egress
            BWP Envelope.
          properties:
            ipvcEndPointIdentifier:
              description: >-
                IPVC End Point Identifier for an IPVC End Point located at the
                UNI.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpUniEgressBwpIpvcEpCos:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            All Ingress IP Data Packets at the UNI that are mapped to any of a
            given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1 Section
            12.5 UNI Egress BWP Envelope.
          properties:
            ipvcEpIdCosName:
              description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpUniEgressBwpIpvcEpCosAccessLink:
      description: >-
        All Ingress IP Data Packets at the UNI that are received over one of a
        given set of UNI Access Links,and that are mapped to the any of a given
        set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1 Section 12.4 UNI
        Ingress BWP Envelope.
      properties:
        ipvcEpIdCosName:
          description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.
          items:
            $ref: '#/components/schemas/EndPointIdentifierAndCosName'
          minItems: 1
          type: array
        uniAccessLinkIdentifier:
          description: UNI Access Link Identifier.
          items:
            type: string
          minItems: 1
          type: array
      type: object
    IpUniEgressBwpUni:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
      description: >-
        All Ingress IP Data Packets at the UNI. Reference MEF 61.1 Section 12.5
        UNI Egress BWP Envelope.
    IpUniEgressIpvcBwpIpvcEpAccessLink:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            All Ingress IP Data Packets at the UNI that are received over one of
            a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI
            Ingress BWP Envelope.
          properties:
            ipvcEndPointIdentifier:
              description: IPVC End Point Identifier
              items:
                type: string
              minItems: 1
              type: array
            uniAccessLinkIdentifier:
              description: UNI Access Link Identifier.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpUniIngressBwpAccessLink:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            All Ingress IP Data Packets at the UNI that are received over one of
            a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI
            Ingress BWP Envelope.
          properties:
            uniAccessLinkIdentifier:
              description: UNI Access Link Identifier.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpUniIngressBwpEnvelope:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            A single Bandwidth Profile Envelope consisting of parameters and
            Bandwidth Profile Flow specifications. If specified, the BWP
            Envelope is used for an ingress Bandwidth Profile. The BWP Flows can
            be defined per UNI, per IPVC EP, per UNI Access Link, per CosName,
            etc. Reference MEF 61.1 Section 12.4 UNI Ingress Bandwidth Profile
            Envelope Service Attribute.
          properties:
            ipUniIngressBwpUni:
              description: >-
                All Ingress IP Data Packets at the UNI. Reference MEF 61.1
                Section 12.4 UNI Ingress BWP Envelope.
              $ref: '#/components/schemas/IpUniIngressBwpUni'
            ipUniIngressBwpIpvcEpCosAccessLink:
              description: >-
                All Ingress IP Data Packets at the UNI that are received over
                one of a given set of UNI Access Links, and that are mapped to
                the any of a given set of (IPVC EP, Cos Name) pairs. Reference
                MEF 61.1 Section 12.4 UNI Ingress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniIngressBwpIpvcEpCosAccessLink'
              type: array
            ipUniIngressBwpIpvcEp:
              description: >-
                All Ingress IP Data Packets at the UNI that are mapped to any of
                a given set of IPVC EPs. Reference MEF 61.1 Section 12.4 UNI
                Ingress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniIngressBwpIpvcEp'
              type: array
            ipUniIngressBwpIpvcEpCos:
              description: >-
                All Ingress IP Data Packets at the UNI that are mapped to any of
                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1
                Section 12.4 UNI Ingress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniIngressBwpIpvcEpCos'
              type: array
            ipUniIngressBwpAccessLink:
              description: >-
                All Ingress IP Data Packets at the UNI that are mapped to any of
                a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1
                Section 12.4 UNI Ingress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniIngressBwpAccessLink'
              type: array
            ipUniIngressBwpIpvcEpAccessLink:
              description: >-
                All Ingress IP Data Packets at the UNI that are received over
                one of a give set of UNI Access Links. Reference MEF 61.1
                Section 12.4 UNI Ingress BWP Envelope.
              items:
                $ref: '#/components/schemas/IpUniIngressIpvcBwpIpvcEpAccessLink'
              type: array
          type: object
    IpUniIngressBwpIpvcEp:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
        - description: >-
            All Ingress IP Data Packets at the UNI that are mapped to any of a
            given set of IPVC EPs. Reference MEF 61.1 Section 12.4 UNI Ingress
            BWP Envelope.
          properties:
            ipvcEndPointIdentifier:
              description: >-
                IPVC End Point Identifier for an IPVC End Point located at the
                UNI.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpUniIngressBwpIpvcEpCos:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            All Ingress IP Data Packets at the UNI that are mapped to any of a
            given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1 Section
            12.4 UNI Ingress BWP Envelope.
          properties:
            ipvcEpIdCosName:
              description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpUniIngressBwpIpvcEpCosAccessLink:
      description: >-
        All Ingress IP Data Packets at the UNI that are received over one of a
        given set of UNI Access Links,and that are mapped to the any of a given
        set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1 Section 12.4 UNI
        Ingress BWP Envelope.
      properties:
        ipvcEpidCosName:
          description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table 28.
          items:
            $ref: '#/components/schemas/EndPointIdentifierAndCosName'
          minItems: 1
          type: array
        uniAccessLinkIdentifier:
          description: UNI Access Link Identifier.
          items:
            type: string
          minItems: 1
          type: array
      type: object
    IpUniIngressBwpUni:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
      description: >-
        All Ingress IP Data Packets at the UNI. Reference MEF 61.1 Section 12.4
        UNI Ingress BWP Envelope.
    IpUniIngressIpvcBwpIpvcEpAccessLink:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            All Ingress IP Data Packets at the UNI that are received over one of
            a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI
            Ingress BWP Envelope.
          properties:
            ipvcEndPointIdentifier:
              description: IPVC End Point Identifier
              items:
                type: string
              minItems: 1
              type: array
            uniAccessLinkIdentifier:
              description: UNI Access Link Identifier.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    Ipv4Ipv6Prefixes:
      description: >-
        IPv4 and IPv6 prefix lists.  Includes subnet addresses and prefix
        length.
      properties:
        listOfIpv4ReservedPrefixes:
          description: List of IPv4 prefixes.
          items:
            $ref: '#/components/schemas/Ipv4Prefix'
          type: array
        listOfIpv6ReservedPrefixes:
          description: List of IPv6 prefixes.
          items:
            $ref: '#/components/schemas/Ipv6Prefix'
          type: array
      type: object
    Ipv4Prefix:
      description: >-
        Data type representing IPv4 address prefix and mask length between 0 and
        31 bits.
      properties:
        prefixLength:
          description: IPv4 address prefix. Length 0-31.
          type: integer
        ipv4Address:
          description: IPv4 address.
          type: string
      type: object
    Ipv4Subnet:
      description: >-
        Ipv4Subnet is a data type representing an IPv4 subnet logical partition
        of an IP network. Included is list of Service Provider IPv4 addresses.
      properties:
        serviceProviderIpv4Addresses:
          description: List of Service Provider IPv4 addresses.
          items:
            type: string
          minItems: 1
          type: array
        ipv4Prefix:
          description: >-
            IPv4 address prefix (IPv4 address prefix and mask length between 0
            and 31 in bits).
          $ref: '#/components/schemas/Ipv4Prefix'
      type: object
    Ipv6AddressType:
      description: Basic Internet Access IPv6 Connection Address mechanism.
      enum:
        - DHCP
        - SLAAC
      type: string
    Ipv6Prefix:
      description: >-
        Data type representing IPv6 address prefix and mask length between 0 and
        127 in bits.
      properties:
        prefixLength:
          description: IPv6 address prefix. Length 0-127.
          type: integer
        ipv6Address:
          description: IPv6 address.
          type: string
      type: object
    Ipv6Subnet:
      description: >-
        IPv6Subnet is a data type representing an IPv6 subnet logical partition
        of an IP network. Included is list of Service Provider IPv6 addresses.
      properties:
        serviceProviderIpv6Addresses:
          description: List of IPv6 Service Provider addresses.
          items:
            type: string
          minItems: 1
          type: array
        ipv6Prefix:
          description: >-
            IPv6 Prefix (IPv6 address prefix and mask length between 0 and 127
            in bits).
          $ref: '#/components/schemas/Ipv6Prefix'
      type: object
    IpvcEpEgressBwp:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
        - description: >-
            An Egress Bandwidth for and IPVC End Point with an associated Class
            of Service identifier.
          properties:
            cosName:
              description: Class of Service name.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpvcEpEgressBwpAll:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
    IpvcEpEgressBwpEnvelope:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            A single Bandwidth Profile Envelope consisting of parameters and
            Bandwidth Profile specifications. An Egress Bandwidth Profile
            Envelope can be specified for one of a UNI, a UNI Access Link and
            ENNI Link or an IPVC End Point. Reference MEF 61.1 Section 11.11
            IPVC EP Egress Bandwidth Profile Envelope Service Attribute.
          properties:
            ipvcEpEgressBwp:
              description: Pointer to IpvcEpBwp
              items:
                $ref: '#/components/schemas/IpvcEpEgressBwp'
              minItems: 1
              type: array
            ipvcEpEgressBwpAll:
              description: Pointer to IpvcEpBwpAll
              $ref: '#/components/schemas/IpvcEpEgressBwpAll'
          type: object
    IpvcEpIngressBwp:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
        - description: >-
            An Ingress Bandwidth for and IPVC End Point with an associated Class
            of Service identifier.
          properties:
            cosName:
              description: Class of Service name.
              items:
                type: string
              minItems: 1
              type: array
          type: object
    IpvcEpIngressBwpAll:
      allOf:
        - $ref: '#/components/schemas/IpBwpFlow'
    IpvcEpIngressBwpEnvelope:
      allOf:
        - $ref: '#/components/schemas/IpBwpEnvelope'
        - description: >-
            A single Bandwidth Profile Envelope consisting of parameters and
            Bandwidth Profile specifications. An Ingress Bandwidth Profile
            Envelope can be specified for one of a UNI, a UNI Access Link and
            ENNI Link or an IPVC End Point. Reference MEF 61.1 Section 11.11
            IPVC EP Ingress Bandwidth Profile Envelope Service Attribute.
          properties:
            ipvcEpIngressBwp:
              description: Pointer to IpvcEpBwp
              items:
                $ref: '#/components/schemas/IpvcEpIngressBwp'
              minItems: 1
              type: array
            ipvcEpIngressBwpAll:
              description: Pointer to IpvcEpBwpAll
              $ref: '#/components/schemas/IpvcEpIngressBwpAll'
          type: object
    IrUnits:
      description: >-
        The unit of measure for the Information Rate. For example if the
        Information Rate is 70KBPS this element is KBPS. Note that the values
        are decimal values. 1 KBPS is 1000 bits per second and 1MBPS is
        1,000,000 bits per second.
      enum:
        - BPS
        - KBPS
        - MBPS
        - GBPS
        - TBPS
        - PBPS
        - EBPS
        - ZBPS
        - YBPS
      type: string
    MEFBillingAccountRef:
      description: A reference to the Buyer's Billing Account
      properties:
        id:
          description: >-
            Identifies the buyer's billing account to which the recurring and
            non-recurring charges for this order or order item will be billed.
            Required if the Buyer has more than one Billing Account with the
            Seller and for all new Product Orders.
          type: string
      required:
        - id
      type: object
    MEFChargePeriod:
      description: Used for a recurring charge to indicate period.
      enum:
        - hour
        - day
        - week
        - month
        - year
      type: string
    MEFEndOfTermAction:
      description: The action the Seller will take once the term expires.
      enum:
        - roll
        - autoDisconnect
        - autoRenew
      type: string
    MEFItemTerm:
      description: The term of the Item
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        endOfTermAction:
          $ref: '#/components/schemas/MEFEndOfTermAction'
        name:
          description: Name of the term
          type: string
        description:
          description: Description of the term
          type: string
        rollInterval:
          $ref: '#/components/schemas/Duration'
      type: object
    MEFPriceType:
      description: Indicates if the price is for recurring or non-recurring charges.
      enum:
        - recurring
        - nonRecurring
        - usageBased
      type: string
    MEFProduct:
      description: A product is realized as one or more service(s) and / or resource(s).
      properties:
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        relatedSite:
          description: Reference to a Site where the PRoduct is provided.
          items:
            $ref: '#/components/schemas/RelatedGeographicSite'
          type: array
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        lastUpdateDate:
          description: Latest date when the product has been updated.
          format: date-time
          type: string
        relatedContactInformation:
          description: Party playing a role for this Product
          items:
            $ref: '#/components/schemas/RelatedContactInformation'
          type: array
        '@type':
          description: 'When sub-classing, this defines the sub-class entity name'
          type: string
        externalId:
          description: Buyer identifier of the product
          type: string
        billingAccount:
          $ref: '#/components/schemas/MEFBillingAccountRef'
        productOrderItem:
          description: >-
            The Product Order Item of the associated Product order that resulted
            in the creation of this Product.
          items:
            $ref: '#/components/schemas/MEFProductOrderItemRef'
          type: array
        productTerm:
          description: Term of the Product
          items:
            $ref: '#/components/schemas/MEFItemTerm'
          type: array
        terminationDate:
          description: >-
            Is the date when the product was terminated. MEF: Termination date
            (commercial) is when the product has been terminated (when the
            disconnect in the product order has been processed).
          format: date-time
          type: string
        statusChange:
          description: status change for the Product
          items:
            $ref: '#/components/schemas/MEFProductStatusChange'
          type: array
        productConfiguration:
          $ref: '#/components/schemas/MEFProductConfiguration'
        productRelationship:
          description: >-
            A list of references to existing products that are related to the
            Product.
          items:
            $ref: '#/components/schemas/ProductRelationship'
          type: array
        id:
          description: Unique identifier of the product
          type: string
        href:
          description: Reference of the product
          type: string
        startDate:
          description: >-
            Is the date from which the product starts. MEF: Start date is when
            the product is active for the first time (when the install in the
            product order has been processed).
          format: date-time
          type: string
        productPrice:
          description: A list of Prices associated with the Product
          items:
            $ref: '#/components/schemas/ProductPrice'
          type: array
        status:
          $ref: '#/components/schemas/MEFProductStatusType'
      required:
        - id
        - startDate
        - status
      type: object
    MEFProductConfiguration:
      description: >-
        MEFProductConfiguration is used as an extension point for MEF specific
        product/service payload.  The `@type` attribute is used as a
        discriminator
      discriminator:
        mapping:
          'urn:mef:lso:spec:cantata-sonata:advancedIaUni:v0.1.0:all': '#/components/schemas/AdvancedIaUni'
          'urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all': '#/components/schemas/BasicIaIpvc'
          'urn:mef:lso:spec:cantata-sonata:advancedIaIpvc:v0.1.0:all': '#/components/schemas/AdvancedIaIpvc'
          'urn:mef:lso:spec:cantata-sonata:advancedIaUniAccessLink:v0.1.0:all': '#/components/schemas/AdvancedIaUniAccessLink'
        propertyName: '@type'
      properties:
        '@type':
          description: >-
            The name of the type, defined in the JSON schema specified  above,
            for the product that is the subject of the POQ Request. The named
            type must be a subclass of MEFProductConfiguration.
          enum:
            - 'urn:mef:lso:spec:cantata-sonata:advancedIaUni:v0.1.0:all'
            - 'urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all'
            - 'urn:mef:lso:spec:cantata-sonata:advancedIaIpvc:v0.1.0:all'
            - 'urn:mef:lso:spec:cantata-sonata:advancedIaUniAccessLink:v0.1.0:all'
          type: string
      required:
        - '@type'
      type: object
    MEFProductOrderItemRef:
      description: A reference to a ProductOrder item
      properties:
        productOrderHref:
          description: Reference of the related ProductOrder.
          type: string
        productOrderItemId:
          description: Id of an Item within the Product Order
          type: string
        productOrderId:
          description: Unique identifier of a ProductOrder.
          type: string
      required:
        - productOrderId
        - productOrderItemId
      type: object
    MEFProductStatusChange:
      description: >-
        Holds the reached status, reasons and associated date the Product Order
        status changed, populated by the Seller.
      properties:
        changeReason:
          description: The reason why the status changed.
          type: string
        changeDate:
          description: The date and time the status changed.
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/MEFProductStatusType'
      required:
        - changeDate
        - status
      type: object
    MEFProductStatusType:
      description: |-
        Possible values for the status of a MEF product

        | name                        | MEF 81 name                 |
        | --------------------------- | --------------------------- |
        | `active`                    | ACTIVE                      |
        | `active.pendingChange`      | ACTIVE_PENDING_CHANGE       |
        | `pendingTerminate`          | ACTIVE_PENDING_TERMINATE    |
        | `cancelled`                 | CANCELLED                   |
        | `pendingActive`             | PENDING                     |
        | `suspended`                 | SUSPENDED                   |
        | `suspendedPendingTerminate` | SUSPENDED_PENDING_TERMINATE |
        | `terminated`                | TERMINATED                  |
      enum:
        - active
        - active.pendingChange
        - cancelled
        - pendingActive
        - pendingTerminate
        - suspended
        - suspendedPendingTerminate
        - terminated
      type: string
    MEFProduct_Find:
      description: >-
        Class used to provide product overview retrieved in GET (by list)
        operation
      properties:
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        relatedSite:
          description: Reference to a Site where the PRoduct is provided.
          items:
            $ref: '#/components/schemas/RelatedGeographicSite'
          type: array
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        lastUpdateDate:
          description: Latest date when the product has been updated.
          format: date-time
          type: string
        externalId:
          description: >-
            This identifier is optionally provided during the product ordering
            and stored for informative purpose in the seller inventory
          type: string
        productRelationship:
          description: >-
            A list of references to existing products that are related to the
            Product.
          items:
            $ref: '#/components/schemas/ProductRelationship'
          type: array
        id:
          description: Unique identifier of the product
          type: string
        href:
          description: Reference of the product
          type: string
        billingAccount:
          $ref: '#/components/schemas/MEFBillingAccountRef'
        productOrderItem:
          description: >-
            The Product Order Item of the associated Product order that resulted
            in the creation of this Product.
          items:
            $ref: '#/components/schemas/MEFProductOrderItemRef'
          type: array
        startDate:
          description: The date from which the product starts
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/MEFProductStatusType'
      required:
        - id
        - status
      type: object
    MEFSubUnit:
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
            WHARF.
          type: string
      required:
        - subUnitNumber
        - subUnitType
      type: object
    Money:
      description: A base / value business entity used to represent money
      properties:
        unit:
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
          type: string
        value:
          description: A positive floating point number
          format: float
          type: number
      required:
        - unit
        - value
      type: object
    OneWayInterPacketDelayVariation:
      description: >-
        The One-way Inter-Packet Delay Variation Performance Metric is the
        maximum, over all the ordered pairs of SLS-RPs in a given set S, of the
        vth percentile of differences between the one-way packet delays of
        Qualified Packets that arrive at time separated by a given interval tau,
        for a given ordered pair of SLS-RPs, a given CoS Name, and a given time
        period Tk. Reference MEF 61.1 Section 10.9.6 One-way Inter-Packet Delay
        Variation Performance Metric.
      properties:
        slsRpPair:
          description: >-
            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5
            One-way Mean Packet Delay Performance Metric, Table-5.
          items:
            $ref: '#/components/schemas/SlsRpPair'
          minItems: 1
          type: array
        interPacketDelayVariationPercentile:
          description: >-
            Inter-Packet Delay Variation Percentile. Reference MEF 61.1 Section
            10.9.6 One-way Inter-Packet Delay Variation Performance Metric,
            Table 6.
          $ref: '#/components/schemas/Percentage'
        cosName:
          description: >-
            One of the values in the IPVC List of Class of Service Names Service
            Attribute. Reference MEF 61.1 Section 10.9.6 One-way Inter-Packet
            Delay Variation Performance Metric, Table-6.
          type: string
        packetArrivalTimeDifference:
          description: >-
            Difference in the time of arrival of packets. Reference MEF 61.1
            Section 10.9.6 One-way Inter-Packet Delay Variation Performance
            Metric, Table 6.
          type: number
        interPacketDelayVariationObjective:
          description: >-
            Inter-Packet Delay Variation Objective. Reference MEF 61.1 Section
            10.9.6 One-way Inter-Packet Delay Variation Performance Metric,
            Table 6.
          type: number
      type: object
    OneWayMeanPacketDelay:
      description: >-
        The One-way Mean Packet Delay Performance Metric is the maximum, over
        all the ordered pairs of SLS-RPs in a given set S, of the arithmetic
        mean of one-way packet delay for Qualified Packets for a given ordered
        pair of SLS-RPs, a given CoS Name, and a  given time period Tk.
        Reference MEF 61.1 Section 10.9.5 One-way Mean Packet Delay Performance
        Metric.
      properties:
        slsRpPair:
          description: >-
            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5
            One-way Mean Packet Delay Performance Metric, Table-5.
          items:
            $ref: '#/components/schemas/SlsRpPair'
          minItems: 1
          type: array
        meanPacketDelayObjective:
          description: >-
            Mean Packet Delay Objective. Reference MEF 61.1 Section 10.9.5
            One-way Mean Packet Delay Performance Metric, Table-5.
          type: number
        cosName:
          description: >-
            One of the values in the IPVC List of Class of Service Names Service
            Attribute. Reference MEF 61.1 Section 10.9.5 One-way Mean Packet
            Delay Performance Metric, Table-5.
          type: string
      type: object
    OneWayPacketDelayPercentile:
      description: >-
        The One-way Packet Delay Percentile Performance Metric is the maximum,
        over all the order pairs of SLS-RPs in a given set S, of the pth
        percentile of one-way packet delay for Qualified Packets for a given
        order pair of SLS-RPs, a given CoS Name and a given time period Tk.
        Reference MEF 61.1 Section 10.9.4 One-way Packet Delay Percentile
        Performance Metric.
      properties:
        slsRpPair:
          description: >-
            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5
            One-way Mean Packet Delay Performance Metric, Table-5.
          items:
            $ref: '#/components/schemas/SlsRpPair'
          minItems: 1
          type: array
        packetDelayRangePercentile:
          description: >-
            Packet Delay Range Percentile. Reference MEF 61.1 Section 10.9.7
            One-way Packet Delay Range Performance Metric, Table 7.
          $ref: '#/components/schemas/Percentage'
        cosName:
          description: >-
            One of the values in the IPVC List of Class of Service Names Service
            Attribute. Reference MEF 61.1 Section 10.9.4 One-way Packet Delay
            Percentile Performance Metric, Table-4.
          type: string
        packetDelayRangeObjective:
          description: >-
            Packet Delay Objective. Reference MEF 61.1 Section 10.9.4 One-way
            Packet Delay Percentile Performance Metric, Table-4.
          type: number
      type: object
    OneWayPacketDelayRange:
      description: >-
        The One-way Packet Delay Range Performance Metric is the maximum, over
        all the ordered pairs of SLS-RPs in a given set S, of the difference
        between the rth percentile of one-way packet delay and the minimum
        one-way packet delay, for Qualified Packets for a given ordered pair of
        SLS-RPs, a given CoS Name, and a given time period Tk. Reference MEF
        61.1 Section 10.9.7 One-way Packet Delay Range Performance Metric.
      properties:
        slsRpPair:
          description: >-
            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5
            One-way Mean Packet Delay Performance Metric, Table-5.
          items:
            $ref: '#/components/schemas/SlsRpPair'
          minItems: 1
          type: array
        packetDelayRangePercentile:
          description: >-
            Packet Delay Range Percentile. Reference MEF 61.1 Section 10.9.7
            One-way Packet Delay Range Performance Metric, Table 7.
          $ref: '#/components/schemas/Percentage'
        packetDelayRangeObjective:
          description: >-
            Packet Delay Range Objective. Reference MEF 61.1 Section 10.9.7
            One-way Packet Delay Range Performance Metric, Table 7.
          type: number
        cosName:
          description: >-
            One of the values in the IPVC List of Class of Service Names Service
            Attribute. Reference MEF 61.1 Section 10.9.7 One-way Mean Packet
            Delay Performance Metric, Table-7.
          type: string
      type: object
    OneWayPacketLossRatio:
      description: >-
        The One-way Packet Loss Ratio Performance Metric is the maximum, over
        the ordered pairs of SLS-RPs in a given set S, of the ratio of lost
        packets to transmitted packets for a given ordered pair of SLS-RPs, a
        given CoS Name and a given time period Tk. Reference MEF 61.1 Section
        10.9.8 One-way Packet Loss Ratio Performance Metric.
      properties:
        packetLossRatioObjective:
          description: >-
            Packet Loss Ratio Objective. Reference MEF 61.1 Section 10.9.8
            One-way Packet Loss Ratio Performance Metric, Table 8.
          $ref: '#/components/schemas/Percentage'
        slsRpPair:
          description: >-
            Set of ordered SLS-RP pairs. Reference MEF 61.1 Section 10.9.5
            One-way Mean Packet Delay Performance Metric, Table-5.
          items:
            $ref: '#/components/schemas/SlsRpPair'
          minItems: 1
          type: array
        cosName:
          description: >-
            One of the values in the IPVC List of Class of Service Names Service
            Attribute. Reference MEF 61.1 Section 10.9.8 One-way Packet Loss
            Ratio Performance Metric, Table-8.
          type: string
      type: object
    Ospf:
      description: >-
        When an entry in the UNI Routing Protocols is for OSPF, OSPF as
        specified in RFC 2328 (for IPv4) and/or RFC 5340 (for IPv6) is used
        across each UNI Access Link to exchange routing information. Reference
        MEF 61.1 Section 12.7.2 OSPF.
      properties:
        deadInterval:
          description: 'Dead interval (0-429496295, in seconds)'
          type: integer
        areaId:
          description: 'Area ID (0-429967295), normally expressed as an IPv4 address.'
          type: integer
        retransmissionInterval:
          description: 'Retransmit interval (integer greater than 0, in seconds)'
          type: integer
        areaType:
          description: OSPF Area Type enumeration.
          $ref: '#/components/schemas/OspfAreaType'
        helloInterval:
          description: 'Hello interval (0-65535, in seconds)'
          type: integer
        authenticationType:
          description: OSPF Authentication Type.
          $ref: '#/components/schemas/OspfAuthenticationType'
        ipPrefixes:
          description: IPv4/IPv6 Prefixes that are advertised using OSPF.
          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
        administrativeDistance:
          description: Administrative distance (integer greater than 0)
          type: integer
      type: object
    OspfAreaType:
      description: OSPF Area Type enumeration.
      enum:
        - NORMAL
        - STUB
        - NSSA
      type: string
    OspfAuthenticationType:
      description: OSPF Authentication Type enumeration.
      enum:
        - NONE
        - PASSWORD
        - MESSAGE_DIGEST
      type: string
    PacketDelivery:
      description: >
        For each Ingress IP Data Packet that is mapped to one of the IPVC EPs
        for

        the IPVC it takes one of two values. STANDARD_ROUTING or

        POLICY-BASED_ROUTING

        STANDARD_ROUTING: If the IPVC Packet Delivery is Standard Routing,

        the egress UNI and UNI Ac-cess Link or egress ENNI and ENNI Link are

        generally selected by examining the destination IP address in the packet

        and matching it to an IP Prefix reachable via the IPVC EP at the egress 

        EI - in other words, by normal IP routing.

        POLICY_BASED_ROUTING: The behavior and requirements when the

        IPVC Packet Delivery Service Attribute is set to Policy-Based Routing

        are deferred to a future revision of this specification (MEF 61.1)
      enum:
        - STANDARD_ROUTING
        - POLICY_BASED_ROUTING
      type: string
    PcpMapping:
      description: Ethernet PCP mapping of CoS name to PCP value
      properties:
        ethernetPcp:
          description: PCP value
          maximum: 7
          minimum: 0
          type: integer
        cosName:
          description: Class of Service name
          type: string
      type: object
    PeeringAddress:
      description: >-
        Peering Addresses. Connection Addresses, or Loopbacks plus a list of
        pairs of IP addresses. Reference MEF 61.1 Section 12.7.3 BGP.
      properties:
        connectionAddress:
          description: >-
            If the Peering Addresses parameter is Connection Addresses, a
            separate BGP peering session is established over each UNI Access
            Link, using the primary IPv4 addresses in the UNI Access Link IPv4
            Connection Addressing Service Attribute (section 13.4) or the first
            IPv6 addresses in the UNI Access Link IPv6 Connection Addressing
            Service Attribute (section 13.5), as indicated by the Connection
            Address Family parameter.
          $ref: '#/components/schemas/EnabledDisabled'
        serviceProviderLoopback:
          description: Service Provider IP Loopback address.
          type: string
        loopbacks:
          description: >-
            If the Peering Addresses parameter is Loopbacks, a list of pairs of
            IP addresses is additionally specified, each pair containing the
            Subscriber's loopback address and the SP's or Operator's loopback
            address. A single BGP peering session is established for each pair
            of addresses.
          $ref: '#/components/schemas/EnabledDisabled'
        subscriberLoopback:
          description: Subscriber IP Loopback address.
          type: string
      type: object
    Percentage:
      description: This is a number of percent - a floating point number between 0 and 100
      maximum: 100
      minimum: 0
      type: number
    Price:
      description: >-
        Provides all amounts (tax included, duty free, tax rate), used currency
        and percentage to apply for Price Alteration.
      properties:
        taxRate:
          description: 'Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax.'
          format: float
          type: number
        taxIncludedAmount:
          $ref: '#/components/schemas/Money'
        dutyFreeAmount:
          $ref: '#/components/schemas/Money'
      required:
        - dutyFreeAmount
      type: object
    ProductOfferingRef:
      description: >-
        A reference to a Product Offering offered by the Seller to the Buyer. A
        Product Offering contains the commercial and technical details of a
        Product sold by a particular Seller. A Product Offering defines all of
        the commercial terms and, through association with a particular Product
        Specification, defines all the technical attributes and behaviors of the
        Product. A Product Offering may constrain the allowable set of
        configurable technical attributes and/or behaviors specified in the
        associated Product Specification.
      properties:
        href:
          description: >
            Hyperlink to a Product Offering in Sellers catalog. In case Seller
            is not providing a catalog API this field is not used. The catalog
            is provided by the Seller to the Buyer during onboarding.
          type: string
        id:
          description: >-
            id of a Product Offering. It is assigned by the Seller. The Buyer
            and the Seller exchange information about offerings' ids during the
            onboarding process.
          type: string
      required:
        - id
      type: object
    ProductPrice:
      description: >-
        An amount, usually of money, that represents the actual price paid by a
        Customer for a purchase, a rent or a lease of a Product. The price is
        valid for a defined period of time.
      properties:
        unitOfMeasure:
          description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
          type: string
        price:
          $ref: '#/components/schemas/Price'
        name:
          description: A short descriptive name such as "Subscription price".
          type: string
        priceType:
          $ref: '#/components/schemas/MEFPriceType'
        description:
          description: >-
            A narrative that explains in detail the semantics of this product
            price.
          type: string
        recurringChargePeriod:
          $ref: '#/components/schemas/MEFChargePeriod'
      required:
        - price
        - priceType
      type: object
    ProductRelationship:
      description: >-
        A relationship to existing Product. The requirements for usage for given
        Product are described in the Product Specification.
      properties:
        relationshipType:
          description: >-
            Specifies the type (nature) of the relationship to the related
            Product. The nature of required relationships vary for Products of
            different types. For example, a UNI or ENNI Product may not have any
            relationships, but an Access E-Line may have two mandatory
            relationships (related to the UNI on one end and the ENNI on the
            other). More complex Products such as multipoint IP or Firewall
            Products may have more complex relationships. As a result, the
            allowed and mandatory `relationshipType` values are defined in the
            Product Specification.
          type: string
        id:
          description: unique identifier
          type: string
        href:
          description: Hyperlink of the referenced product
          type: string
      required:
        - id
        - relationshipType
      type: object
    ProductSpecificationRef:
      description: >-
        A reference to a structured set of well-defined technical attributes
        and/or behaviors that are used to construct a Product Offering for sale
        to a market.
      properties:
        href:
          description: >
            Hyperlink to a Product Specification in Sellers catalog. In case
            Seller is not providing a catalog API this field is not used. The
            catalog is provided by the Seller to the Buyer during onboarding.
          type: string
        id:
          description: Unique identifier of the product specification
          type: string
      required:
        - id
      type: object
    RelatedContactInformation:
      description: |
        Contact information of an individual or organization playing a role for
        this Entity. The rule for mapping a represented attribute value to a
        `role` is to use the _lowerCamelCase_ pattern e.g. 
        - Buyer Order Item Contact: `role=buyerOrderItemContact` 
        - Buyer Implementation Contact: `role=buyerImplementationContact` 
        - Buyer Technical Contact: `role=buyerTechnicalContact`
      properties:
        number:
          description: Phone number
          type: string
        emailAddress:
          description: Email address
          type: string
        role:
          description: A role the party plays in a given context.
          type: string
        postalAddress:
          $ref: '#/components/schemas/FieldedAddress'
        organization:
          description: The organization or company that the contact belongs to
          type: string
        name:
          description: Name of the contact
          type: string
        numberExtension:
          description: Phone number extension
          type: string
      required:
        - emailAddress
        - name
        - number
        - role
      type: object
    RelatedGeographicSite:
      description: >-
        A  Geographic Site  and an associated role as installation address,
        delivery address, etc....
      properties:
        role:
          description: >-
            Role of the geographic site, such as: [home delivery], [shop
            retrieval]) MEF: The role that the Site plays, e.g. Billing Address,
            UNI Site, or ENNI Site.
          type: string
        id:
          description: Unique identifier of the geographic site
          type: string
        href:
          description: Hyperlink to the referenced geographic site
          type: string
      required:
        - id
        - role
      type: object
    RouteDistinguisherFields:
      description: BGP Route Distinguisher with two fields.
      properties:
        field1:
          description: Route Distinguisher field 1.
          type: string
        field2:
          description: Route Distinguisher field 2.
          type: string
    RoutingProtocols:
      description: >-
        Data type to support routing protocols and associated parameters that
        are used to exchange IP routes across the UNI. The value is a list of
        protocols (possibly empty), where each entry consists of the protocol
        name (one of Static, OSPF or BGP) the type of routes that will be
        exchanged (one of IPv4 or IPv6 or Both) and set of additional parameters
        as specified.  Reference MEF 61.1 Section 12.7 UNI Routing Protocols
        Service Attributes.
      properties:
        static:
          description: Reference to Static routing
          items:
            $ref: '#/components/schemas/Static'
          type: array
        bgp:
          description: Reference to BGP routing
          items:
            $ref: '#/components/schemas/Bgp'
          minItems: 1
          type: array
        ospf:
          description: Reference to OSPF routing.
          items:
            $ref: '#/components/schemas/Ospf'
          minItems: 1
          type: array
      type: object
    ServiceUptime:
      description: >-
        The Service Uptime Performance Metric is the proportion of time, during
        a given time period Tk, that the service is working from the perspective
        of the Subscriber (for a Subscriber IP Service) or the  perspective of
        the SP/SO (for an Operator IP Service), excluding any pre-agreed
        exceptions, for  example maintenance intervals. Reference MEF 61.1[1]
        Section 10.9 Service Uptime Performance Metric..
      properties:
        serviceUptimeObjective:
          description: >-
            Service Uptime Objective. Reference MEF 61.1 Section 10.9.9 Service
            Uptime Performance Metric, Table 9.
          $ref: '#/components/schemas/Percentage'
      type: object
    SlsReferencePoint:
      description: >-
        SlsReferencePoint is an abstract data type that can be subclassed to
        IpvcEndPoint and Location. Reference MEF 61.1 Section 10.9.1 SLS
        Reference Points.
      type: object
    SlsRpPair:
      description: >-
        Service Level Specification Reference Point Pair. In a multipoint or
        rooted multipoint IPVC, performance objectives are ideally specified as
        applying between pairs of IPVC EPs - in other words, they apply to the
        performance that IP Data Packets experience as they flow from one EI to
        another. The SlsRpPair is a representation of this association.
        Reference MEF 61.1 Section 10.9.1
      properties:
        toSlsReferencePoint:
          description: Pointer to the "to" SLS Reference Point.
          $ref: '#/components/schemas/SlsReferencePoint'
        fromSlsReferencePoint:
          description: Pointer to the "from" SLS Reference Point.
          $ref: '#/components/schemas/SlsReferencePoint'
      type: object
    Static:
      description: >-
        When an entry in the UNI Routing Protocols list is for Static, the IP
        Prefixes used in the Subscriber Network that are reachable via this UNI
        are specified as additional parameters in the entry. These are known as
        Static IP Prefixes. Reference MEF 61.1 Section 12.7.1 Static.
      properties:
        staticIpEntry:
          description: Static IP address entry.
          items:
            $ref: '#/components/schemas/StaticIpEntry'
          minItems: 1
          type: array
      type: object
    StaticIpEntry:
      description: >-
        StaticIpEntry data type including IPv4/IPv6 prefixes, forwarding
        information and administrative distance.
      properties:
        staticPrefix:
          description: Static IP prefix either IPv4 or IPv6.
          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'
        administrativeDistance:
          description: 'Administrative distance, an integer > 0.'
          type: integer
        forwardingInformation:
          description: >-
            Forwarding information with either Next Hop IP address or UNI Access
            Link identifier.
          $ref: '#/components/schemas/ForwardingInformation'
      type: object
    TimeDuration:
      description: >-
        This class is used to describe durations expressed as a 2-tuple, (value,
        units). The units from from nanoseconds to years.
      properties:
        timeDurationValue:
          description: >-
            The value of the duration. For example, if the duration is 20 ms,
            this element is 20.
          type: integer
        timeDurationUnits:
          description: >-
            The unit of measure in the duration. For example, if an interval is
            2ms, this element is MS.
          $ref: '#/components/schemas/TimeDurationUnits'
      type: object
    TimeDurationUnits:
      description: Enum listing the units of measure for a Time Duration
      enum:
        - NS
        - US
        - MS
        - SEC
        - MIN
        - HOUR
        - DAY
        - WEEK
        - MONTH
        - YEAR
      type: string
    TimeUnit:
      description: |
        Represents a unit of time.
        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)
      enum:
        - calendarMonths
        - calendarDays
        - calendarHours
        - calendarMinutes
        - businessDays
        - businessHours
        - businessMinutes
      type: string
    UniManagementType:
      description: >-
        Enumeration representing the UNI Management Type options. Reference MEF
        61.1 Section 12.2 UNI Management Type Service Attribute.
      enum:
        - SUBSCRIBER_MANAGEMENT
        - PROVIDER_MANAGEMENT
      type: string
    Vrid:
      description: >-
        VRID (Virtual Router ID) as defined in RFC 5798 is a number between 1
        and 255
      maximum: 255
      minimum: 1
      type: integer
