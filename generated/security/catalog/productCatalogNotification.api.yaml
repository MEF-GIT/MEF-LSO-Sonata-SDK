openapi: 3.0.1
info:
  description:
    "**This file forms part of MEF W142**\n\nThis API implements Business\
    \ Requirements described in MEF W127 \nrelated to the notifications that are sent\
    \ by the Seller to the Buyer.\n\n**This specification represents MEF work in progress\
    \ and is subject to\nchange.** \n\nList of supported use cases:\n- Send Event\
    \ Notification\n\nIt allows the Buyer to receive notifications about Product Categories',\
    \ Product Offerings',\nand Product Specifications' updates.\nThis allows the Buyer\
    \ to be up to date with the Product Catalog that is published by the Seller. \n\
    The Seller may introduce some changes related to Product Catalog Elements such\
    \ as adding new elements \nor modifying their lifecycle that causes sending notifications.\n\
    \nCopyright 2023 MEF Forum and its contributors\n\nThis file includes content\
    \ based on the TM Forum Product Catalog API (TMF620\nv4.1.0) available at https://github.com/tmforum-apis/TMF620_ProductCatalog,\n\
    which is licensed by the TM Forum under the Apache License version 2.0. Such\n\
    content has been modified by the MEF Forum and its contributors.\n"
  title: Product Catalog Notification
  version: 1.0.0-RC
servers:
  - url: "https://{serverBase}/mefApi/sonata/productCatalogNotifications/v1/"
    variables:
      serverBase:
        default: mef.net
        description: The base of Buyer's URL.
security:
  - oauth2MEFLSOAPI:
      - default
tags:
  - description: The Buyer's endpoint to send particular event types notifications to.
    name: Notification listeners
paths:
  /listener/categoryCreateEvent:
    post:
      description: Client listener for receiving the notification CategoryCreateEvent
      operationId: listenToCategoryCreateEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductCategoryEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToCategoryCreateEvent
      summary: Client listener for entity CategoryCreateEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/categoryAttributeValueChangeEvent:
    post:
      description: Client listener for receiving the notification CategoryAttributeValueChangeEvent
      operationId: listenToCategoryAttributeValueChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductCategoryEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToCategoryAttributeValueChangeEvent
      summary: Client listener for entity CategoryAttributeValueChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/categoryStatusChangeEvent:
    post:
      description: Client listener for receiving the notification CategoryStatusChangeEvent
      operationId: listenToCategoryStatusChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductCategoryEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToCategoryStatusChangeEvent
      summary: Client listener for entity CategoryStatusChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/productOfferingCreateEvent:
    post:
      description: Client listener for receiving the notification ProductOfferingCreateEvent
      operationId: listenToProductOfferingCreateEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductOfferingEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToProductOfferingCreateEvent
      summary: Client listener for entity ProductOfferingCreateEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/productOfferingAttributeValueChangeEvent:
    post:
      description: Client listener for receiving the notification ProductOfferingAttributeValueChangeEvent
      operationId: listenToProductOfferingAttributeValueChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductOfferingEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToProductOfferingAttributeValueChangeEvent
      summary: Client listener for entity ProductOfferingAttributeValueChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/productOfferingStatusChangeEvent:
    post:
      description: Client listener for receiving the notification ProductOfferingStatusChangeEvent
      operationId: listenToProductOfferingStatusChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductOfferingEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToProductOfferingStatusChangeEvent
      summary: Client listener for entity ProductOfferingStatusChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/productSpecificationCreateEvent:
    post:
      description: Client listener for receiving the notification ProductSpecificationCreateEvent
      operationId: listenToProductSpecificationCreateEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductSpecificationEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToProductSpecificationCreateEvent
      summary: Client listener for entity ProductSpecificationCreateEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/productSpecificationAttributeValueChangeEvent:
    post:
      description: Client listener for receiving the notification ProductSpecificationAttributeValueChangeEvent
      operationId: listenToProductSpecificationAttributeValueChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductSpecificationEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToProductSpecificationAttributeValueChangeEvent
      summary: Client listener for entity ProductSpecificationAttributeValueChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/productSpecificationStatusChangeEvent:
    post:
      description: Client listener for receiving the notification ProductSpecificationStatusChangeEvent
      operationId: listenToProductSpecificationStatusChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductSpecificationEvent"
        description: The event data
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "408":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error408"
          description: Request Time-out
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToProductSpecificationStatusChangeEvent
      summary: Client listener for entity ProductSpecificationStatusChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
components:
  schemas:
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error:
      type: object
      description: |
        Standard Class used to describe API response error
        Not intended to be use directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          type: string
          description:
            Text that explains the reason for error. This can be shown
            to a client user.
          maxLength: 255
        message:
          type: string
          description:
            Text that provide mode details and corrective actions related
            to the error. This can be shown to a client user.
        referenceError:
          type: string
          format: uri
          description: url pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
      description: Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error408:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                List of supported error codes:
                - timeOut: Request Time-out - indicates that the server did not receive a complete request message within the time that it was prepared to wait.
              enum:
                - timeOut
          required:
            - code
      description: Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                One of the following error codes:
                - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
              enum:
                - internalError
          required:
            - code
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Event:
      type: object
      description:
        Event class is used to describe information structure used for
        notification.
      properties:
        eventId:
          type: string
          description: Id of the event
        eventTime:
          type: string
          format: date-time
          description: Datetime when the event occurred
      required:
        - event
        - eventId
        - eventTime
        - eventType
    ProductCategoryEvent:
      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            eventType:
              $ref: "#/components/schemas/ProductCategoryEventType"
            event:
              $ref: "#/components/schemas/ProductCategoryEventPayload"
          required:
            - event
            - eventType
    ProductCategoryEventPayload:
      type: object
      description: The identifier of the Product Category being subject of this event.
      properties:
        sellerId:
          type: string
          description:
            The unique identifier of the organization that is acting as
            the Seller. MUST be specified in the request only when requester entity
            represents more than one Seller.
        id:
          type: string
          description: ID of the Product Category attributed by the Seller
        href:
          type: string
          format: uri
          description: Hyperlink to access the Product Category
        buyerId:
          type: string
          description:
            The unique identifier of the organization that is acting as
            the a Buyer. MUST be specified in the request only when the responding
            represents more than one Buyer.
      required:
        - id
    ProductCategoryEventType:
      type: string
      description: |
        Type of the Product Category event.

        | API name                            | MEF 127 name                  | Description                                                                       |
        | ----------------------------------- | ----------------------------- | ----------------------------------------------------------------------------------|
        | `categoryCreateEvent`               | PRODUCT_CATEGORY_CREATE       | The Seller has published new Product Category to the Buyers.                      |
        | `categoryAttributeValueChangeEvent` | PRODUCT_CATEGORY_UPDATE       | The Seller settable attributes for a Product Category were updated by the Seller. |
        | `categoryStateChangeEvent`          | PRODUCT_CATEGORY_STATE_CHANGE | A Product Category `status` was changed by the Seller.                            |
      enum:
        - categoryCreateEvent
        - categoryAttributeValueChangeEvent
        - categoryStateChangeEvent
    ProductOfferingEvent:
      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            eventType:
              $ref: "#/components/schemas/ProductOfferingEventType"
            event:
              $ref: "#/components/schemas/ProductOfferingEventPayload"
          required:
            - event
            - eventType
    ProductOfferingEventPayload:
      type: object
      description: The identifier of the Product Offering being subject of this event.
      properties:
        sellerId:
          type: string
          description:
            The unique identifier of the organization that is acting as
            the Seller. MUST be specified in the request only when requester entity
            represents more than one Seller.
        id:
          type: string
          description: ID of the Product Offering attributed by the Seller
        href:
          type: string
          format: uri
          description: Hyperlink to access the Product Offering
        buyerId:
          type: string
          description:
            The unique identifier of the organization that is acting as
            the a Buyer. MUST be specified in the request only when the responding
            represents more than one Buyer.
      required:
        - id
    ProductOfferingEventType:
      type: string
      description: |
        Type of the Product Offering event.

        | API name                                  | MEF 127 name                  | Description                                                                       |
        | ----------------------------------------- | ----------------------------- | ----------------------------------------------------------------------------------|
        | `productOfferingCreateEvent`              | PRODUCT_OFFERING_CREATE       | The Seller has published new Product Offering to the Buyers.                      |
        | `productOfferingAttributeValueChangeEvent`| PRODUCT_OFFERING_UPDATE       | The Seller settable attributes for a Product Offering were updated by the Seller. |
        | `productOfferingStateChangeEvent`         | PRODUCT_OFFERING_STATE_CHANGE | A Product Offering `status` was changed by the Seller.                            |
      enum:
        - productOfferingCreateEvent
        - productOfferingAttributeValueChangeEvent
        - productOfferingStateChangeEvent
    ProductSpecificationEvent:
      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            eventType:
              $ref: "#/components/schemas/ProductSpecificationEventType"
            event:
              $ref: "#/components/schemas/ProductSpecificationEventPayload"
          required:
            - event
            - eventType
    ProductSpecificationEventPayload:
      type: object
      description:
        The identifier of the Product Specification being subject of this
        event.
      properties:
        id:
          type: string
          description: ID of the Product Specification attributed by the Seller
        href:
          type: string
          format: uri
          description: Hyperlink to access the Product Specification
        buyerId:
          type: string
          description:
            The unique identifier of the organization that is acting as
            the a Buyer. MUST be specified in the request only when the responding
            represents more than one Buyer.
        sellerId:
          type: string
          description:
            The unique identifier of the organization that is acting as
            the Seller. MUST be specified in the request only when requester entity
            represents more than one Seller.
      required:
        - id
    ProductSpecificationEventType:
      type: string
      description: |
        Type of the Product Specification event.

        | API name                                         | MEF 127 name                        | Description                                                                            |
        | ------------------------------------------------ | ----------------------------------- | ---------------------------------------------------------------------------------------|
        | `productSpecificationCreateEvent`                | PRODUCT_SPECIFICATION_CREATE        | The Seller has published new Product Specification to the Buyers.                      |
        | `productSpecificationAttributeValueChangeEvent`  | PRODUCT_SPECIFICATION_UPDATE        | The Seller settable attributes for a Product Specification were updated by the Seller. |
        | `productSpecificationStateChangeEvent`           | PRODUCT_SPECIFICATION_STATE_CHANGE  | A Product Specification `status` was changed by the Seller.                            |
      enum:
        - productSpecificationCreateEvent
        - productSpecificationAttributeValueChangeEvent
        - productSpecificationStateChangeEvent
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
