openapi: 3.0.1
info:
  description:
    "**This file forms part of MEF 87**\n      \nThis API implements Business\
    \ Requirements described in MEF 79\n\nThe Product Offering Qualification (POQ)\
    \ Management API allows a Buyer to\ncheck whether the Seller can deliver a product\
    \ or set of products from\namong their product offerings at the geographic address\
    \ or a service site\nspecified by the Buyer; or modify a previously purchased\
    \ product.\n\nThe following use cases are managed:\n- Send POQ Notifications\n\
    \nCopyright 2021 MEF Forum and its contributors\n\nThis file includes content\
    \ based on the TM Forum Product Offering\nQualification API (TMF679 v4.0.0) available\
    \ at\nhttps://github.com/tmforum-apis/TMF679_ProductOfferingQualification, which\n\
    is licensed by the TM Forum under the Apache License version 2.0. Such\ncontent\
    \ has been modified by the MEF Forum and its contributors.\n"
  title: Product Offering Qualification Notification
  version: 7.0.1
servers:
  - url: "https://{serverBase}/mefApi/sonata/productOfferingQualificationNotification/v7/"
    variables:
      serverBase:
        default: mef.net
        description: The base of Buyer's URL.
security:
  - oauth2MEFLSOAPI:
      - default
tags:
  - description: |
      The Buyer's endpoint to send particular event types notifications to.
    name: Notification listeners
paths:
  /listener/poqCreateEvent:
    post:
      deprecated: false
      description: This endpoint is used to receive notifications on POQ creation
      operationId: poqCreateEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Event"
        description: The event body
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - poqCreateEvent
      summary: Product Offering Qualification Creation Notification endpoint
      tags:
        - Notification listeners
      x-codegen-request-body-name: poqCreateEvent
  /listener/poqStateChangeEvent:
    post:
      deprecated: false
      description: This endpoint is used to receive notifications on POQ state change
      operationId: poqStateChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Event"
        description: The event body
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - poqStateChangeEvent
      summary: Product Offering Qualification Change Notification endpoint
      tags:
        - Notification listeners
      x-codegen-request-body-name: poqStateChangeEvent
  /listener/poqItemStateChangeEvent:
    post:
      deprecated: false
      description: |
        This endpoint is used to receive notifications on Poq Item state change
      operationId: listenToPoqItemStateChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Event"
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listenToPoqItemStateChangeEvent
      summary: Poq Item State Change Notification endpoint
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
components:
  schemas:
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error:
      type: object
      description: |
        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          type: string
          description:
            Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
        message:
          type: string
          description:
            Text that provides more details and corrective actions related
            to the error. This can be shown to a client user.
        referenceError:
          type: string
          format: uri
          description: url pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
      description: Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                One of the following error codes:
                - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
              enum:
                - internalError
          required:
            - code
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Event:
      type: object
      description:
        "Event class is used to describe information structure used for\
        \ notification. Reference: MEF 79 (Sn 8.5)"
      properties:
        eventId:
          type: string
          description: Id of the event
        eventTime:
          type: string
          format: date-time
          description: Date-time when the event occurred
        eventType:
          $ref: "#/components/schemas/PoqEventType"
        event:
          $ref: "#/components/schemas/PoqEvent"
      required:
        - event
        - eventId
        - eventTime
        - eventType
    PoqEvent:
      type: object
      description: A reference to the POQ that is the source of the notification.
      properties:
        sellerId:
          type: string
          description: |
            The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the requester entity  represents more than one Seller. Reference: MEF 79 (Sn 8.8)
        poqItemId:
          type: string
          description:
            ID of the Poq Item (within the Poq) which state change triggered
            the event
        id:
          type: string
          description: The POQ unique identifier.
        href:
          type: string
          description: Link to the POQ
        buyerId:
          type: string
          description: |
            The unique identifier of the organization that is acting as the Buyer. MUST be specified in the request only when the responding represents more than one Buyer. Reference: MEF 79 (Sn 8.8)
      required:
        - id
    PoqEventType:
      type: string
      description: Indicates the type of product offering qualification event.
      enum:
        - poqCreateEvent
        - poqStateChangeEvent
        - poqItemStateChangeEvent
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
