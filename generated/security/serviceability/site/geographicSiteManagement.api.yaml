openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF 122**

    This API implements Business Requirements described in MEF 79

    It allows to retrieve a list of Geographic Sites and to get all
    information for one geographic site.

    List of supported Use Cases:

    - Retrieve Service Site by Identifier
    - Retrieve Service Site List

    Copyright 2021 MEF Forum and its contributors

    This file includes content based on the TM Forum Geographic Site API (TMF674
    v4.0.0) available at https://github.com/tmforum-apis/TMF674_GeographicSite,
    which is licensed by the TM Forum under the Apache License version 2.0. Such
    content has been modified by the MEF Forum and its contributors.
  title: Geographic Site Management
  version: 7.0.1
servers:
  - url: "https://{serverBase}/mefApi/sonata/geographicSiteManagement/v7/"
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
security:
  - oauth2MEFLSOAPI:
      - default
tags:
  - name: geographicSite
  - name: events subscription
paths:
  /geographicSite:
    get:
      description: This operation list or find GeographicSite entities
      operationId: listGeographicSite
      parameters:
        - description:
            "The name of the company that is the administrative authority\
            \ (e.g. controls access) for this Geographic Site. (For example, the building\
            \ owner)"
          in: query
          name: companyName
          required: false
          schema:
            type: string
        - description:
            "The name of the company that is the administrative authority\
            \ for the space within this Geographic Site. (For example, the company leasing\
            \ space in a multi-tenant building)."
          in: query
          name: customerName
          required: false
          schema:
            type: string
        - description: A textual description of the Geographic Site.
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: This defines whether a Geographic Site is public or private.
          in: query
          name: siteType
          required: false
          schema:
            type: string
            enum:
              - public
              - private
        - description: A name commonly used by people to refer to this Geographic Site.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description:
            Identifies the name of the person or organization at the specific
            site location that is the local contact. This contact will primarily be
            used for gaining access to the site. Filtering is done on the name of the
            relatedContactInformation which has the role "serviceSiteContactName" in
            the Site record.
          in: query
          name: serviceSiteContactName
          required: false
          schema:
            type: string
        - description:
            "Identifier of a geographic address (from the seller). It could\
            \ be any type of address reference (Fielded, Formatted, GeographicAddressLabel,\
            \ MEFGeographicPoint)"
          in: query
          name: geographicAddress.id
          required: false
          schema:
            type: string
        - description: Street Nr of the geographic site address
          in: query
          name: streetNr
          required: false
          schema:
            type: string
        - description: Street Name of the geographic site address
          in: query
          name: streetName
          required: false
          schema:
            type: string
        - description: Street Type of the geographic site address
          in: query
          name: streetType
          required: false
          schema:
            type: string
        - description: City of the geographic site address
          in: query
          name: city
          required: false
          schema:
            type: string
        - description: Postcode of the geographic site address
          in: query
          name: postcode
          required: false
          schema:
            type: string
        - description: Country of the geographic site address
          in: query
          name: country
          required: false
          schema:
            type: string
        - description: |-
            The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.
            Reference: MEF 79 (Sn 8.8)
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description: |-
            The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity represents more than one Seller.
            Reference: MEF 79 (Sn 8.8)
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GeographicSite"
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            X-Pagination-Throttled:
              description: |
                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched
              schema:
                type: boolean
            X-Total-Count:
              description: |
                The total number of matching records. E.g. if there are 50 matching records in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of records included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error422"
          description: Unprocessable entity due to business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listGeographicSite
      summary: List or find GeographicSite objects
      tags:
        - geographicSite
  /geographicSite/{id}:
    get:
      description: This operation retrieves a GeographicSite entity.
      operationId: retrieveGeographicSite
      parameters:
        - description: Identifier of the GeographicSite
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: |-
            The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.
            Reference: MEF 79 (Sn 8.8)
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description: |-
            The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity represents more than one Seller.
            Reference: MEF 79 (Sn 8.8)
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/GeographicSite"
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveGeographicSite
      summary: Retrieves a GeographicSite by ID
      tags:
        - geographicSite
components:
  schemas:
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error:
      type: object
      description: |
        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          type: string
          description:
            Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
        message:
          type: string
          description:
            Text that provides mode details and corrective actions related
            to the error. This can be shown to a client user.
        referenceError:
          type: string
          format: uri
          description: url pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
      description: Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error404:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notFound: A current representation for the target resource not found
              enum:
                - notFound
          required:
            - code
      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error422:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error422Code"
            propertyPath:
              type: string
              description: |
                A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
                Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
          required:
            - code
      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      type: string
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
              enum:
                - internalError
          required:
            - code
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    FieldedAddress:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - type: object
          properties:
            country:
              type: string
              description: The country that the address is in
            streetType:
              type: string
              description:
                "The type of street (e.g., alley, avenue, boulevard, brae,\
                \ crescent, drive, highway, lane, terrace, parade, place, tarn, way,\
                \ wharf)"
            postcodeExtension:
              type: string
              description:
                An extension of a postal code. E.g. the part following the
                dash in a US urban property address
            city:
              type: string
              description: The city that the address is in
            streetNr:
              type: string
              description:
                Number identifying a specific property on a public street.
                It may be combined with streetNrLast for ranged addresses. MEF 79 defines
                it as required however as in certain countries it is not used we make
                it optional in API.
            locality:
              type: string
              description:
                "An area of defined or undefined Present boundaries within\
                \ a local authority or other legislatively defined area, usually rural\
                \ or semirural in nature."
            postcode:
              type: string
              description:
                A descriptor for a postal delivery area used to speed and
                simplify the delivery of mail (also known as zip code) MEF 79 defines
                it as required however as in certain countries it is not used we make
                it optional in API.
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrSuffix:
              type: string
              description: The first street number suffix
            streetName:
              type: string
              description: Name of the street or other street type
            stateOrProvince:
              type: string
              description: The State or Province that the address is in
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            geographicSubAddress:
              $ref: "#/components/schemas/GeographicSubAddress"
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
          required:
            - city
            - country
            - streetName
      description:
        "A type of Address that has a discrete field and value for each\
        \ type of boundary or identifier down to the lowest level of detail. For example\
        \ \"street number\" is one field, \"street name\" is another field, etc. Reference:\
        \ MEF 79 (Sn 8.9.2)"
    FormattedAddress:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - type: object
          properties:
            country:
              type: string
              description: The country that the address is in
            postcodeExtension:
              type: string
              description:
                An extension of a postal code. E.g. the part following the
                dash in a US urban property address
            stateOrProvince:
              type: string
              description: The State or Province that the address is in
            city:
              type: string
              description: The city that the address is in
            addrLine2:
              type: string
              description: The second address line in a formatted address
            addrLine1:
              type: string
              description: The first address line in a formatted address
            locality:
              type: string
              description:
                "An area of defined or undefined boundaries within a local\
                \ authority or other legislatively defined area, usually rural or semi-rural\
                \ in nature"
            postcode:
              type: string
              description:
                A descriptor for a postal delivery area used to speed and
                simplify the delivery of mail (also known as ZIP code)
          required:
            - addrLine1
            - city
            - country
      description:
        "A type of Address that has discrete fields for each type of boundary\
        \ or identifier with the exception of the street and more specific location\
        \ details, which are combined into a maximum of two strings based on local\
        \ postal addressing conventions.  Reference: MEF 79 (Sn 8.9.3)"
    GeographicAddressLabel:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - type: object
          properties:
            externalReferenceId:
              type: string
              description:
                The unique reference to an Address as provided by the Administrative
                Authority.
            externalReferenceType:
              type: string
              description:
                The organization or standard from the organization that administers
                this Geographic Address Label ensuring it is unique within the Administrative
                Authority. The value(s) to be used are to be agreed during the onboarding.
                For North American providers this would normally be CLLI (Common Language
                Location Identifier) code.
          required:
            - externalReferenceId
            - externalReferenceType
      description:
        "A unique identifier controlled by a generally accepted independent\
        \ administrative authority that specifies a fixed geographical location. \n\
        Reference: MEF 79 (Sn 8.9.4), MEF 79.0.2 (Sn 8.9.4)"
    GeographicAddressRef:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - type: object
          properties:
            href:
              type: string
              description: |
                Hyperlink to the referenced place Hyperlink MAY be used by the Seller in responses Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request
            id:
              type: string
              description:
                Identifier of the referenced Geographic Address. This identifier
                is assigned during a successful address validation request (Geographic
                Address Management API)
          required:
            - id
      description: |
        A reference to a GeographicAddress resource available through Addressing Validation API
    GeographicAddressRefOrValue:
      type: object
      description: |
        Defines a GeographicAddress link by reference or by value. The polymorphic attributes @type and @schemaLocation are related to the GeographicAddress entity and not the GeographicAddressRefOrValue class itself
      discriminator:
        mapping:
          FieldedAddress: "#/components/schemas/FieldedAddress"
          FormattedAddress: "#/components/schemas/FormattedAddress"
          GeographicAddressRef: "#/components/schemas/GeographicAddressRef"
          GeographicAddressLabel: "#/components/schemas/GeographicAddressLabel"
          MEFGeographicPoint: "#/components/schemas/MEFGeographicPoint"
        propertyName: "@type"
      properties:
        "@type":
          type: string
          description: |
            This field is used as a discriminator and is used between different geographicAddress representations. This type might discriminate for additional related GeographicAddress as defined in '@schemaLocation'.
          enum:
            - FieldedAddress
            - FormattedAddress
            - GeographicAddressRef
            - GeographicAddressLabel
            - MEFGeographicPoint
        "@schemaLocation":
          type: string
          format: uri
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships. May be used to define additional related place types.
            Usage of this attribute must be agreed upon between the Buyer and the
            Seller.
      required:
        - "@type"
    GeographicSite:
      type: object
      description:
        A fixed physical location at which a Product can be installed.
        Its location can be described either with geographic point (Lat/Long information)
        or by association with an Address or Geographic Address Label. This association
        may include a Sub-address describing where within that Address or Geographic
        Address Label this particular Geographic Site is located.
      properties:
        relatedContactInformation:
          type: array
          description:
            "An entity or organization that is involved to the geographical\
            \ site, such as the Site Contact or Site Alternate Contact."
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
        "@type":
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        companyName:
          type: string
          description:
            "The name of the company that is the administrative authority\
            \ (e.g. controls access) for this Geographic Site. (For example, the building\
            \ owner.)"
        name:
          type: string
          description:
            "A user-friendly name for the place, such as [Paris Store],\
            \ [London Store], [Main Home]"
        description:
          type: string
          description: A textual description of the Geographic Site.
        id:
          type: string
          description: Identifier of the Geographic Site unique within the Seller.
        href:
          type: string
          description: Unique reference of the Geographic Site unique within the Seller.
        place:
          type: array
          description: |
            A set of location descriptions, each of which describes where this GeographicSite is located. It is important to note that this is a set because a particular Geographic Site might be described with multiple locations. For example, one Geographic Site might have two Fielded Addresses (for a building on the corner of two streets), two Formatted Addresses, and a Geographic Point.
          items:
            $ref: "#/components/schemas/GeographicAddressRefOrValue"
        customerName:
          type: string
          description:
            "The name of the company that is the administrative authority\
            \ for the space within this Geographic Site (For example, the company\
            \ leasing space in a multi-tenant building)."
        siteType:
          $ref: "#/components/schemas/MEFSiteType"
      required:
        - id
    GeographicSubAddress:
      type: object
      description: "Additional fields used to specify an address, as detailed as possible."
      properties:
        buildingName:
          type: string
          description: |
            The well-known name of a building that is located at this Geographic Address (e.g. where there is one Address for a campus).
        subUnit:
          type: array
          description:
            "Representation of a MEFSubUnit It is used for describing subunit\
            \ within a subAddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\
            \ WHARF."
          items:
            $ref: "#/components/schemas/MEFSubUnit"
        levelType:
          type: string
          description: Describes level types within a building
        levelNumber:
          type: string
          description:
            "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
            \ 2"
        privateStreetNumber:
          type: string
          description: Private streets numbers internal to a private street
        privateStreetName:
          type: string
          description:
            Private streets internal to a property (e.g. a university)
            may have internal names that are not recorded by the land title office
    MEFGeographicPoint:
      allOf:
        - $ref: "#/components/schemas/GeographicAddressRefOrValue"
        - type: object
          properties:
            spatialRef:
              type: string
              description:
                The spatial reference system used to determine the coordinates
                (e.g. "WGS84"). The system used and the value of this field are to be
                agreed during the onboarding process.
            x:
              type: string
              description: The latitude expressed in the format specified by the `spacialRef`
            "y":
              type: string
              description: The longitude expressed in the format specified by the `spacialRef`
            z:
              type: string
              description: The elevation expressed in the format specified by the `spacialRef`
          required:
            - spatialRef
            - x
            - "y"
      description: |
        A MEFGeographicPoint defines a geographic point through coordinates. Reference: MEF 79 (Sn 8.9.5), MEF 79.0.2 (Sn 8.9.5)
    MEFSiteType:
      type: string
      description:
        "This defines whether a Geographic Site is public or private. public\
        \ means that the existence of this Geographic Site is public information.\
        \ A meet-me-room in a hosted data center facility (where all interconnects\
        \ between parties take place) is an example of a public Geographic Site. A\
        \ shared facility in the basement of a multi-tenant business building where\
        \ all interconnects between parties take place is another example of a public\
        \ Geographic Site. private means that the existence of this Geographic Site\
        \ is on a need-to-know basis. A wiring closet set up inside a customer facility\
        \ just to connect two parties is an example of a private Geographic Site.\
        \ For private sites, the Seller does not return any information regarding\
        \ the existence of this Geographic Site unless it has been established that\
        \ this Buyer is authorized to obtain this information."
      enum:
        - public
        - private
    MEFSubUnit:
      type: object
      description: |
        Allows for sub unit identification
        Reference: MEF 79 (Sn 8.9.2)
      properties:
        subUnitNumber:
          type: string
          description:
            "The discriminator used for the subunit, often just a simple\
            \ number but may also be a range."
        subUnitType:
          type: string
          description:
            "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
            \ UNIT, WHARF."
      required:
        - subUnitNumber
        - subUnitType
    RelatedContactInformation:
      type: object
      description:
        "Contact data for a person or organization that is involved in\
        \ the product offering qualification. In a given context it is always specified\
        \ by the Seller (e.g. Seller Contact Information) or by the Buyer. \nReference:\
        \ MEF 79 (Sn 8.11)"
      properties:
        number:
          type: string
          description: Phone number
        emailAddress:
          type: string
          description: Email address
        role:
          type: string
          description: The role of the particular contact in a given context.
        postalAddress:
          $ref: "#/components/schemas/FieldedAddress"
        organization:
          type: string
          description: The organization or company that the contact belongs to
        name:
          type: string
          description: Name of the contact
        numberExtension:
          type: string
          description: Phone number extension
      required:
        - emailAddress
        - name
        - number
        - role
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
