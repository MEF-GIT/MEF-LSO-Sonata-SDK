openapi: 3.0.1
info:
  description: |
   **This file forms part of MEF W137**
    
    **This API implements Business Requirements described in MEF W113.**
    
    **This specification represents MEF work in progress and is subject to
    change.**
    
    It allows the Buyer to create, retrieve, and update  WorkOrders as well
    as receive notifications about Incidents' and  WorkOrders' updates.
    This allows managing issues and situations that are not part of normal
    operations of the Product provided by the Seller.

    List of supported use cases:
    - Retrieve WorkOrder by WorkOrder Identifier
    - Register for Workorder Notifications

    Copyright 2022 MEF Forum and its contributors

    This file includes content based on the TM Forum Work Order API (TMF697
    v4.0.0) available at https://github.com/tmforum-apis/TMF697_Work_Order,
    which is licensed by the TM Forum under the Apache License version 2.0.
    Such content has been modified by the MEF Forum and its contributors.
  title: WorkOrder Management
  version: 1.0.0-RC
servers:
  - url: 'https://{serverBase}/mefApi/sonata/workOrderManagement/v1/'
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
security:
  - oauth2MefLsoApi:
      - retrieveWorkOrder
      - listWorkOrder
      - registerListener
      - unregisterListener
tags:
  - name: workorder
paths:
  '/workorder/{id}':
    get:
      description: >-
        The Buyer requests detailed information about a single WorkOrder based
        on a WorkOrder Identifier.
      operationId: retrieveWorkOrder
      parameters:
      - description: >-
          Unique (within the Seller domain) identifier for the WorkOrder.
        in: query
        name: id
        schema:
          type: string
      - description: >-
          The unique identifier of the organization that is acting as the a
          Buyer. MUST be specified in the request only when the requester
          represents more than one Buyer.
        in: query
        name: buyerId
        schema:
          type: string
      - description: >-
          The unique identifier of the organization that is acting as the
          Seller. MUST be specified in the request only when responding
          entity represents more than one Seller.
        in: query
        name: sellerId
        schema:
            type: string
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/WorkOrder'
          description:
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a WorkOrder by ID
      tags:
        - workorder
  '/workorder':
    get:
      description: >-
        The Buyer requests detailed information about a single WorkOrder based
        on a WorkOrder Identifier.
      operationId: listWorkOrder
      parameters:
      - description: >-
          Unique (within the Seller domain) identifier for the WorkOrder.
        in: query
        name: id
        schema:
          type: string
      - description: >-
          ID of a related entity that this WorkOrder is related to and is
          present in the `relatedEntity` list
        in: query
        name: relatedEntityId
        schema:
            type: string
      - description:
           A site identifier which is associated to the Appointment.
        in: query
        name: geographicalSiteId
        schema:
            type: string
      - description: A address identifier which is associated to the Appointment.
        in: query
        name: geographicalAddressId
        schema:
            type: string
      - description: >-
          The state of the WorkOrder.
        in: query
        name: state
        schema:
          enum:
          - cancelled
          - completed
          - inProgress
          - open
          - planned
          - unableToComplete
          type: string
      - description: >-
          Indicates that the Buyer must schedule an Appointment to fulfill the WorkOder.
        in: query
        name: appointmentRequired
        schema:
          type: boolean 
      - description: >-
          The unique identifier of the organization that is acting as the a
          Buyer. MUST be specified in the request only when the requester
          represents more than one Buyer.
        in: query
        name: buyerId
        schema:
            type: string
      - description: >-
          The unique identifier of the organization that is acting as the
          Seller. MUST be specified in the request only when responding
          entity represents more than one Seller.
        in: query
        name: sellerId
        schema:
          type: string
      - description:
          Requested index for start of resources to be provided in response
        in: query
        name: offset
        schema:
          type: integer
      - description: 
            Requested number of resources to be provided in response
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/WorkOrder_Find' 
          description:
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a WorkOrder by ID
      tags:
        - workorder
  /hub:
    post:
      description: The Buyer requests to subscribe to WorkOrder Notifications.
      operationId: registerListener
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        description:
          Data containing the callback endpoint to deliver the information
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description:
            'Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: >-
        Allows the Buyer to register to WorkOrder state change
        notifications
      tags:
        - events subscription
      x-codegen-request-body-name: data
  '/hub/{id}':
    delete:
      description: The Buyer requests to unsubscribe from WorkOrder Notifications
      operationId: unregisterListener
      parameters:
        - description: The id of the EventSubscription
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          in: query
          name: buyerId
          schema:
            type: string
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity represents more than one Seller.
          in: query
          name: sellerId
          schema:
            type: string
      responses:
        '204':
          description:
            'Deleted (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Unregister a listener
      tags:
        - events subscription
components:
  securitySchemes:
    oauth2MefLsoApi:
      type: oauth2
      description:
        Example of a security scheme conforming to MEF 128 LSO API Security
        Profiles standard
      flows:
        clientCredentials:
          tokenUrl: /oauth2/lsoApiToken/
          refreshUrl: /oauth2/refreshLsoApiToken/
          scopes:
            retrieveWorkOrder:
              The Buyer requests detailed information about a single WorkOrder based
              on a WorkOrder Identifier.
            listWorkOrder:
              The Buyer requests detailed information about a single WorkOrder based
              on a WorkOrder Identifier.
            registerListener:
              The Buyer requests to subscribe to WorkOrder Notifications.
            unregisterListener:
              The Buyer requests to unsubscribe from WorkOrder Notifications
  schemas:
    AppointmentRef:
      description: >
        A reference to an Appointment resource available through Appointment
        API.
      properties:
        href:
          description: >
            Hyperlink to the referenced Appointment. Hyperlink MAY be used by
            the Seller in responses. Hyperlink MUST be ignored by the Seller in
            case it is provided by the Buyer in a request
          type: string
        id:
          description: Identifier of the referenced Appointment.
          type: string
      required:
        - id
      type: object
    DataSizeUnit:
      description: The unit of measure in the data size.
      enum:
        - BYTES
        - KBYTES
        - MBYTES
        - GBYTES
        - TBYTES
        - PBYTES
        - EBYTES
        - ZBYTES
        - YBYTES
      type: string
    EventSubscription:
      description: >-
        Sets the communication endpoint address the service instance must use
        to deliver notification information
      properties:
        callback:
          description: >-
            The value provided by the Buyer in `EventSubscriptionInput` during
            notification registration
          type: string
        id:
          description: >-
            An identifier of the event subscription assigned by the Seller when
            a resource is created.
          type: string
        query:
          description: >-
            This attribute is used to define notification registration
            constraints.
          type: string
      required:
        - callback
        - id
      type: object
    EventSubscriptionInput:
      description: This class is used to register for Notifications.
      properties:
        callback:
          description: >-
            This callback value must be set to *host* property from Buyer
            Notification API (WorkOrderNotification.api.yaml). This
            property is appended with the base path and notification resource
            path specified in that API to construct an URL to which
            notification is sent. E.g. for "callback":
            "http://buyer.com/listenerEndpoint", the state change event
            notification will be sent to:
            `http://buyer.com/listenerEndpoint/mefApi/sonata/workOrderNotification/v1/listener/workOrderStateChangeEvent`
          type: string
        query:
          description: >-
            This attribute is used to define to which type of events to
            register to. Example: "query":"eventType =
            WorkOrderStateChangeEvent". To subscribe for more than one
            event type, put the values separated by comma:
            `eventType=WorkOrderStateChangeEvent,WorkOrderResolvedEvent`.
            The possible values are enumerated by the 'WorkOrderEventType'
            in WorkOrderNotification.api.yaml. An empty query is treated as
            specifying no filters - ending in  subscription for all event
            types.
          type: string
      required:
        - callback
      type: object
    Error:
      description: >
        Standard Class used to describe API response error

        Not intended to be use directly only via specialization which defines a
        code
      properties:
        message:
          description: >-
            Text that provides mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        reason:
          description: >-
            Text that explains the reason for error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        referenceError:
          description: URL pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error400Code'
              description: >-
                One of the following error codes:

                - missingQueryParameter: The URI is missing a required
                query-string parameter

                - missingQueryValue: The URI is missing a required query-string
                parameter value

                - invalidQuery: The query section of the URI is invalid.

                - invalidBody: The request has an invalid body
          required:
            - code
          type: object
      description:
        Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error401Code'
              description: >-
                One of the following error codes:

                - missingCredentials: No credentials provided.

                - invalidCredentials: Provided credentials are invalid or
                expired
          required:
            - code
          type: object
      description:
        Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error403Code'
              description: |-
                This code indicates that the server understood
                the request but refuses to authorize it because
                of one of the following error codes:
                - accessDenied: Access denied
                - forbiddenRequester: Forbidden requester
                - tooManyUsers: Too many users
          required:
            - code
          type: object
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error404:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                The following error code:

                - notFound: A current representation for the target resource
                not found
              enum:
                - notFound
              type: string
          required:
            - code
          type: object
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error409:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                The following error code:

                - conflict: The client has provided a value whose semantics are
                not appropriate for the property.
              enum:
                - conflict
              type: string
          required:
            - code
          type: object
      description:
        Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)
    Error422:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              $ref: '#/components/schemas/Error422Code'
              description: |
                One of the following error codes:
                  - missingProperty: The property the Seller has expected is not present in the payload
                  - invalidValue: The property has an incorrect value
                  - invalidFormat: The property value does not comply with the expected value format
                  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                  - unexpectedProperty: Additional property, not expected by the Seller has been provided
                  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                  - otherIssue: Other problem was identified (detailed information provided in a reason)
            propertyPath:
              description: >
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
              type: string
          required:
            - code
          type: object
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
      type: string
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Error501:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: |-
                The following error code::
                - notImplemented: Method not supported by the server
              enum:
                - notImplemented
              type: string
          required:
            - code
          type: object
      description:
        'Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)'
    FieldedAddress:
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - properties:
            city:
              description: The city that the address is in
              type: string
            country:
              description: Country that the address is in
              type: string
            geographicSubAddress:
              $ref: '#/components/schemas/GeographicSubAddress'
              description:
                Additional fields used to specify an address, as detailed as
                possible.
            locality:
              description: The locality that the address is in
              type: string
            postcode:
              description: >-
                Descriptor for a postal delivery area, used to speed and
                simplify the delivery of mail (also known as zip code)
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in a US urban property address
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
            streetName:
              description: Name of the street or other street type
              type: string
            streetNr:
              description: >-
                Number identifying a specific property on a public street. It
                may be combined with streetNrLast for ranged addresses. MEF 79
                defines it as required however as in certain countries it is
                not used we make it optional in API.
              type: string
            streetNrLast:
              description:
                Last number in a range of street numbers allocated to a
                property
              type: string
            streetNrLastSuffix:
              description: Last street number suffix for a ranged address
              type: string
            streetNrSuffix:
              description: The first street number suffix
              type: string
            streetSuffix:
              description: A modifier denoting a relative direction
              type: string
            streetType:
              description: >-
                The type of street (e.g., alley, avenue, boulevard, brae,
                crescent, drive, highway, lane, terrace, parade, place, tarn,
                way, wharf)
              type: string
          required:
            - city
            - country
            - streetName
          type: object
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
        Reference: MEF 79 (Sn 8.9.2)
    FormattedAddress:
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - properties:
            addrLine1:
              description: The first address line in a formatted address
              type: string
            addrLine2:
              description: The second address line in a formatted address
              type: string
            city:
              description: The city that the address is in
              type: string
            country:
              description: Country that the address is in
              type: string
            locality:
              description: >-
                An area of defined or undefined boundaries within a local
                authority or other legislatively defined area, usually rural or
                semi-rural in nature
              type: string
            postcode:
              description: >-
                Descriptor for a postal delivery area, used to speed and
                simplify the delivery of mail (also known as ZIP code)
              type: string
            postcodeExtension:
              description: >-
                An extension of a postal code. E.g. the part following the dash
                in an US urban property address
              type: string
            stateOrProvince:
              description: The State or Province that the address is in
              type: string
          required:
            - addrLine1
            - city
            - country
          type: object
      description: >-
        A type of Address that has discrete fields for each type of boundary or
        identifier with the exception of street and more specific location
        details, which are combined into a maximum of two strings based on
        local postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)
    GeographicAddressLabel:
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - properties:
            externalReferenceId:
              description: A reference to an address by id
              type: string
            externalReferenceType:
              description: >-
                Uniquely identifies the authority that specifies the addresses
                reference and/or its type (if the authority specifies more than
                one type of address). The value(s) to be used are to be agreed
                during the onboarding. For North American providers this would
                normally be CLLI (Common Language Location Identifier) code.
              type: string
          required:
            - externalReferenceId
            - externalReferenceType
          type: object
      description: >-
        A unique identifier controlled by a generally accepted independent
        administrative authority that specifies a fixed geographical location. 

        Reference: MEF 79 (Sn 8.9.4)
    GeographicAddressRef:
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - properties:
            href:
              description: >
                Hyperlink to the referenced GeographicAddress. Hyperlink MAY be
                used by the Seller in responses. Hyperlink MUST be ignored by
                the Seller in case it is provided by the Buyer in a request
              type: string
            id:
              description: >-
                Identifier of the referenced Geographic Address. This
                identifier is assigned during a successful address validation
                request (Geographic Address Validation API)
              type: string
          required:
            - id
          type: object
      description: >
        A reference to a Geographic Address resource available through Address
        Validation API.
    GeographicSiteRef:
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - properties:
            href:
              description: >
                Hyperlink to the referenced GeographicSite. Hyperlink MAY be
                used by the Seller in responses. Hyperlink MUST be ignored by
                the Seller in case it is provided by the Buyer in a request
              type: string
            id:
              description: Identifier of the referenced Geographic Site.
              type: string
          required:
            - id
          type: object
      description: >
        A reference to a Geographic Site resource available through Service
        Site API
    GeographicSubAddress:
      description:
        Additional fields used to specify an address, as detailed as possible.
      properties:
        buildingName:
          description: >
            Allows for identification of places that require building name  as
            part of addressing information
          type: string
        id:
          description: Unique Identifier of the subAddress
          type: string
        levelNumber:
          description:
            Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2
          type: string
        levelType:
          description: Describes level types within a building
          type: string
        privateStreetName:
          description: >-
            "Private streets internal to a property (e.g. a university) may
            have internal names that are not recorded by the land title office
          type: string
        privateStreetNumber:
          description: Private streets numbers internal to a private street
          type: string
        subUnit:
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: '#/components/schemas/MEFSubUnit'
          type: array
      type: object
    MEFBuyerSellerType:
      description: An enumeration with buyer and seller values.
      enum:
        - buyer
        - seller
      type: string
    MEFByteSize:
      description: A size represented by value and Byte units
      properties:
        amount:
          default: 1
          description: Numeric value in a given unit
          format: float
          type: number
        units:
          $ref: '#/components/schemas/DataSizeUnit'
          description: Byte Unit
      type: object
    MEFGeographicPoint:
      allOf:
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        - properties:
            spatialRef:
              description: >-
                The spatial reference system used to determine the coordinates
                (e.g. "WGS84"). The system used and the value of this field are
                to be agreed upon during the onboarding process.
              type: string
            x:
              description: >-
                The latitude expressed in the format specified by the
                `spacialRef`
              type: string
            'y':
              description: >-
                The longitude expressed in the format specified by the
                `spacialRef`
              type: string
            z:
              description: >-
                The elevation expressed in the format specified by the
                `spacialRef`
              type: string
          required:
            - spatialRef
            - x
            - 'y'
          type: object
      description: >
        A MEFGeographicPoint defines a geographic point through coordinates.
        Reference: MEF 79 (Sn 8.9.5)
    MEFObservedImpactType:
      description: >-
        An enumeration of the possible values of impact observed by the Buyer.

        - degraded: When the Product is impacted and not meeting the Product
        specifications.

        - intermittent: When the Product is not operational as intended on an
        intermittent basis.

        - down: When the Product is non-operational.
      enum:
        - degraded
        - intermittent
        - down
      type: string
    MEFSubUnit:
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          type: string
      required:
        - subUnitNumber
        - subUnitType
      type: object
    Note:
      description: >-
        Extra information about a given entity. Only useful in processes
        involving human interaction. Not applicable for an automated process.
      properties:
        author:
          description: Author of the note
          type: string
        date:
          description: Date of the note
          format: date-time
          type: string
        id:
          description: >-
            Identifier of the note within its containing entity (may or may not
            be globally unique, depending on provider implementation)
          type: string
        source:
          $ref: '#/components/schemas/MEFBuyerSellerType'
          description: Indicates if this Note was added by the Buyer or Seller.
        text:
          description: Text of the note
          type: string
      required:
        - author
        - date
        - id
        - source
        - text
      type: object
    RelatedContactInformation:
      description: >-
        Contact data for a person or organization that is involved in a given
        context. It is specified by the Seller (e.g. Seller Contact
        Information) or by the Buyer.
      properties:
        emailAddress:
          description: Email address
          type: string
        name:
          description: Name of the contact
          type: string
        number:
          description: Phone number
          type: string
        numberExtension:
          description: Phone number extension
          type: string
        organization:
          description: The organization or company that the contact belongs to
          type: string
        postalAddress:
          $ref: '#/components/schemas/FieldedAddress'
          description: >-
            Identifies the postal address of the person or office to be
            contacted.
        role:
          description: A role the party plays in a given context.
          type: string
      required:
        - emailAddress
        - name
        - number
        - role
      type: object
    RelatedEntity:
      description: >-
        A reference to an entity, where the type of the entity is not known in
        advance.
      properties:
        '@referredType':
          default: Product
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        id:
          description: Unique identifier of a related entity.
          type: string
        role:
          description: The role of an entity.
          type: string
      required:
        - '@referredType'
        - id
        - role
      type: object
    RelatedPlaceRefOrValue:
      description:
        Defines the Place (Address or Site) by reference or by value.
      discriminator:
        mapping:
          FieldedAddress: '#/components/schemas/FieldedAddress'
          FormattedAddress: '#/components/schemas/FormattedAddress'
          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'
        propertyName: '@type'
      properties:
        '@schemaLocation':
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships. May be used to define additional related place
            types. Usage of this attribute must be agreed upon between Buyer
            and Seller.
          format: uri
          type: string
        '@type':
          description: >
            This field is used as a discriminator and is used between different
            place representations. This type might discriminate for additional
            related place as defined in '@schemaLocation'.
          type: string
        role:
          description: Role of this place
          type: string
      required:
        - '@type'
        - role
      type: object
    TimeDuration:
      type: object
      description: >-
        This class is used to describe durations expressed as a 2-tuple, (value,
        units). The units from from nanoseconds to years.
      properties:
          timeDurationValue:
            description: >-
              The value of the duration. For example, if the duration is 20 ms, this
              element is 20.
            type: integer
          timeDurationUnits:
            description: >-
              The unit of measure in the duration. For example, if an interval is
              2ms, this element is MS.
            $ref: '#/components/schemas/TimeDurationUnits'
    TimeDurationUnits:
      type: string
      description: >-
        The unit of measure in the duration. For example, if an interval is 2ms,
        this element is MS.
      enum:
        - "NS"
        - "US"
        - "MS"
        - "SEC"
        - "MIN"
        - "HOUR"
        - "DAY"
        - "WEEK"
        - "MONTH"
        - "YEAR"
    WorkOrder:
      description: >
        A set of tasks to be scheduled and performed under the responsibility
        of a Seller Technician(s)
      properties:
        id:
          description:
            Unique (within the Seller domain) identifier for the WorkOrder.
          type: string
        href:
          description: Hyperlink, a reference to the WorkOrder entity
          type: string
        appointmentRequired:
          description: >-
            The Seller requires the Buyer to schedule an Appointment. If set to
            true, the Seller is Requesting the Buyer to schedule an
            Appointment.
          type: boolean
        appointment:
          description: >-
            A reference to a set of Appointments for the WorkOrder. A WorkOrder
            may contain only one open Appointment at a time (e.g. with state of
            'scheduled').
          items:
            $ref: '#/components/schemas/AppointmentRef'
          type: array 
        duration:
          $ref: '#/components/schemas/TimeDuration'
          description: The current state of the WorkOrder    
        note:
          description: >-
            A set of unstructured comments or information associated to the
            WorkOrder
          items:
            $ref: '#/components/schemas/Note'
          type: array
        place:
          description: >-
            The location where the WorkOrder Tasks are to be performed. If an
            appointment is needed, this will also be the location where the
            Appointment takes place and includes the site contact which the
            Seller technician may need to get access to the Buyer's site during
            the Appointment. This could be an end-user, security personnel or
            any authorized person
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          type: array
        relatedContactInformation:
          description: >-
            Party playing a role for this WorkOrder.
            The 'role' is to specify the type of contact as specified in MEF
            113:
            Technical Contact ('role=technicalContact') - REQUIRED to be set by
            the Seller. The Seller technical contact responsible for the
            WorkOrder.
            Technician ('role=technician') - The Seller technician assigned to
            the WorkOrder and responsible for performing a set of tasks. In
            certain instances this could be a Buyer technician that works on
            behalf of the Seller.
          items:
            $ref: '#/components/schemas/RelatedContactInformation'
          minItems: 1
          type: array
        relatedEntity:
          description: >-
            An entity that is related to the WorkOrder such as a service, a
            product, etc. The entity which the WorkOrder is associated with.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          minItems: 1
          type: array
        state:
          $ref: '#/components/schemas/WorkOrderStateType'
          description: The current state of the WorkOrder
        task:
          description: >-
            A set of tasks to be performed under the responsibility of the
            Technician to fulfil the WorkOrder. Each item is a description of a
            specific task to be performed under the responsibility of the
            Technician.
          items:
            type: string
          minItems: 1
          type: array
      required:
        - appointmentRequired
        - id
        - relatedContactInformation
        - relatedEntity
        - state
        - tasks
      type: object
    WorkOrderRef:
      description: |
        A reference to an WorkOrder resource.
      properties:
        href:
          description: |
            Hyperlink to the referenced WorkOrder.
          type: string
        id:
          description: Identifier of the referenced WorkOrder.
          type: string
      required:
        - id
      type: object
    WorkOrderStateType:
      description: |
        Possible values for the state of the WorkOrder

        | state              | MEF 113 name        | Description                                                                                                                                                                                                                                                     |
        | ------------------ | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `completed`        | COMPLETED           | The Seller Technician responsible for the WorkOrder has successfully completed all the assigned Tasks.                                                                                                                                                          |
        | `cancelled`        | CANCELLED           | The WorkOrder has been cancelled by the Seller or due to the Buyer requesting to cancel the WorkOrder.                                                                                                                                                             |
        | `inProgress`       | IN_PROGRESS         | The Seller Technician responsible for the WorkOrder has been assigned and started one or more of the assigned Tasks.                                                                                                                                            |
        | `open`             | OPEN                | A WorkOrder was initiated by the Seller to be assigned to a Technician responsible for resolving the WorkOrder.                                                                                                                                                    |
        | `planned`          | PLANNED             | The WorkOrder has been given an execution date for resolving one or more Tasks.                                                                                                                                                                                 |
        | `unableToComplete` | UNABLE_TO_COMPLETE  | The Seller Technician responsible for the WorkOrder was unable to complete one or more of the assigned Tasks, because additional skills or information is required. Additional tasks are required to resolve the WorkOrder and a new WorkOrder needs to be opened. |
      enum:
        - cancelled
        - completed
        - inProgress
        - open
        - planned
        - unableToComplete
      type: string
    WorkOrder_Find:
      description: >
        A set of tasks to be scheduled and performed under the responsibility
        of a Seller Technician(s)
      properties:
        appointmentRequired:
          description: >-
            The Seller requires the Buyer to schedule an Appointment. If set to
            true, the Seller is Requesting the Buyer to schedule an
            Appointment.
          type: boolean
        id:
          description:
            Unique (within the Seller domain) identifier for the WorkOrder.
          type: string
        place:
          description: >-
            The location where the WorkOrder Tasks are to be performed. If an
            appointment is needed, this will also be the location where the
            Appointment takes place and includes the site contact which the
            Seller technician may need to get access to the Buyer's site during
            the Appointment. This could be an end-user, security personnel or
            any authorized person
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          type: array
        relatedEntity:
          description: >-
            An entity that is related to the WorkOrder such as a service, a
            product, etc. The entity which the WorkOrder is associated with.
          items:
            $ref: '#/components/schemas/RelatedEntity'
          minItems: 1
          type: array
        state:
          $ref: '#/components/schemas/WorkOrderStateType'
          description: The current state of the WorkOrder
      required:
        - appointmentRequired
        - id
        - relatedContactInformation
        - relatedEntity
        - state
        - tasks
      type: object
 

