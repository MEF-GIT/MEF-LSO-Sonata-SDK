openapi: 3.0.1
info:
  description:
    "**This file forms part of MEF 137**\n\n**This API implements Business\
    \ Requirements described in MEF 113.**\n\nAn Appointment is an arrangement to\
    \ do something or meet someone at a \nparticular time and place. It is previously\
    \ made during an interaction \nor may be necessary to solve a customer problem\
    \ or to deliver a product \norder item. The appointment API goal is to manage\
    \ an appointment with \nall the necessary characteristics. \n\n\nList of supported\
    \ use cases:\n- Search Appointment Timeslot\n- Create Appointment\n- Retrieve\
    \ Appointment List\n- Retrieve Appointment by Appointment Identifier\n- Patch\
    \ Appointment by Appointment Identifier\n- Cancel Appointment by Appointment Identifier\n\
    - Register for Appointment Notifications\n\nCopyright 2022 MEF Forum and its contributors\n\
    \nThis file includes content based on the TM Forum Appointment Management API\
    \ (TMF646\nv4.0.0) available at https://github.com/tmforum-apis/TMF646_AppointmentManagement,\n\
    which is licensed by the TM Forum under the Apache License version 2.0.\nSuch\
    \ content has been modified by the MEF Forum and its contributors.\n"
  title: Appointment Management
  version: 2.0.0
servers:
  - url: "https://{serverBase}/mefApi/sonata/appointment/v2/"
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
security:
  - oauth2MEFLSOAPI:
      - default
tags:
  - name: appointment
  - name: searchTimeSlot
  - name: events subscription
paths:
  /appointment:
    get:
      description: |
        The Buyer requests a list of Appointment from the Seller based on a set of specified filter criteria. The Seller returns a summarized list of Appointments.
      operationId: listAppointment
      parameters:
        - description: A reference to a WorkOrder for which the Appointment is created.
          in: query
          name: workOrderId
          required: false
          schema:
            type: string
        - description:
            The Date and Time the Appointment is confirmed to start and end
            - greater than.
          in: query
          name: validFor.gt
          required: false
          schema:
            type: string
            format: date-time
        - description:
            The Date and Time the Appointment is confirmed to start and end
            - lower than.
          in: query
          name: validFor.lt
          required: false
          schema:
            type: string
            format: date-time
        - description: The status of the Appointment.
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - confirmed
              - inProgress
              - cancelled
              - missed
              - failed
              - completed
        - description: A site identifier that is associated with the Appointment.
          in: query
          name: geographicSiteId
          required: false
          schema:
            type: string
        - description: An address identifier that is associated with the Appointment.
          in: query
          name: geographicAddressId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
        - description:
            Requested index for the start of resources to be provided in
            response
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: Requested number of resources to be provided in response
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment_Find"
          description: OK. (https://tools.ietf.org/html/rfc7231section-6.3.1)
          headers:
            X-Pagination-Throttled:
              description: |
                Used to indicate that the result page was throttled to maximum possible size  and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: |
                The total number of matching records. E.g. if there are 50 matching records in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of records included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listAppointment
      summary: List or found Appointment objects
      tags:
        - appointment
    post:
      description:
        A request initiated by the Buyer to create a Appointment in the
        Seller's system to report an Issue experienced by the Buyer
      operationId: createAppointment
      parameters:
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Appointment_Create"
        description: The Appointment to be created
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Appointment"
          description: Created  (https://tools.ietf.org/html/rfc7231section-6.3.2)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error422"
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - createAppointment
      summary: Creates an appointment
      tags:
        - appointment
      x-codegen-request-body-name: appointment
  /appointment/{id}:
    get:
      description:
        The Buyer requests detailed information about a single Appointment
        based on the Appointment Identifier.
      operationId: retrieveAppointment
      parameters:
        - description: Unique (within the Seller domain) identifier for the Appointment.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Appointment"
          description: OK. (https://tools.ietf.org/html/rfc7231section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveAppointment
      summary: Retrieves an Appointment by ID
      tags:
        - appointment
    patch:
      description:
        A request by the Buyer to patch an Appointment created by the Buyer
        in the Seller's system.
      operationId: patchAppointment
      parameters:
        - description: Unique (within the Seller domain) identifier for the Appointment.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Appointment_Update"
        description: The Appointment to be updated
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Appointment"
          description: Updated
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error409"
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error422"
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - patchAppointment
      summary: Updates partially an Appointment
      tags:
        - appointment
      x-codegen-request-body-name: appointment
  /appointment/{id}/cancel:
    post:
      description: This operation sends a cancellation request.
      operationId: cancelAppointment
      parameters:
        - description: Unique (within the Seller domain) identifier for the Appointment.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description: |-
            The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "204":
          description: Cancelled
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error422"
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - cancelAppointment
      summary: Cancels an Appointment
      tags:
        - appointment operations
  /searchTimeSlot:
    post:
      description:
        A request by the Buyer to find a set of available time slots for
        scheduling or rescheduling an Appointment for a Workorder with a Seller Technician.
      operationId: createSearchTimeSlot
      parameters:
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/SearchTimeSlot_Create"
        description: The Appointment to be created
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/SearchTimeSlot"
          description: Created  (https://tools.ietf.org/html/rfc7231section-6.3.2)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error422"
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - createSearchTimeSlot
      summary: Creates a SearchTimeSlot
      tags:
        - searchTimeSlot
  /hub:
    post:
      description: The Buyer requests to subscribe to Appointment Notifications.
      operationId: registerListener
      parameters:
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/EventSubscriptionInput"
        description: Data containing the callback endpoint to deliver the information
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EventSubscription"
          description: Subscribed  (https://tools.ietf.org/html/rfc7231section-6.3.2)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - registerListener
      summary: Allows the Buyer to register to Appointment status change notifications
      tags:
        - events subscription
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      description: The Buyer requests to unsubscribe from Appointment Notifications
      operationId: unregisterListener
      parameters:
        - description: The id of the EventSubscription
          in: path
          name: id
          required: true
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "204":
          description: Deleted (https://tools.ietf.org/html/rfc7231section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - unregisterListener
      summary: Unregister a listener
      tags:
        - events subscription
    get:
      description: This operation retrieves a hub entity.
      operationId: retrieveHub
      parameters:
        - description: Identifier of the Hub
          in: path
          name: id
          required: true
          schema:
            type: string
        - description:
            "The unique identifier of the organization that is acting as\
            \ the a Buyer. MUST be specified in the request only when the requester\
            \ represents more than one Buyer. Reference: MEF 57.2 (Sn 9.18)"
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            "The unique identifier of the organization that is acting as\
            \ the Seller. MUST be specified in the request only when responding entity\
            \  represents more than one Seller. Reference: MEF 57.2 (Sn 9.18)"
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EventSubscription"
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveHub
      summary: Retrieves a Hub by ID
      tags:
        - events subscription
components:
  schemas:
    Appointment:
      type: object
      description:
        "In the context of MEF 113 document, denotes an arrangement between\
        \ the Buyer and Seller for a Seller Technician to meet with the Buyer at a\
        \ specified time and place."
      properties:
        id:
          type: string
          description: Unique identifier of the appointment
        href:
          type: string
          description: Unique URI used to access to the appointment resource
        attachment:
          type: array
          description:
            "Attachments to the Appointment, such as a file, screenshot\
            \ or embedded content."
          items:
            $ref: "#/components/schemas/AttachmentValue"
        note:
          type: array
          description: Notes describing the purpose of and the results of the Appointment
          items:
            $ref: "#/components/schemas/Note"
        relatedPlace:
          $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        status:
          $ref: "#/components/schemas/AppointmentStatusType"
        validFor:
          $ref: "#/components/schemas/TimePeriod"
        relatedContactInformation:
          type: array
          description:
            "Party playing a role in this Appointment. The 'role' is to\
            \ specify the type of contact as specified in MEF 113:\nAppointment Place\
            \ Contact (role=appointmentPlaceContact) - The site contact(s) that the\
            \ Seller Technician may need to contact in order to get access to the\
            \ Appointment Place during the Appointment. This could be an end-user,\
            \ security personnel or any authorized person \nBuyer Appointment Contact\
            \ (role=buyerAppointmentContact)- The Buyer contact(s) assigned to and\
            \ responsible for the Appointment.\nSeller Appointment Contact (role=sellerAppointmentContact)\
            \ - The Seller contact(s) assigned to and responsible for the Appointment."
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          minItems: 1
        workOrder:
          $ref: "#/components/schemas/WorkOrderRef"
      required:
        - id
        - relatedContactInformation
        - relatedPlace
        - status
        - validFor
        - workOrder
    Appointment_Create:
      type: object
      description:
        "In the context of MEF 113 document, denotes an arrangement between\
        \ the Buyer and Seller for a Seller Technician to meet with the Buyer at a\
        \ specified time and place.'"
      properties:
        attachment:
          type: array
          description:
            "Attachments to the Appointment, such as a file, screen shot\
            \ or embedded content."
          items:
            $ref: "#/components/schemas/AttachmentValue"
        note:
          type: array
          description: Notes describing the purpose of and the results of the Appointment
          items:
            $ref: "#/components/schemas/Note"
        relatedContactInformation:
          type: array
          description: |-
            Party playing a role in this Appointment. The 'role' is to specify the type of contact as specified in MEF 113:
            Appointment Place Contact (role=appointmentPlaceContact) - The site contact(s) that the Seller Technician may need to contact in order to get access to the Appointment Place during the Appointment. This could be an end-user, security personnel or any authorized person Buyer Appointment Contact (role=buyerAppointmentContact)- The Buyer contact(s) assigned to and responsible for the Appointment. Seller Appointment Contact (role=sellerAppointmentContact) - The Seller contact(s) assigned to and responsible for the Appointment.
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          minItems: 1
        validFor:
          $ref: "#/components/schemas/TimePeriod"
        workOrder:
          $ref: "#/components/schemas/WorkOrderRef"
      required:
        - relatedContactInformation
        - validFor
        - workOrder
    Appointment_Find:
      type: object
      description:
        "In the context of MEF 113 document, denotes an arrangement between\
        \ the Buyer and Seller for a Seller Technician to meet with the Buyer at a\
        \ specified time and place."
      properties:
        id:
          type: string
          description: Unique identifier of the appointment
        href:
          type: string
          description: Unique URI used to access to the appointment resource
        relatedPlace:
          $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        status:
          $ref: "#/components/schemas/AppointmentStatusType"
        validFor:
          $ref: "#/components/schemas/TimePeriod"
        workOrder:
          $ref: "#/components/schemas/WorkOrderRef"
      required:
        - id
        - relatedPlace
        - status
        - validFor
        - workOrder
    Appointment_Update:
      type: object
      description:
        "In the context of MEF 113 document, denotes an arrangement between\
        \ the Buyer and Seller for a Seller Technician to meet with the Buyer at a\
        \ specified time and place."
      properties:
        attachment:
          type: array
          description:
            "Attachments to the Appointment, such as a file, screen shot\
            \ or embedded content."
          items:
            $ref: "#/components/schemas/AttachmentValue"
        note:
          type: array
          description: Notes describing the purpose of and the results of the Appointment.
          items:
            $ref: "#/components/schemas/Note"
        relatedPlace:
          $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        relatedContactInformation:
          type: array
          description:
            "Party playing a role in this Appointment. The 'role' is to\
            \ specify the type of contact as specified in MEF 113:\nAppointment Place\
            \ Contact (role=appointmentPlaceContact) - The site contact(s) that the\
            \ Seller Technician may need to contact in order to get access to the\
            \ Appointment Place during the Appointment. This could be an end-user,\
            \ security personnel or any authorized person \nBuyer Appointment Contact\
            \ (role=buyerAppointmentContact)- The Buyer contact(s) assigned to and\
            \ responsible for the Appointment.\nSeller Appointment Contact (role=sellerAppointmentContact)\
            \ - The Seller contact(s) assigned to and responsible for the Appointment."
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
          minItems: 1
        validFor:
          $ref: "#/components/schemas/TimePeriod"
    AppointmentStatusType:
      type: string
      description: |
        Valid values for the lifecycle status of the appointment.

        | status                  | MEF 113 name           | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |
        | ----------------------- | ---------------------- ||
        | `confirmed`             | SCHEDULED              | The Buyer has negotiated and scheduled the Appointment with the Seller.                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
        | `inProgress`            | IN_PROGRESS            | The Appointment can no longer be cancelled (point of no return), this is up to the Seller�s discretion.                         |
        | `cancelled`             | CANCELLED              | The Appointment was cancelled by the Buyer or the Seller determined that an Appointment was not required.  This is a terminal state.                                                                                                                                                                                                                                                                                                                                                                                      |
        | `missed`                | MISSED                 | The Appointment did not take place, because of a Seller related issue. For example, no Seller Technician was available on the date of the appointment                                                                                                                                                                                                                                                                                                                                                                     |
        | `failed`                | FAILED                 | The Appointment did not take place, because of an issue with the Buy-er. For example, Seller Technician was unable to get to the Appointment due to an incorrect location or unable to get access to the Buyer`s site. This is a terminal state                                                                                                                                                                                                                                                                           |
        | `completed`             | COMPLETED              | The Appointment took place as scheduled. This is a terminal state.                                                                                                                                                                                                                                                                                                                                                                                                                                                        |
      enum:
        - confirmed
        - inProgress
        - cancelled
        - missed
        - failed
        - completed
    AttachmentValue:
      type: object
      description:
        "Complements the description of an element (for instance a product)\
        \ through video, pictures..."
      properties:
        attachmentId:
          type: string
          description:
            locally unique identifier to distinguish items from the Attachment
            list.
        author:
          type: string
          description: Author of the Attachment
        content:
          type: string
          description:
            "The actual contents of the attachment object, if embedded,\
            \ encoded as base64. Either url or (content and mimeType) attributes MUST\
            \ be provided during creation."
        creationDate:
          type: string
          format: date-time
          description: The date the Attachment was added.
        description:
          type: string
          description: A narrative text describing the content of the attachment
        mimeType:
          type: string
          description:
            "Attachment mime type such as extension file for video, picture\
            \ and document"
        name:
          type: string
          description: The name of the attachment
        size:
          $ref: "#/components/schemas/MEFByteSize"
        source:
          $ref: "#/components/schemas/MEFBuyerSellerType"
        url:
          type: string
          description:
            URL where the attachment is located. Either url or (content
            and mimeType) attributes MUST be provided during creation.
      required:
        - author
        - name
        - source
    DataSizeUnit:
      type: string
      description: The unit of measure in the data size.
      enum:
        - BYTES
        - KBYTES
        - MBYTES
        - GBYTES
        - TBYTES
        - PBYTES
        - EBYTES
        - ZBYTES
        - YBYTES
    Error:
      type: object
      description: |
        Standard Class used to describe API response error Not intended to be use directly only via specialization which defines a code
      properties:
        message:
          type: string
          description:
            Text that provides mode details and corrective actions related
            to the error. This can be shown to a client user.
        reason:
          type: string
          description:
            Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
        referenceError:
          type: string
          format: uri
          description: URL pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
      description:
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error404:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notFound: A current representation of the target resource not found
              enum:
                - notFound
          required:
            - code
      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error409:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - conflict: The client has provided a value whose semantics are not appropriate for the property.
              enum:
                - conflict
          required:
            - code
      description: Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)
    Error422:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error422Code"
            propertyPath:
              type: string
              description: |
                A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
                Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
          required:
            - code
      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      type: string
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
              enum:
                - internalError
          required:
            - code
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    EventSubscription:
      type: object
      description:
        Sets the communication endpoint address the service instance must
        use to deliver notification information
      properties:
        callback:
          type: string
          description:
            The value provided by the Buyer in `EventSubscriptionInput`
            during notification registration
        id:
          type: string
          description:
            An identifier of the event subscription assigned by the Seller
            when a resource is created.
        query:
          type: string
          description:
            This attribute is used to define notification registration
            constraints.
      required:
        - callback
        - id
    EventSubscriptionInput:
      type: object
      description: This class is used to register for Notifications.
      properties:
        callback:
          type: string
          description:
            "This callback value must be set to *host* property from Buyer\
            \ Notification API (appointmentNotification.api.yaml). This property is\
            \ appended with the base path and notification resource path specified\
            \ in that API to construct an URL to which notification is sent. E.g.\
            \ for \"callback\": \"http://buyer.com/listenerEndpoint\", the status\
            \ change event notification will be sent to: `http://buyer.com/listenerEndpoint/mefApi/sonata/appointmentNotification/v2/listener/appointmentStatusChangeEvent`"
        query:
          type: string
          description:
            "This attribute is used to define to which type of events to\
            \ register to. Example: \"query\":\"eventType = AppointmentStatusChangeEvent\"\
            . To subscribe for more than one event type, put the values separated\
            \ by comma: `eventType=AppointmentStatusChangeEvent,AppointmentResolvedEvent`.\
            \ The possible values are enumerated by the 'AppointmentEventType' in\
            \ AppointmentNotification.api.yaml. An empty query is treated as specifying\
            \ no filters - ending in  subscription for all event types."
      required:
        - callback
    FieldedAddress:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            city:
              type: string
              description: The city that the address is in
            country:
              type: string
              description: Country that the address is in
            geographicSubAddress:
              $ref: "#/components/schemas/GeographicSubAddress"
            locality:
              type: string
              description: The locality that the address is in
            postcode:
              type: string
              description:
                "The descriptor for a postal delivery area, used to speed\
                \ and simplify the delivery of mail (also known as zip code)"
            postcodeExtension:
              type: string
              description:
                An extension of a postal code. E.g. the part following the
                dash in a US urban property address
            stateOrProvince:
              type: string
              description: The State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description:
                Number identifying a specific property on a public street.
                It may be combined with streetNrLast for ranged addresses. MEF 79 defines
                it as required however as in certain countries it is not used we make
                it optional in API.
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: The first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description:
                "The type of street (e.g., alley, avenue, boulevard, brae,\
                \ crescent, drive, highway, lane, terrace, parade, place, tarn, way,\
                \ wharf)"
          required:
            - city
            - country
            - streetName
      description:
        "A type of Address that has a discrete field and value for each\
        \ type of boundary or identifier down to the lowest level of detail. For example\
        \ \"street number\" is one field, \"street name\" is another field, etc. Reference:\
        \ MEF 79 (Sn 8.9.2)"
    FormattedAddress:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            addrLine1:
              type: string
              description: The first address line in a formatted address
            addrLine2:
              type: string
              description: The second address line in a formatted address
            city:
              type: string
              description: The city that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description:
                "An area of defined or undefined boundaries within a local\
                \ authority or other legislatively defined area, usually rural or semi-rural\
                \ in nature"
            postcode:
              type: string
              description:
                "The descriptor for a postal delivery area, used to speed\
                \ and simplify the delivery of mail (also known as ZIP code)"
            postcodeExtension:
              type: string
              description:
                An extension of a postal code. E.g. the part following the
                dash in an US urban property address
            stateOrProvince:
              type: string
              description: The State or Province that the address is in
          required:
            - addrLine1
            - city
            - country
      description:
        "A type of Address that has discrete fields for each type of boundary\
        \ or identifier with the exception of street and more specific location details,\
        \ which are combined into a maximum of two strings based on local postal addressing\
        \ conventions. Reference: MEF 79 (Sn 8.9.3)"
    GeographicAddressLabel:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            externalReferenceId:
              type: string
              description: A reference to an address by id
            externalReferenceType:
              type: string
              description:
                Uniquely identifies the authority that specifies the addresses
                reference and/or its type (if the authority specifies more than one
                type of address). The value(s) to be used are to be agreed during the
                onboarding. For North American providers this would normally be CLLI
                (Common Language Location Identifier) code.
          required:
            - externalReferenceId
            - externalReferenceType
      description:
        "A unique identifier controlled by a generally accepted independent\
        \ administrative authority that specifies a fixed geographical location. \
        \ Reference: MEF 79 (Sn 8.9.4)"
    GeographicAddressRef:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            href:
              type: string
              description: |
                Hyperlink to the referenced GeographicAddress. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request
            id:
              type: string
              description:
                Identifier of the referenced Geographic Address. This identifier
                is assigned during a successful address validation request (Geographic
                Address Validation API)
          required:
            - id
      description: |
        A reference to a Geographic Address resource available through Address Validation API.
    GeographicSiteRef:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            href:
              type: string
              description: |
                Hyperlink to the referenced GeographicSite. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request
            id:
              type: string
              description: Identifier of the referenced Geographic Site.
          required:
            - id
      description: |
        A reference to a Geographic Site resource available through Service Site API
    GeographicSubAddress:
      type: object
      description: "Additional fields used to specify an address, as detailed as possible."
      properties:
        buildingName:
          type: string
          description: |
            Allows for identification of places that require building name as part of addressing information
        id:
          type: string
          description: Unique Identifier of the subAddress
        levelNumber:
          type: string
          description:
            "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
            \ 2"
        levelType:
          type: string
          description: Describes level types within a building
        privateStreetName:
          type: string
          description:
            '"Private streets internal to a property (e.g. a university)
            may have internal names that are not recorded by the land title office'
        privateStreetNumber:
          type: string
          description: Private streets numbers internal to a private street
        subUnit:
          type: array
          description:
            "Representation of a MEFSubUnit It is used for describing subunit\
            \ within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\
            \ WHARF."
          items:
            $ref: "#/components/schemas/MEFSubUnit"
    MEFBuyerSellerType:
      type: string
      description: An enumeration with buyer and seller values.
      enum:
        - buyer
        - seller
    MEFByteSize:
      type: object
      description: A size represented by value and Byte units
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          $ref: "#/components/schemas/DataSizeUnit"
    MEFGeographicPoint:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            spatialRef:
              type: string
              description:
                The spatial reference system used to determine the coordinates
                (e.g. "WGS84"). The system used and the value of this field are to be
                agreed upon during the onboarding process.
            x:
              type: string
              description: The latitude expressed in the format specified by the `spacialRef`
            "y":
              type: string
              description: The longitude expressed in the format specified by the `spacialRef`
            z:
              type: string
              description: The elevation expressed in the format specified by the `spacialRef`
          required:
            - spatialRef
            - x
            - "y"
      description: |
        A MEFGeographicPoint defines a geographic point through coordinates. Reference: MEF 79 (Sn 8.9.5)
    MEFSubUnit:
      type: object
      description: Allows for sub-unit identification
      properties:
        subUnitNumber:
          type: string
          description:
            "The discriminator used for the subunit, often just a simple\
            \ number but may also be a range."
        subUnitType:
          type: string
          description:
            "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
            \ UNIT, WHARF."
      required:
        - subUnitNumber
        - subUnitType
    Note:
      type: object
      description:
        Extra information about a given entity. Only useful in processes
        involving human interaction. Not applicable to an automated process.
      properties:
        author:
          type: string
          description: Author of the note
        date:
          type: string
          format: date-time
          description: Date of the note
        id:
          type: string
          description:
            "Identifier of the note within its containing entity (may or\
            \ may not be globally unique, depending on provider implementation)"
        source:
          $ref: "#/components/schemas/MEFBuyerSellerType"
        text:
          type: string
          description: Text of the note
      required:
        - author
        - date
        - id
        - source
        - text
    RelatedContactInformation:
      type: object
      description:
        Contact data for a person or organization that is involved in a
        given context. It is specified by the Seller (e.g. Seller Contact Information)
        or by the Buyer.
      properties:
        emailAddress:
          type: string
          description: Email address
        name:
          type: string
          description: Name of the contact
        number:
          type: string
          description: Phone number
        numberExtension:
          type: string
          description: Phone number extension
        organization:
          type: string
          description: The organization or company that the contact belongs to
        postalAddress:
          $ref: "#/components/schemas/FieldedAddress"
        role:
          type: string
          description: A role the party plays in a given context.
      required:
        - emailAddress
        - name
        - number
        - role
    RelatedPlaceRefOrValue:
      type: object
      description: Defines the Place (Address or Site) by reference or by value.
      discriminator:
        mapping:
          FieldedAddress: "#/components/schemas/FieldedAddress"
          FormattedAddress: "#/components/schemas/FormattedAddress"
          GeographicAddressLabel: "#/components/schemas/GeographicAddressLabel"
          GeographicAddressRef: "#/components/schemas/GeographicAddressRef"
          GeographicSiteRef: "#/components/schemas/GeographicSiteRef"
          MEFGeographicPoint: "#/components/schemas/MEFGeographicPoint"
        propertyName: "@type"
      properties:
        "@schemaLocation":
          type: string
          format: uri
          description:
            A URI to a JSON-Schema file that defines additional attributes
            and relationships. May be used to define additional related place types.
            Usage of this attribute must be agreed upon between Buyer and Seller.
        "@type":
          type: string
          description: |
            This field is used as a discriminator and is used between different place representations. This type might discriminate for additional related place as defined in '@schemaLocation'.
          enum:
            - FieldedAddress
            - FormattedAddress
            - GeographicAddressLabel
            - GeographicAddressRef
            - GeographicSiteRef
            - MEFGeographicPoint
        role:
          type: string
          description: Role of this place
      required:
        - "@type"
        - role
    SearchTimeSlot:
      type: object
      description:
        This task resource is used to retrieve available time slots. One
        of this available time slot is after used to create or reschedule an appointment
      properties:
        availableTimeSlot:
          type: array
          description:
            "A set of time slots with the availability of a Seller Technician\
            \ returned by the Seller, which the Buyer may select for creating or rescheduling\
            \ an Appointment."
          items:
            $ref: "#/components/schemas/TimeSlot"
        requestedTimeSlot:
          type: array
          description:
            "A set of preferred time slots the Buyer is requesting the\
            \ Seller to verify for availability by a Sellers Technician at the Place\
            \ referenced in the Appointment Related Entity. For example Monday thru\
            \ Friday, or a set of specific time slots."
          items:
            $ref: "#/components/schemas/TimeSlot"
        workOrder:
          $ref: "#/components/schemas/WorkOrderRef"
      required:
        - availableTimeSlot
        - requestedTimeSlot
        - workOrder
    SearchTimeSlot_Create:
      type: object
      description:
        This task resource is used to retrieve available time slots. One
        of this available time slot is after used to create or reschedule an appointment
      properties:
        requestedTimeSlot:
          type: array
          description:
            "A set of preferred time slots the Buyer is requesting the\
            \ Seller to verify for availability by a Sellers Technician at the Place\
            \ referenced in the Appointment Related Entity. For example Monday thru\
            \ Friday, or a set of specific time slots."
          items:
            $ref: "#/components/schemas/TimeSlot"
        workOrder:
          $ref: "#/components/schemas/WorkOrderRef"
      required:
        - requestedTimeSlot
        - workOrder
    TimeSlot:
      type: object
      properties:
        validFor:
          $ref: "#/components/schemas/TimePeriod"
      required:
        - validFor
    TimePeriod:
      type: object
      description:
        "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
      properties:
        endDateTime:
          type: string
          format: date-time
          description: "End of the time period, using IETC-RFC-3339 format"
        startDateTime:
          type: string
          format: date-time
          description:
            "Start of the time period, using IETC-RFC-3339 format. If you\
            \ define a start, you must also define an end"
      required:
        - endDateTime
        - startDateTime
    WorkOrderRef:
      type: object
      description: |
        A reference to an WorkOrder resource.
      properties:
        href:
          type: string
          description: |
            Hyperlink to the referenced WorkOrder.
        id:
          type: string
          description: Identifier of the referenced WorkOrder.
      required:
        - id
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
