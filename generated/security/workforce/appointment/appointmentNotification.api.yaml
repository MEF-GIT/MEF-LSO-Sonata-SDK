openapi: 3.0.1
info:
  description: >
    **This file forms part of MEF W137**

    **This API implements Business Requirements described in MEF W113.**

    **This specification represents MEF work in progress and is subject to
    change.**

    An Appointment is an arrangement to do something or meet someone at a
    particular time and place. It is previously made during an interaction  or
    may be necessary to solve a customer problem or to deliver a product  order
    item. The appointment API goal is to manage an appointment with  all the
    necessary characteristics. 


    List of supported use cases: - Send Appointment Notification

    Copyright 2022 MEF Forum and its contributors

    This file includes content based on the TM Forum Appointment Management API
    (TMF646 v4.0.0) available at
    https://github.com/tmforum-apis/TMF646_AppointmentManagement, which is
    licensed by the TM Forum under the Apache License version 2.0. Such content
    has been modified by the MEF Forum and its contributors.
  title: Appointment Management Notification
  version: 1.0.0-RC
servers:
  - url: 'https://{serverBase}/mefApi/sonata/appointmentNotification/v1/'
    variables:
      serverBase:
        default: mef.net
        description: The base of Buyer's URL.
security:
  - oauth2MefLsoApi:
      - listenToAppointmentAttributeValueChangeEvent
      - listenToAppointmentStatusChangeEvent
tags:
  - description: |
      The Buyer's endpoint to send particular event types notifications to.
    name: Notification listeners
paths:
  /listener/appointmentAttributeValueChangeEvent:
    post:
      description: >-
        Client listener for receiving the appointmentAttributeValueChangeEvent
        notification
      operationId: listenToAppointmentAttributeValueChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AppointmentEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity appointmentAttributeValueChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/appointmentStatusChangeEvent:
    post:
      description: >-
        Client listener for receiving the appointmentStatusChangeEvent
        notification
      operationId: listenToAppointmentStatusChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AppointmentEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity appointmentStatusChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
components:
  securitySchemes:
    oauth2MefLsoApi:
      type: oauth2
      description:
        Example of a security scheme conforming to MEF 128 LSO API Security
        Profiles standard
      flows:
        clientCredentials:
          tokenUrl: /oauth2/lsoApiToken/
          refreshUrl: /oauth2/refreshLsoApiToken/
          scopes:
            listenToAppointmentAttributeValueChangeEvent:
              Client listener for receiving the
              appointmentAttributeValueChangeEvent notification
            listenToAppointmentStatusChangeEvent:
              Client listener for receiving the appointmentStatusChangeEvent
              notification
  schemas:
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    Error:
      description: >
        Standard Class used to describe API response error

        Not intended to be use directly. The `code` in the HTTP header is used
        as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          description: >-
            Text that explains the reason for error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        message:
          description: >-
            Text that provide mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        referenceError:
          description: url pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingQueryParameter: The URI is missing a required
                query-string parameter

                - missingQueryValue: The URI is missing a required query-string
                parameter value

                - invalidQuery: The query section of the URI is invalid.

                - invalidBody: The request has an invalid body
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
          type: object
      description:
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingCredentials: No credentials provided.

                - invalidCredentials: Provided credentials are invalid or
                expired
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
          type: object
      description:
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: |-
                This code indicates that the server understood
                the request but refuses to authorize it because
                of one of the following error codes:
                - accessDenied: Access denied
                - forbiddenRequester: Forbidden requester
                - tooManyUsers: Too many users
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
          type: object
      description:
        'Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)'
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error408:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                List of supported error codes:

                - timeOut: Request Time-out - indicates that the server did not
                receive a complete request message within the time that it was
                prepared to wait.
              enum:
                - timeOut
              type: string
          required:
            - code
          type: object
      description:
        'Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)'
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                One of the following error codes:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Event:
      description: >-
        Event class is used to describe information structure used for
        notification.
      properties:
        eventId:
          description: Id of the event
          type: string
        eventTime:
          description: Date time when the event occurred
          format: date-time
          type: string
      required:
        - event
        - eventId
        - eventTime
        - eventType
      type: object
    AppointmentEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - properties:
            eventType:
              description: |
                Indicates the type of the event.
              $ref: >-
                #/components/schemas/AppointmentEventType
            event:
              description: |
                A reference to the object that is source of the notification.
              $ref: >-
                #/components/schemas/AppointmentEventPayload
          required:
            - event
            - eventType
          type: object
    AppointmentEventPayload:
      description:
        The identifier of the Appointment being subject of this event.
      properties:
        sellerId:
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when requester entity
            represents more than one Seller.
          type: string
        id:
          description: ID of the Appointment attributed by quoting system
          type: string
        href:
          description: Hyperlink to access the Appointment
          type: string
        buyerId:
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the responding
            represents more than one Buyer.
          type: string
      required:
        - id
      type: object
    AppointmentEventType:
      description: Type of the Appointment Event
      enum:
        - appointmentAttributeValueChangeEvent
        - appointmentStatusChangeEvent
      type: string
