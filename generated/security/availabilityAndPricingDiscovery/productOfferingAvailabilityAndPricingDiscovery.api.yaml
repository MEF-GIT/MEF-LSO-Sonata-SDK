openapi: 3.0.1
info:
  description:
    "**This file forms part of MEF 160**\n \n**This API implements Business\
    \ Requirements described in MEF 110**\n\n**This specification represents MEF work\
    \ in progress and is subject to\nchange.**\n\nProduct Offering Availability Discovery\
    \ is a way for the Buyer to specify a\nProduct Specification to the Seller and\
    \ to receive from the Seller a list\nof zero or more Product Configurations.\n\
    \nPricing Discovery allows the Buyer to receive from the Seller a list of\none\
    \ or more terms and pricing information for the Product Configuration\nspecified\
    \ by the Buyer.\n\nThe following use cases are managed: \n\n- Retrieve Product\
    \ Offering Availability\n- Retrieve Pricing for a Product Offering Configuration\n"
  title: Product Offering Availability And Pricing Discovery Management
  version: 1.0.0-RC
servers:
  - url: "https://{serverBase}/mefApi/sonata/productOfferingAvailabilityAndPricingDiscovery/v1/"
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
security:
  - oauth2MEFLSOAPI:
      - default
tags:
  - name: Product Offering Availability
  - name: Pricing Discovery
paths:
  /productOfferingAvailability:
    post:
      operationId: productOfferingAvailabilityRequest
      parameters:
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity  represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ProductOfferingAvailability_Request"
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ProductOfferingAvailability"
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error422"
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - productOfferingAvailabilityRequest
      summary: This operation sends a Product Offering Availability Request
      tags:
        - Product Offering Availability
  /pricingDiscovery:
    post:
      operationId: pricingDiscoveryRequest
      parameters:
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity  represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/PricingDiscovery_Request"
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/PricingDiscovery"
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error422"
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - pricingDiscoveryRequest
      summary: This operation sends a Pricing Discovery Request
      tags:
        - Pricing Discovery
components:
  schemas:
    Duration:
      type: object
      description: "A Duration in a given unit of time e.g. 3 hours, or 5 days."
      properties:
        amount:
          type: integer
          description: "Duration (number of seconds, minutes, hours, etc.)"
          minimum: 0
        units:
          $ref: "#/components/schemas/TimeUnit"
      required:
        - amount
        - units
    Error:
      type: object
      description: |
        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          type: string
          description:
            Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
        message:
          type: string
          description:
            Text that provides mode details and corrective actions related
            to the error. This can be shown to a client user.
        referenceError:
          type: string
          format: uri
          description: URL pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
      description:
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error422:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error422Code"
            propertyPath:
              type: string
              description: |
                A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
                Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
          required:
            - code
      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      type: string
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
              enum:
                - internalError
          required:
            - code
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    FieldedAddress:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            country:
              type: string
              description: Country that the address is in
            streetType:
              type: string
              description:
                "The type of street (e.g., alley, avenue, boulevard, brae,\
                \ crescent, drive, highway, lane, terrace, parade, place, tarn, way,\
                \ wharf)"
            postcodeExtension:
              type: string
              description:
                An extension of a postal code. E.g. the part following the
                dash in a US urban property address
            city:
              type: string
              description: The city that the address is in
            streetNr:
              type: string
              description:
                "Number identifying a specific property on a public street.\
                \ It may be combined with streetNrLast for ranged addresses. MEF 79\
                \ defines it as required for the Seller response, however in certain\
                \ countries it is not used, so it's optional in API."
            locality:
              type: string
              description: The locality that the address is in
            postcode:
              type: string
              description:
                "A descriptor for a postal delivery area, used to speed and\
                \ simplify the delivery of mail (also known as zip code) MEF 79 defines\
                \ it as required however as in certain countries it is not used we make\
                \ it optional in API."
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrSuffix:
              type: string
              description: The first street number suffix
            streetName:
              type: string
              description: Name of the street or other street type
            stateOrProvince:
              type: string
              description: The State or Province that the address is in
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            geographicSubAddress:
              $ref: "#/components/schemas/GeographicSubAddress"
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
          required:
            - city
            - country
            - streetName
      description:
        "A type of Address that has a discrete field and value for each\
        \ type of boundary or identifier down to the lowest level of detail. For example\
        \ \"street number\" is one field, \"street name\" is another field, etc."
    FormattedAddress:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            country:
              type: string
              description: Country that the address is in
            postcodeExtension:
              type: string
              description:
                An extension of a postal code. E.g. the part following the
                dash in a US urban property address
            stateOrProvince:
              type: string
              description: The State or Province that the address is in
            city:
              type: string
              description: The city that the address is in
            addrLine2:
              type: string
              description: The second address line in a formatted address
            addrLine1:
              type: string
              description: The first address line in a formatted address
            locality:
              type: string
              description:
                "An area of defined or undefined boundaries within a local\
                \ authority or other legislatively defined area, usually rural or semi-rural\
                \ in nature"
            postcode:
              type: string
              description:
                A descriptor for a postal delivery area used to speed and
                simplify the delivery of mail (also known as ZIP code)
          required:
            - addrLine1
            - city
            - country
      description:
        "A type of Address that has discrete fields for each type of boundary\
        \ or identifier with the exception of the street and more specific location\
        \ details, which are combined into a maximum of two strings based on local\
        \ postal addressing conventions."
    GeographicAddressLabel:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            externalReferenceId:
              type: string
              description:
                The unique reference to an Address as provided by the Administrative
                Authority.
            externalReferenceType:
              type: string
              description:
                The organization or standard from the organization that administers
                this Geographic Address Label ensuring it is unique within the Administrative
                Authority. The value(s) to be used are to be agreed upon during the
                onboarding. For North American providers this would normally be CLLI
                (Common Language Location Identifier) code.
          required:
            - externalReferenceId
            - externalReferenceType
      description:
        A unique identifier controlled by a generally accepted independent
        administrative authority that specifies a fixed geographical location.
    GeographicAddressRef:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            href:
              type: string
              description: |
                Hyperlink to the referenced Address. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
            id:
              type: string
              description:
                Identifier of the referenced Geographic Address. This identifier
                is assigned during a successful address validation request (Geographic
                Address Management API)
          required:
            - id
      description: |
        A reference to a Geographic Address resource available through Address Validation API.
    GeographicSiteRef:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            href:
              type: string
              description: |
                Hyperlink to the referenced Site. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
            id:
              type: string
              description: Identifier of the referenced Geographic Site.
          required:
            - id
      description: |
        A reference to a Geographic Site resource available through Service Site API
    GeographicSubAddress:
      type: object
      description: "Additional fields used to specify an address, as detailed as possible."
      properties:
        buildingName:
          type: string
          description: |
            Allows for identification of places that require building name  as part of addressing information
        subUnit:
          type: array
          description:
            "Representation of a MEFSubUnit It is used for describing subunit\
            \ within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\
            \ WHARF."
          items:
            $ref: "#/components/schemas/MEFSubUnit"
        levelType:
          type: string
          description: Describes level types within a building
        levelNumber:
          type: string
          description:
            "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
            \ 2"
        privateStreetNumber:
          type: string
          description: Private streets numbers internal to a private street
        privateStreetName:
          type: string
          description:
            Private streets internal to a property (e.g. a university)
            may have internal names that are not recorded by the land title office
    MEFChargePeriod:
      type: string
      description: Used for a recurring charge to indicate period.
      enum:
        - hour
        - day
        - week
        - month
        - year
    MEFEndOfTermAction:
      type: string
      description: |
        The action that needs to be taken by the Seller once the term expires.

        | Value          | Description                                                                                                            |
        | -------------- | ---------------------------------------------------------------------------------------------------------------------- |
        | roll           | The Product's contract will continue on a rolling basis once the contract's initial term ex-pires,                     |
        | autoDisconnect | The Product will automatically be disconnected (and contract terminated) by the Seller once the contract term expires, |
        | autoRenew      | The Product's contract will be renewed for another term equivalent to the original contract term.                      |
      enum:
        - roll
        - autoDisconnect
        - autoRenew
    MEFGeographicPoint:
      allOf:
        - $ref: "#/components/schemas/RelatedPlaceRefOrValue"
        - type: object
          properties:
            spatialRef:
              type: string
              description:
                The spatial reference system used to determine the coordinates
                (e.g. "WGS84"). The system used and the value of this field are to be
                agreed during the onboarding process.
            x:
              type: string
              description: The latitude expressed in the format specified by the `spacialRef`
            "y":
              type: string
              description: The longitude expressed in the format specified by the `spacialRef`
            z:
              type: string
              description: The elevation expressed in the format specified by the `spacialRef`
          required:
            - spatialRef
            - x
            - "y"
      description: |
        A MEFGeographicPoint defines a geographic point through coordinates.
    MEFItemTerm:
      type: object
      description: Describes a term (also known as commitment)
      properties:
        duration:
          $ref: "#/components/schemas/Duration"
        endOfTermAction:
          $ref: "#/components/schemas/MEFEndOfTermAction"
        name:
          type: string
          description: Name of the term
        description:
          type: string
          description: Description of the term
        rollInterval:
          $ref: "#/components/schemas/Duration"
      required:
        - duration
        - endOfTermAction
        - name
    MEFPriceType:
      type: string
      description: Indicates if the price is for recurring or non-recurring charges.
      enum:
        - recurring
        - nonRecurring
        - usageBased
    MEFProductConfiguration:
      type: object
      description:
        MEFProductConfiguration is used as an extension point for MEF specific
        product/service payload. The `@type` attribute is used as a discriminator
      discriminator:
        propertyName: "@type"
      properties:
        "@type":
          type: string
          description:
            The name of the type that uniquely identifies the type of the
            product that is the subject of the POQ Request. In case of MEF product
            this is the URN provided in the Product Specification.
      required:
        - "@type"
    MEFSubUnit:
      type: object
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          type: string
          description:
            "The discriminator used for the subunit, often just a simple\
            \ number but may also be a range."
        subUnitType:
          type: string
          description:
            "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
            \ UNIT, WHARF."
      required:
        - subUnitNumber
        - subUnitType
    Money:
      type: object
      description: A base/value business entity used to represent money
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: A positive floating point number
      required:
        - unit
        - value
    Price:
      type: object
      description:
        "Provides all amounts (tax included, duty-free, tax rate), used\
        \ currency and percentage to apply for Price Alteration."
      properties:
        taxRate:
          type: number
          format: float
          description: "Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax."
        taxIncludedAmount:
          $ref: "#/components/schemas/Money"
        dutyFreeAmount:
          $ref: "#/components/schemas/Money"
      required:
        - dutyFreeAmount
    PricingAndTerm:
      description: Pricing and term specification for an available Product Configuration
      properties:
        identifier:
          type: string
          description: The identifier of the Pricing and Term.
        installationInterval:
          $ref: "#/components/schemas/Duration"
        term:
          $ref: "#/components/schemas/MEFItemTerm"
        validFor:
          $ref: "#/components/schemas/TimePeriod"
        price:
          type: array
          description:
            The prices that apply to this PricingAndTerm for the given
            Product Configuration within the requested Delivery Context.
          items:
            $ref: "#/components/schemas/QuotePrice"
          minItems: 1
        subjectToAdditionalNonrecurringCharges:
          type: boolean
          description:
            An indicator to inform the Buyer that additional non-recurring
            charges may be added during fulfillment.
        firm:
          type: boolean
          description:
            An indicator specifying whether or not this charge may change
            during fulfillment.
        productOffering:
          $ref: "#/components/schemas/ProductOfferingRef"
      required:
        - firm
        - identifier
        - installationInterval
        - price
        - productOffering
        - subjectToAdditionalNonrecurringCharges
        - term
        - validFor
    PricingDiscovery:
      allOf:
        - $ref: "#/components/schemas/PricingDiscovery_Common"
        - type: object
          description:
            "PricingDiscovery allows the Seller to provide the list of Pricing\
            \ and Terms matching action, delivery context and Product Configuration\
            \ Identifier provided by the Buyer"
          properties:
            pricingAndTerms:
              type: array
              description: Pricing and terms matching Buyer's criteria
              items:
                $ref: "#/components/schemas/PricingAndTerm"
          required:
            - pricingAndTerms
    PricingDiscovery_Common:
      type: object
      description: A set of attribute common to PricingDiscovery_Request and PricingDiscovery
      properties:
        action:
          $ref: "#/components/schemas/ProductActionAddModifyType"
        productConfigurationIdentifier:
          type: string
          description: |
            The identifier for the Product Configuration Pricing Discovery is being requested for.
        productRef:
          $ref: "#/components/schemas/ProductRef"
        productRelationship:
          type: array
          description: A list of Product Relationships as defined by the Product Specification.
          items:
            $ref: "#/components/schemas/ProductRelationship"
        place:
          type: array
          description:
            A list of Addresses or Sites and their roles with relation
            to the Product.
          items:
            $ref: "#/components/schemas/RelatedPlaceRefOrValue"
      required:
        - action
        - productConfigurationIdentifier
    PricingDiscovery_Request:
      allOf:
        - $ref: "#/components/schemas/PricingDiscovery_Common"
        - type: object
          description:
            "Pricing Discovery Request allows the Buyer to provide the action,\
            \ delivery context and Product Configuration Identifier to ask the Seller\
            \ to provide a list of available Pricing and Terms"
    ProductActionAddModifyType:
      type: string
      description: |
        Action to be performed on the Product.

        The following mapping has been used between `ProductActionType` and MEF
        110:

        | ProductActionType | MEF 110    |
        |------------------ | ---------- |
        | add               | INSTALL    |
        | modify            | CHANGE     |
      enum:
        - add
        - modify
    ProductOfferingAvailability:
      allOf:
        - $ref: "#/components/schemas/ProductOfferingAvailability_Common"
        - type: object
          properties:
            availableProductOfferingConfigurations:
              type: array
              items:
                $ref: "#/components/schemas/ProductOfferingConfiguration"
              minItems: 0
          required:
            - availableProductOfferingConfigurations
      description:
        "Product Offering Availability allows the Seller to provide the\
        \ list of Product Offering Configurations matching action, delivery context\
        \ and Product Specification provided by the Buyer"
    ProductOfferingAvailability_Common:
      type: object
      description: |
        Common attributes for ProductOfferingAvailability_Request and ProductOfferingAvailability
      properties:
        action:
          $ref: "#/components/schemas/ProductActionAddModifyType"
        productRef:
          $ref: "#/components/schemas/ProductRef"
        productSpecification:
          $ref: "#/components/schemas/ProductSpecificationRef"
        productRelationship:
          type: array
          description: A list of Product Relationships as defined by the Product Specification.
          items:
            $ref: "#/components/schemas/ProductRelationship"
        place:
          type: array
          description:
            A list of Addresses or Sites and their roles with relation
            to the Product.
          items:
            $ref: "#/components/schemas/RelatedPlaceRefOrValue"
      required:
        - action
        - product
    ProductOfferingAvailability_Request:
      allOf:
        - $ref: "#/components/schemas/ProductOfferingAvailability_Common"
        - type: object
      description:
        "Product Offering Availability Request allows the Buyer to provide\
        \ the action, delivery context and Product Specification to ask the Seller\
        \ to provide a list of available Product Offering Configurations."
    ProductOfferingConfiguration:
      type: object
      description:
        Allows the Seller to provide a detailed information of Product
        Configuration matching Buyer's Product Offering Availability Request.
      properties:
        productOffering:
          $ref: "#/components/schemas/ProductOfferingRef"
        productConfigurationIdentifier:
          type: string
          description: |
            An identifier of the returned `productConfiguration` that can be used in next step for Pricing Discovery
        productConfiguration:
          $ref: "#/components/schemas/MEFProductConfiguration"
        installationInterval:
          $ref: "#/components/schemas/Duration"
      required:
        - installationInterval
        - productConfiguration
        - productConfigurationIdentifier
        - productOffering
    ProductOfferingRef:
      type: object
      description:
        A reference to a Product Offering offered by the Seller to the
        Buyer.
      properties:
        href:
          type: string
          description: |
            Hyperlink to a Product Offering in Sellers catalog. In case Seller is not providing a catalog API this field is not used. The catalog is provided by the Seller to the Buyer during onboarding. Hyperlink MAY be used by the Seller in responses   Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
        id:
          type: string
          description:
            id of a Product Offering. It is assigned by the Seller. The
            Buyer and the Seller exchange information about offerings' ids during
            the onboarding process.
      required:
        - id
    ProductRef:
      type: object
      description: A reference to a Product in the Product Inventory
      properties:
        id:
          type: string
          description: Unique identifier of a Product
        href:
          type: string
          description:
            Hyperlink to a Product instance in Sellers Product Inventory.
            Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored
            by the Seller in case it is provided by the Buyer in a request.
      required:
        - id
    ProductRelationship:
      type: object
      description:
        A relationship to an existing Product. The requirements for usage
        for given Product are described in the Product Specification.
      properties:
        href:
          type: string
          description:
            Hyperlink to the product in Seller's inventory that is referenced
            Hyperlink MAY be used when providing a response by the Seller Hyperlink
            MUST be ignored by the Seller in case it is provided by the Buyer in a
            request
        id:
          type: string
          description: Unique identifier of the related Product
        relationshipType:
          type: string
          description: |
            Specifies the type (nature) of the relationship to the related Product. The nature of required relationships varies for Products of different types. For example, a UNI or ENNI Product may not have any relationships, but an Access E-Line may have two mandatory relationships (related to the UNI on one end and the ENNI on the other). More complex Products such as multipoint IP or Firewall Products may have more complex relationships. As a result, the allowed and mandatory `relationshipType` values are defined in the Product Specification.
      required:
        - id
        - relationshipType
    ProductSpecificationRef:
      type: object
      description:
        A reference to a structured set of well-defined technical attributes
        and/or behaviors that are used to construct a Product Offering for sale to
        a market.
      properties:
        href:
          type: string
          description: |
            Hyperlink to a Product Specification in Sellers catalog. In case Seller is not providing a catalog API this field is not used. The catalog is provided by the Seller to the Buyer during onboarding. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
        id:
          type: string
          description: Unique identifier of the Product Specification
      required:
        - id
    QuotePrice:
      type: object
      description: Description of price and discount awarded
      properties:
        name:
          type: string
          description: Name of the price
        description:
          type: string
          description: Description of the price
        priceType:
          $ref: "#/components/schemas/MEFPriceType"
        unitOfMeasure:
          type: string
          description:
            "Unit of Measure if price depending on it (Gb, SMS volume,\
            \ etc..) MSU be specified when `priceType` is `usageBased`"
        price:
          $ref: "#/components/schemas/Price"
        recurringChargePeriod:
          $ref: "#/components/schemas/MEFChargePeriod"
      required:
        - name
        - price
        - priceType
    RelatedPlaceRefOrValue:
      type: object
      description:
        Place defines the places (locations) where the products being subject
        of this qualification are to be provided.
      discriminator:
        mapping:
          FieldedAddress: "#/components/schemas/FieldedAddress"
          FormattedAddress: "#/components/schemas/FormattedAddress"
          GeographicAddressLabel: "#/components/schemas/GeographicAddressLabel"
          MEFGeographicPoint: "#/components/schemas/MEFGeographicPoint"
          GeographicAddressRef: "#/components/schemas/GeographicAddressRef"
          GeographicSiteRef: "#/components/schemas/GeographicSiteRef"
        propertyName: "@type"
      properties:
        role:
          type: string
          description:
            Role of this place. The values that can be specified here are
            described by Product Specification (e.g. "INSTALL_LOCATION").
        "@type":
          type: string
          description: |
            This field is used as discriminator. The value is the name of one of the types that inherit from it using 'allOf', i.e. one of FieldedAddress, FormattedAddress, GeographicAddressLabel, MEFGeographicPoint, GeographicAddressRef, GeographicSiteRef. Moreover, it might discriminate for an additional related place as defined in '@schemaLocation'.
          enum:
            - FieldedAddress
            - FormattedAddress
            - GeographicAddressLabel
            - MEFGeographicPoint
            - GeographicAddressRef
            - GeographicSiteRef
        "@schemaLocation":
          type: string
          format: uri
          description:
            A URL to a JSON-Schema file that defines additional attributes
            and relationships. May be used to define additional related place types.
            Usage of this attribute must be agreed between Buyer and Seller.
      required:
        - "@type"
        - role
    TimePeriod:
      type: object
      description:
        "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both."
      properties:
        startDateTime:
          type: string
          format: date-time
          description:
            "Start of the time period, using IETC-RFC-3339 format. If you\
            \ define a start, you must also define an end"
        endDateTime:
          type: string
          format: date-time
          description: "End of the time period, using IETC-RFC-3339 format"
    TimeUnit:
      type: string
      description: |
        Represents a unit of time.
      enum:
        - calendarMonths
        - calendarDays
        - calendarHours
        - calendarMinutes
        - businessDays
        - businessHours
        - businessMinutes
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
