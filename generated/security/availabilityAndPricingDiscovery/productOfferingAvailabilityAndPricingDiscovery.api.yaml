openapi: 3.0.1
info:
  description: "**This file forms part of MEF 160**\n \n**This API implements Business\
    \ Requirements described in MEF 110**\n\n**This specification represents MEF work\
    \ in progress and is subject to\nchange.**\n\nProduct Offering Availability Discovery\
    \ is a way for the Buyer to specify a\nProduct Specification to the Seller and\
    \ to receive from the Seller a list\nof zero or more Product Configurations.\n\
    \nPricing Discovery allows the Buyer to receive from the Seller a list of\none\
    \ or more terms and pricing information for the Product Configuration\nspecified\
    \ by the Buyer.\n\nThe following use cases are managed: \n\n- Retrieve Product\
    \ Offering Availability\n- Retrieve Pricing and Terms\n"
  title: Product Offering Availability And Pricing Discovery Management
  version: 2.0.0-RC
servers:
- url: "https://{serverBase}/mefApi/sonata/productOfferingAvailabilityAndPricingDiscovery/v2/"
  variables:
    serverBase:
      default: mef.net
      description: The base of Seller's URL.
security:
- oauth2MEFLSOAPI:
  - default
tags:
- name: Product Offering Availability
- name: Pricing Discovery
paths:
  /productOfferingAvailability:
    post:
      operationId: productOfferingAvailabilityRequest
      parameters:
      - description: The unique identifier of the organization that is acting as a
          Buyer. MUST be specified in the request only when the requester represents
          more than one Buyer.
        in: query
        name: buyerId
        required: false
        schema:
          type: string
      - description: The unique identifier of the organization that is acting as the
          Seller. MUST be specified in the request only when responding entity represents
          more than one Seller.
        in: query
        name: sellerId
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProductOfferingAvailability_Request'
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProductOfferingAvailability'
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - productOfferingAvailabilityRequest
      summary: The Buyer requests a list of available Product Offering Configurations
        from the Seller for a specific Product Specification within the specified
        Delivery Context. The Seller responds to the Buyer with a list of Product
        Configurations meeting the Buyer's criteria and the Installation Interval
        for each of these. Each Product Configuration has a unique identifier that
        is passed to the Buyer by the Seller. This identifier is used to Retrieve
        Pricing and Terms.
      tags:
      - Product Offering Availability
  /pricingDiscovery:
    post:
      operationId: pricingDiscoveryRequest
      parameters:
      - description: The unique identifier of the organization that is acting as a
          Buyer. MUST be specified in the request only when the requester represents
          more than one Buyer.
        in: query
        name: buyerId
        required: false
        schema:
          type: string
      - description: The unique identifier of the organization that is acting as the
          Seller. MUST be specified in the request only when responding entity represents
          more than one Seller.
        in: query
        name: sellerId
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PricingDiscovery_Request'
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PricingDiscovery'
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - pricingDiscoveryRequest
      summary: The Buyer requests a list of Pricing and Terms from the Seller for
        a specific Product Configuration Identifier within a specific Delivery Context.
        The Seller responds to the Buyer with a list of Pricing and Terms.
      tags:
      - Pricing Discovery
components:
  schemas:
    Duration:
      description: "A Duration in a given unit of time e.g. 3 hours, or 5 days."
      properties:
        amount:
          description: "Duration (number of seconds, minutes, hours, etc.)"
          minimum: 0
          type: integer
        units:
          $ref: '#/components/schemas/TimeUnit'
      required:
      - amount
      - units
      type: object
    Error:
      description: |
        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          description: Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
          type: string
        message:
          description: Text that provides mode details and corrective actions related
            to the error. This can be shown to a client user.
          type: string
        referenceError:
          description: URL pointing to documentation describing the error
          format: uri
          type: string
      required:
      - reason
      type: object
    Error400:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error400Code'
        required:
        - code
        type: object
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error400Code:
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
      - missingQueryParameter
      - missingQueryValue
      - invalidQuery
      - invalidBody
      type: string
    Error401:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error401Code'
        required:
        - code
        type: object
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
      - missingCredentials
      - invalidCredentials
      type: string
    Error403:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error403Code'
        required:
        - code
        type: object
      description: Forbidden. This code indicates that the server understood the request
        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
      - accessDenied
      - forbiddenRequester
      - tooManyUsers
      type: string
    Error422:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error422Code'
          propertyPath:
            description: |
              A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
              Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
            type: string
        required:
        - code
        type: object
      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
      - missingProperty
      - invalidValue
      - invalidFormat
      - referenceNotFound
      - unexpectedProperty
      - tooManyRecords
      - otherIssue
      type: string
    Error500:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: |-
              The following error code:
              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
            enum:
            - internalError
            type: string
        required:
        - code
        type: object
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    GeographicAddressRef:
      allOf:
      - $ref: '#/components/schemas/RelatedPlaceRef'
      - properties:
          href:
            description: |
              Hyperlink to the referenced Address. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
            type: string
          id:
            description: Identifier of the referenced Geographic Address. This identifier
              is assigned during a successful address validation request (Geographic
              Address Management API)
            type: string
        required:
        - id
        type: object
      description: |
        A reference to a Geographic Address resource available through Address Validation API.
    GeographicSiteRef:
      allOf:
      - $ref: '#/components/schemas/RelatedPlaceRef'
      - properties:
          href:
            description: |
              Hyperlink to the referenced Site. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
            type: string
          id:
            description: Identifier of the referenced Geographic Site.
            type: string
        required:
        - id
        type: object
      description: |
        A reference to a Geographic Site resource available through the Service Site API
    MEFChargePeriod:
      description: Used for a recurring charge to indicate period.
      enum:
      - hour
      - day
      - week
      - month
      - year
      type: string
    MEFEndOfTermAction:
      description: |
        The action that needs to be taken by the Seller once the term expires.

        | Value          | Description                                                                                                            |
        | -------------- | ---------------------------------------------------------------------------------------------------------------------- |
        | roll           | The Product's contract will continue on a rolling basis once the contract's current term expires                       |
        | autoDisconnect | The Product will automatically be disconnected (and contract terminated) by the Seller once the contract term expires  |
        | autoRenew      | The Product's contract will be renewed for another term equivalent to the original contract term.                      |
      enum:
      - roll
      - autoDisconnect
      - autoRenew
      type: string
    MEFItemTerm:
      description: Describes a term (also known as commitment)
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        endOfTermAction:
          $ref: '#/components/schemas/MEFEndOfTermAction'
        name:
          description: Name of the term
          type: string
        description:
          description: Description of the term
          type: string
        rollInterval:
          $ref: '#/components/schemas/Duration'
      required:
      - duration
      - endOfTermAction
      - name
      type: object
    MEFPriceType:
      description: Indicates if the price is for recurring or non-recurring charges.
      enum:
      - recurring
      - nonRecurring
      - usageBased
      type: string
    MEFProductConfiguration:
      description: MEFProductConfiguration is used as an extension point for MEF specific
        product/service payload. The `@type` attribute is used as a discriminator
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          description: The name of the type that uniquely identifies the type of the
            product that is the subject of the POQ Request. In the case of MEF product
            this is the URN provided in the Product Specification.
          type: string
      required:
      - '@type'
      type: object
    Money:
      description: A base/value business entity used to represent money
      properties:
        unit:
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
          type: string
        value:
          description: A positive floating point number
          format: float
          type: number
      required:
      - unit
      - value
      type: object
    Price:
      description: "Provides all amounts (tax included, duty-free, tax rate), used\
        \ currency and percentage to apply for Price Alteration."
      properties:
        taxRate:
          description: "Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax."
          format: float
          type: number
        taxIncludedAmount:
          $ref: '#/components/schemas/Money'
        dutyFreeAmount:
          $ref: '#/components/schemas/Money'
      required:
      - dutyFreeAmount
      type: object
    PricingAndTerm:
      description: An option for price and term available to a Buyer for a Product
        Configuration with a specific Delivery Context
      properties:
        identifier:
          description: The identifier of the Pricing and Term.
          type: string
        installationInterval:
          $ref: '#/components/schemas/Duration'
        term:
          $ref: '#/components/schemas/MEFItemTerm'
        price:
          description: The prices that apply to this PricingAndTerm for the given
            Product Configuration within the requested Delivery Context.
          items:
            $ref: '#/components/schemas/QuotePrice'
          minItems: 1
          type: array
        subjectToAdditionalNonrecurringCharges:
          description: An indicator to inform the Buyer that additional non-recurring
            charges may be added during fulfillment.
          type: boolean
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
      required:
      - identifier
      - installationInterval
      - price
      - productOffering
      - subjectToAdditionalNonrecurringCharges
      - term
    PricingDiscovery:
      allOf:
      - $ref: '#/components/schemas/PricingDiscovery_Request'
      - description: "PricingDiscovery allows the Seller to provide the list of Pricing\
          \ and Terms matching action, delivery context, and Product Configuration\
          \ Identifier provided by the Buyer"
        properties:
          pricingAndTerms:
            description: A set of contract terms and corresponding prices available
              for a given Product Configuration considering the Delivery Context.
            items:
              $ref: '#/components/schemas/PricingAndTerm'
            type: array
        required:
        - pricingAndTerms
        type: object
    PricingDiscovery_Request:
      description: A set of attributes common to PricingDiscovery_Request and PricingDiscovery
      properties:
        action:
          $ref: '#/components/schemas/ProductActionAddModifyType'
        productConfigurationIdentifier:
          description: |
            The identifier for the Product Configuration that the Pricing Discovery is being requested for.
          type: string
        productRef:
          $ref: '#/components/schemas/ProductRef'
        productRelationship:
          description: A list of Product Relationships as defined by the Product Specification.
            It MUST be provided when the `action` = `add`. It MUST NOT be provided
            when the `action` = `modify`
          items:
            $ref: '#/components/schemas/ProductRelationship'
          type: array
        place:
          description: A list of Geographic Addresses or Sites and their roles with
            relation to the Product. It MUST be provided when the `action` = `add`.
            It MUST NOT be provided when the `action` = `modify`
          items:
            $ref: '#/components/schemas/RelatedPlaceRef'
          type: array
      required:
      - action
      - productConfigurationIdentifier
      type: object
    ProductActionAddModifyType:
      description: |
        Action to be performed on the Product.

        The following mapping has been used between `ProductActionType` and MEF
        110:

        | ProductActionType | MEF 110    |
        |------------------ | ---------- |
        | add               | INSTALL    |
        | modify            | CHANGE     |
      enum:
      - add
      - modify
      type: string
    ProductOfferingAvailability:
      allOf:
      - $ref: '#/components/schemas/ProductOfferingAvailability_Request'
      - properties:
          availableProductOfferingConfigurations:
            items:
              $ref: '#/components/schemas/ProductOfferingConfiguration'
            minItems: 0
            type: array
        required:
        - availableProductOfferingConfigurations
        type: object
      description: "Product Offering Availability allows the Seller to provide a list\
        \ of Product Offering Configurations matching action, delivery context and\
        \ Product Specification provided by the Buyer"
    ProductOfferingAvailability_Request:
      description: |
        Product Offering Availability Request allows the Buyer to provide the action, delivery context, and Product Specification to ask the Seller to provide a list of available Product Offering Configurations.
      properties:
        action:
          $ref: '#/components/schemas/ProductActionAddModifyType'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        productRef:
          $ref: '#/components/schemas/ProductRef'
        productRelationship:
          description: A list of Product Relationships as defined by the Product Specification.
            It MUST be provided when the `action` = `add`. It MUST NOT be provided
            when the `action` = `modify`
          items:
            $ref: '#/components/schemas/ProductRelationship'
          type: array
        place:
          description: A list of Geographic Addresses or Sites and their roles in
            relation to the Product. It MUST be provided when the `action` = `add`.
            It MUST NOT be provided when the `action` = `modify`
          items:
            $ref: '#/components/schemas/RelatedPlaceRef'
          type: array
      required:
      - action
      type: object
    ProductOfferingConfiguration:
      description: Allows the Seller to provide detailed information of the Product
        Configuration matching Buyer's Product Offering Availability Request.
      properties:
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        productConfiguration:
          $ref: '#/components/schemas/MEFProductConfiguration'
        productConfigurationIdentifier:
          description: |
            An identifier of the returned `productConfiguration` that can be used in the next step for Pricing Discovery
          type: string
        installationInterval:
          $ref: '#/components/schemas/Duration'
      required:
      - installationInterval
      - productConfiguration
      - productConfigurationIdentifier
      - productOffering
      type: object
    ProductOfferingRef:
      description: A reference to a Product Offering offered by the Seller to the
        Buyer.
      properties:
        href:
          description: |
            Hyperlink to a Product Offering in the Seller catalog. In case the Seller is not providing a catalog API this field is not used. The catalog is provided by the Seller to the Buyer during onboarding. Hyperlink MAY be used by the Seller in responses   Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
          type: string
        id:
          description: id of a Product Offering. It is assigned by the Seller. The
            Buyer and the Seller exchange information about offerings' ids during
            the onboarding process.
          type: string
      required:
      - id
      type: object
    ProductRef:
      description: A reference to a Product in the Product Inventory
      properties:
        id:
          description: Unique identifier of a Product
          type: string
        href:
          description: Hyperlink to a Product instance in Sellers Product Inventory.
            Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored
            by the Seller in case it is provided by the Buyer in a request.
          type: string
      required:
      - id
      type: object
    ProductRelationship:
      description: A relationship to an existing Product. The requirements for usage
        for given Product are described in the Product Specification.
      properties:
        href:
          description: Hyperlink to the product in Seller's inventory that is referenced
            Hyperlink MAY be used when providing a response by the Seller Hyperlink
            MUST be ignored by the Seller in case it is provided by the Buyer in a
            request
          type: string
        id:
          description: Unique identifier of the related Product
          type: string
        relationshipType:
          description: |
            Specifies the type (nature) of the relationship to the related Product. The nature of required relationships varies for Products of different types. For example, a UNI or ENNI Product may not have any relationships, but an Access E-Line may have two mandatory relationships (related to the UNI on one end and the ENNI on the other). More complex Products such as multipoint IP or Firewall Products may have more complex relationships. As a result, the allowed and mandatory `relationshipType` values are defined in the Product Specification.
          type: string
      required:
      - id
      - relationshipType
      type: object
    ProductSpecificationRef:
      description: A reference to a structured set of well-defined technical attributes
        and/or behaviors that are used to construct a Product Offering for sale to
        a market.
      properties:
        href:
          description: |
            Hyperlink to a Product Specification in the seller's catalog. In case Seller is not providing a catalog API this field is not used. The catalog is provided by the Seller to the Buyer during onboarding. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.
          type: string
        id:
          description: Unique identifier of the Product Specification
          type: string
      required:
      - id
      type: object
    QuotePrice:
      description: Description of price and discount awarded
      properties:
        name:
          description: Name of the price
          type: string
        description:
          description: Description of the price
          type: string
        priceType:
          $ref: '#/components/schemas/MEFPriceType'
        unitOfMeasure:
          description: "Unit of Measure if price depending on it (Gb, SMS volume,\
            \ etc..) MUST be specified when `priceType` is `usageBased`"
          type: string
        price:
          $ref: '#/components/schemas/Price'
        recurringChargePeriod:
          $ref: '#/components/schemas/MEFChargePeriod'
      required:
      - name
      - price
      - priceType
      type: object
    RelatedPlaceRef:
      description: Place defines the places (locations) where the products being subject
        of this qualification are to be provided.
      discriminator:
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
        propertyName: '@type'
      properties:
        role:
          description: The role of the place as specified in the Product Specification
            (e.g. "INSTALL_LOCATION").
          type: string
        '@type':
          description: |
            This field is used as a discriminator. One of GeographicAddressRef, GeographicSiteRef.
          enum:
          - GeographicAddressRef
          - GeographicSiteRef
          type: string
      required:
      - '@type'
      - role
      type: object
    TimeUnit:
      description: |
        Represents a unit of time.
      enum:
      - seconds
      - minutes
      - businessHours
      - calendarHours
      - businessDays
      - calendarDays
      - calendarMonths
      - calendarYears
      type: string
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
