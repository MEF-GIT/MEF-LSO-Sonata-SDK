openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF 116**

    This API implements Business Requirements described in MEF 81

    It allows the Buyer to retrieve the information about existing Product
    instances from Seller's Product Inventory.

    List of supported use cases:
    - Retrieve Product List
    - Retrieve Product by Identifier

    Copyright 2021 MEF Forum and its contributors.

    This file includes content based on the TM Forum Product Inventory
    Management API (TMF637 v4.0.0) available at
    https://github.com/tmforum-apis/TMF637_ProductInventory, which is licensed
    by the TM Forum under the Apache License version 2.0. Such content has been
    modified by the MEF Forum and its contributors.
  title: Product Inventory Management
  version: 7.0.2
servers:
  - url: 'https://{serverBase}/mefApi/sonata/productInventory/v7/'
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
tags:
  - name: product
  - name: events subscription
paths:
  /product:
    get:
      description: This operation lists or finds Product entities
      operationId: listProduct
      parameters:
        - description: The status of the product
          explode: true
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - active
              - active.pendingChange
              - cancelled
              - pendingActive
              - pendingTerminate
              - suspended
              - suspendedPendingTerminate
              - terminated
          style: form
        - description: A reference to a product spec by id
          explode: true
          in: query
          name: productSpecificationId
          required: false
          schema:
            type: string
          style: form
        - description: A reference to a product offering by id
          explode: true
          in: query
          name: productOfferingId
          required: false
          schema:
            type: string
          style: form
        - description: A reference to the externalId provided in the order
          explode: true
          in: query
          name: externalId
          required: false
          schema:
            type: string
          style: form
        - description: A site identifier which is associated to the product
          explode: true
          in: query
          name: geographicalSiteId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            This criteria allows to retrieve all Product records with a Product
            Relationship to a specified Product.

            E.g. All Products related to Product with ID 5
          explode: true
          in: query
          name: relatedProductId
          required: false
          schema:
            type: string
          style: form
        - description: The Billing Account associated with the Product.
          explode: true
          in: query
          name: billingAccountId
          required: false
          schema:
            type: string
          style: form
        - description: Identifies Product Order associated with the Product
          explode: true
          in: query
          name: productOrderId
          required: false
          schema:
            type: string
          style: form
        - description:
            Less than the date that is the initial install date for the Product
          explode: true
          in: query
          name: startDate.lt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: >-
            Greater than the date that is the initial install date for the
            Product
          explode: true
          in: query
          name: startDate.gt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: >-
            Less than date that the last change affecting this Product was
            completed
          explode: true
          in: query
          name: lastUpdateDate.lt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: >-
            Greater than the date that the last change affecting this Product
            was completed
          explode: true
          in: query
          name: lastUpdateDate.gt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: buyerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: sellerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
          style: form
        - description: >-
            Requested number of items to be provided in response requested by
            client
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MEFProduct_Find'
          description:
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error422'
          description:
            Unprocessable entity due to the business validation problems
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listProduct
      summary: List or find Product objects
      tags:
        - product
  '/product/{id}':
    get:
      description: This operation retrieves a Product entity.
      operationId: retrieveProduct
      parameters:
        - description: Identifier of the Product
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-separated properties to provide in response
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: buyerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 81 (Sn 8.3)
          explode: true
          in: query
          name: sellerId
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MEFProduct'
          description:
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveProduct
      summary: Retrieves a Product by ID
      tags:
        - product
components:
  schemas:
    Error400Code:
      type: string
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Duration:
      type: object
      description:
        'A Duration in a given unit of time e.g. 3 hours, or 5 days.'
      properties:
        amount:
          type: integer
          description: 'Duration (number of seconds, minutes, hours, etc.)'
        units:
          $ref: '#/components/schemas/TimeUnit'
      required:
        - amount
        - units
    Error:
      type: object
      description: >
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        reason:
          type: string
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          maxLength: 255
        message:
          type: string
          description: >-
            Text that provides mode details and corrective actions related to
            the error. This can be shown to a client user.
        referenceError:
          type: string
          format: uri
          description: URL pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
      description:
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
      description:
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error404:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                The following error code:

                - notFound: A current representation for the target resource
                not found
              enum:
                - notFound
          required:
            - code
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error422:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error422Code'
            propertyPath:
              type: string
              description: >
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
          required:
            - code
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      type: string
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
          required:
            - code
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    FieldedAddress:
      type: object
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
        Reference: MEF 79 (Sn 8.9.2)
      properties:
        country:
          type: string
          description: Country that the address is in
        streetType:
          type: string
          description: >-
            The type of street (e.g., alley, avenue, boulevard, brae, crescent,
            drive, highway, lane, terrace, parade, place, tarn, way, wharf)
        postcodeExtension:
          type: string
          description: >-
            An extension of a postal code. E.g. the part following the dash in
            a US urban property address
        city:
          type: string
          description: The city that the address is in
        streetNr:
          type: string
          description: >-
            Number identifying a specific property on a public street. It may
            be combined with streetNrLast for ranged addresses. MEF 79 defines
            it as required however as in certain countries it is not used we
            make it optional in API.
        locality:
          type: string
          description: The locality that the address is in
        postcode:
          type: string
          description: >-
            Descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also known as zip code)
        streetNrLast:
          type: string
          description:
            Last number in a range of street numbers allocated to a property
        streetNrSuffix:
          type: string
          description: The first street number suffix
        streetName:
          type: string
          description: Name of the street or other street type
        stateOrProvince:
          type: string
          description: The State or Province that the address is in
        streetNrLastSuffix:
          type: string
          description: Last street number suffix for a ranged address
        geographicSubAddress:
          $ref: '#/components/schemas/GeographicSubAddress'
        streetSuffix:
          type: string
          description: A modifier denoting a relative direction
      required:
        - city
        - country
        - streetName
    GeographicSubAddress:
      type: object
      description:
        'Additional fields used to specify an address, as detailed as possible.'
      properties:
        buildingName:
          type: string
          description: >
            Allows for identification of places that require building name  as
            part of addressing information
        subUnit:
          type: array
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: '#/components/schemas/MEFSubUnit'
        levelType:
          type: string
          description: Describes level types within a building
        levelNumber:
          type: string
          description:
            'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT
            2'
        privateStreetNumber:
          type: string
          description: Private streets numbers internal to a private street
        privateStreetName:
          type: string
          description: >-
            "Private streets internal to a property (e.g. a university) may
            have internal names that are not recorded by the land title office
    MEFBillingAccountRef:
      type: object
      description: A reference to the Buyer's Billing Account
      properties:
        id:
          type: string
          description: >-
            Identifies the buyer's billing account to which the recurring and
            non-recurring charges for this order or order item will be billed.
            Required if the Buyer has more than one Billing Account with the
            Seller and for all new Product Orders.
      required:
        - id
    MEFChargePeriod:
      type: string
      description: Used for a recurring charge to indicate period.
      enum:
        - hour
        - day
        - week
        - month
        - year
    MEFEndOfTermAction:
      type: string
      description: The action the Seller will take once the term expires.
      enum:
        - roll
        - autoDisconnect
        - autoRenew
    MEFItemTerm:
      type: object
      description: The term of the Item
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        endOfTermAction:
          $ref: '#/components/schemas/MEFEndOfTermAction'
        name:
          type: string
          description: Name of the term
        description:
          type: string
          description: Description of the term
        rollInterval:
          $ref: '#/components/schemas/Duration'
    MEFPriceType:
      type: string
      description:
        Indicates if the price is for recurring or non-recurring charges.
      enum:
        - recurring
        - nonRecurring
        - usageBased
    MEFProduct:
      type: object
      description:
        A product is realized as one or more service(s) and / or resource(s).
      properties:
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        relatedSite:
          type: array
          description: Reference to a Site where the PRoduct is provided.
          items:
            $ref: '#/components/schemas/RelatedGeographicSite'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        lastUpdateDate:
          type: string
          format: date-time
          description: Latest date when the product has been updated.
        relatedContactInformation:
          type: array
          description: Party playing a role for this Product
          items:
            $ref: '#/components/schemas/RelatedContactInformation'
        '@type':
          type: string
          description:
            'When sub-classing, this defines the sub-class entity name'
        externalId:
          type: string
          description: Buyer identifier of the product
        statusChange:
          type: array
          description: status change for the Product
          items:
            $ref: '#/components/schemas/MEFProductStatusChange'
        billingAccount:
          $ref: '#/components/schemas/MEFBillingAccountRef'
        productOrderItem:
          type: array
          description: >-
            The Product Order Item of the associated Product order that
            resulted in the creation of this Product.
          items:
            $ref: '#/components/schemas/MEFProductOrderItemRef'
        productTerm:
          type: array
          description: Term of the Product
          items:
            $ref: '#/components/schemas/MEFItemTerm'
        terminationDate:
          type: string
          format: date-time
          description: >-
            Is the date when the product was terminated. MEF: Termination date
            (commercial) is when the product has been terminated (when the
            disconnect in the product order has been processed).
        productConfiguration:
          $ref: '#/components/schemas/MEFProductConfiguration'
        productRelationship:
          type: array
          description: >-
            A list of references to existing products that are related to the
            Product.
          items:
            $ref: '#/components/schemas/ProductRelationship'
        id:
          type: string
          description: Unique identifier of the product
        href:
          type: string
          description: Reference of the product
        startDate:
          type: string
          format: date-time
          description: >-
            Is the date from which the product starts. MEF: Start date is when
            the product is active for the first time (when the install in the
            product order has been processed).
        productPrice:
          type: array
          description: A list of Prices associated with the Product
          items:
            $ref: '#/components/schemas/ProductPrice'
        status:
          $ref: '#/components/schemas/MEFProductStatusType'
      required:
        - id
        - startDate
        - status
    MEFProductConfiguration:
      type: object
      description: >-
        MEFProductConfiguration is used as an extension point for MEF specific
        product/service payload.  The `@type` attribute is used as a
        discriminator
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: >-
            The name of the type, defined in the JSON schema specified  above,
            for the product that is the subject of the POQ Request. The named
            type must be a subclass of MEFProductConfiguration.
      required:
        - '@type'
    MEFProductOrderItemRef:
      type: object
      description: A reference to a ProductOrder item
      properties:
        productOrderHref:
          type: string
          description: Reference of the related ProductOrder.
        productOrderItemId:
          type: string
          description: Id of an Item within the Product Order
        productOrderId:
          type: string
          description: Unique identifier of a ProductOrder.
      required:
        - productOrderId
        - productOrderItemId
    MEFProductStatusChange:
      type: object
      description: >-
        Holds the reached status, reasons and associated date the Product Order
        status changed, populated by the Seller.
      properties:
        changeReason:
          type: string
          description: The reason why the status changed.
        changeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
        status:
          $ref: '#/components/schemas/MEFProductStatusType'
      required:
        - changeDate
        - status
    MEFProductStatusType:
      type: string
      description: |-
        Possible values for the status of a MEF product

        | name                        | MEF 81 name                 |
        | --------------------------- | --------------------------- |
        | `active`                    | ACTIVE                      |
        | `active.pendingChange`      | ACTIVE_PENDING_CHANGE       |
        | `pendingTerminate`          | ACTIVE_PENDING_TERMINATE    |
        | `cancelled`                 | CANCELLED                   |
        | `pendingActive`             | PENDING                     |
        | `suspended`                 | SUSPENDED                   |
        | `suspendedPendingTerminate` | SUSPENDED_PENDING_TERMINATE |
        | `terminated`                | TERMINATED                  |
      enum:
        - active
        - active.pendingChange
        - cancelled
        - pendingActive
        - pendingTerminate
        - suspended
        - suspendedPendingTerminate
        - terminated
    MEFProduct_Find:
      type: object
      description: >-
        Class used to provide product overview retrieved in GET (by list)
        operation
      properties:
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        relatedSite:
          type: array
          description: Reference to a Site where the PRoduct is provided.
          items:
            $ref: '#/components/schemas/RelatedGeographicSite'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        lastUpdateDate:
          type: string
          format: date-time
          description: Latest date when the product has been updated.
        externalId:
          type: string
          description: >-
            This identifier is optionally provided during the product ordering
            and stored for informative purpose in the seller inventory
        productRelationship:
          type: array
          description: >-
            A list of references to existing products that are related to the
            Product.
          items:
            $ref: '#/components/schemas/ProductRelationship'
        id:
          type: string
          description: Unique identifier of the product
        href:
          type: string
          description: Reference of the product
        billingAccount:
          $ref: '#/components/schemas/MEFBillingAccountRef'
        productOrderItem:
          type: array
          description: >-
            The Product Order Item of the associated Product order that
            resulted in the creation of this Product.
          items:
            $ref: '#/components/schemas/MEFProductOrderItemRef'
        startDate:
          type: string
          format: date-time
          description: The date from which the product starts
        status:
          $ref: '#/components/schemas/MEFProductStatusType'
      required:
        - id
        - status
    MEFSubUnit:
      type: object
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          type: string
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
        subUnitType:
          type: string
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
      required:
        - subUnitNumber
        - subUnitType
    Money:
      type: object
      description: A base / value business entity used to represent money
      properties:
        unit:
          type: string
          description:
            Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: A positive floating point number
      required:
        - unit
        - value
    Price:
      type: object
      description: >-
        Provides all amounts (tax included, duty free, tax rate), used currency
        and percentage to apply for Price Alteration.
      properties:
        taxRate:
          type: number
          format: float
          description:
            'Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax.'
        taxIncludedAmount:
          $ref: '#/components/schemas/Money'
        dutyFreeAmount:
          $ref: '#/components/schemas/Money'
      required:
        - dutyFreeAmount
    ProductOfferingRef:
      type: object
      description: >-
        A reference to a Product Offering offered by the Seller to the Buyer. A
        Product Offering contains the commercial and technical details of a
        Product sold by a particular Seller. A Product Offering defines all of
        the commercial terms and, through association with a particular Product
        Specification, defines all the technical attributes and behaviors of
        the Product. A Product Offering may constrain the allowable set of
        configurable technical attributes and/or behaviors specified in the
        associated Product Specification.
      properties:
        href:
          type: string
          description: >
            Hyperlink to a Product Offering in Sellers catalog. In case Seller
            is not providing a catalog API this field is not used. The catalog
            is provided by the Seller to the Buyer during onboarding.
        id:
          type: string
          description: >-
            id of a Product Offering. It is assigned by the Seller. The Buyer
            and the Seller exchange information about offerings' ids during the
            onboarding process.
      required:
        - id
    ProductPrice:
      type: object
      description: >-
        An amount, usually of money, that represents the actual price paid by a
        Customer for a purchase, a rent or a lease of a Product. The price is
        valid for a defined period of time.
      properties:
        unitOfMeasure:
          type: string
          description:
            'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
        price:
          $ref: '#/components/schemas/Price'
        name:
          type: string
          description: A short descriptive name such as "Subscription price".
        priceType:
          $ref: '#/components/schemas/MEFPriceType'
        description:
          type: string
          description: >-
            A narrative that explains in detail the semantics of this product
            price.
        recurringChargePeriod:
          $ref: '#/components/schemas/MEFChargePeriod'
      required:
        - price
        - priceType
    ProductRelationship:
      type: object
      description: >-
        A relationship to existing Product. The requirements for usage for
        given Product are described in the Product Specification.
      properties:
        relationshipType:
          type: string
          description: >-
            Specifies the type (nature) of the relationship to the related
            Product. The nature of required relationships vary for Products of
            different types. For example, a UNI or ENNI Product may not have
            any relationships, but an Access E-Line may have two mandatory
            relationships (related to the UNI on one end and the ENNI on the
            other). More complex Products such as multipoint IP or Firewall
            Products may have more complex relationships. As a result, the
            allowed and mandatory `relationshipType` values are defined in the
            Product Specification.
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink of the referenced product
      required:
        - id
        - relationshipType
    ProductSpecificationRef:
      type: object
      description: >-
        A reference to a structured set of well-defined technical attributes
        and/or behaviors that are used to construct a Product Offering for sale
        to a market.
      properties:
        href:
          type: string
          description: >
            Hyperlink to a Product Specification in Sellers catalog. In case
            Seller is not providing a catalog API this field is not used. The
            catalog is provided by the Seller to the Buyer during onboarding.
        id:
          type: string
          description: Unique identifier of the product specification
      required:
        - id
    RelatedContactInformation:
      type: object
      description: |
        Contact information of an individual or organization playing a role for
        this Entity. The rule for mapping a represented attribute value to a
        `role` is to use the _lowerCamelCase_ pattern e.g. 
        - Buyer Order Item Contact: `role=buyerOrderItemContact` 
        - Buyer Implementation Contact: `role=buyerImplementationContact` 
        - Buyer Technical Contact: `role=buyerTechnicalContact`
      properties:
        number:
          type: string
          description: Phone number
        emailAddress:
          type: string
          description: Email address
        role:
          type: string
          description: A role the party plays in a given context.
        postalAddress:
          $ref: '#/components/schemas/FieldedAddress'
        organization:
          type: string
          description: The organization or company that the contact belongs to
        name:
          type: string
          description: Name of the contact
        numberExtension:
          type: string
          description: Phone number extension
      required:
        - emailAddress
        - name
        - number
        - role
    RelatedGeographicSite:
      type: object
      description: >-
        A  Geographic Site  and an associated role as installation address,
        delivery address, etc....
      properties:
        role:
          type: string
          description: >-
            Role of the geographic site, such as: [home delivery], [shop
            retrieval]) MEF: The role that the Site plays, e.g. Billing
            Address, UNI Site, or ENNI Site.
        id:
          type: string
          description: Unique identifier of the geographic site
        href:
          type: string
          description: Hyperlink to the referenced geographic site
      required:
        - id
        - role
    TimeUnit:
      type: string
      description: |
        Represents a unit of time.
        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)
      enum:
        - calendarMonths
        - calendarDays
        - calendarHours
        - calendarMinutes
        - businessDays
        - businessHours
        - businessMinutes
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: 'http://mef.net/example/refresh'
          scopes:
            listProduct: Scope for operation listProduct
            retrieveProduct: Scope for operation retrieveProduct
          tokenUrl: 'http://mef.net/example/token'
      type: oauth2
