openapi: 3.0.1
info:
  description: >
    **This file forms part of MEF W141**


    **This API implements Business Requirements described in MEF 134.**


    **This specification represents MEF work in progress and is subject to

    change.**


    Bill is a legal document generated by the Seller to the Buyer relating 

    to charges associated to Products provided by the Seller to the Buyer. . 


    List of supported use cases:

    - Retrieve Invoice List

    - Retrieve Invoice by Identifier 

    - Retrieve Invoice Line Item by Identifier

    - Retrieve Printable Invoice   

    - Register for Invoice Notification


    Copyright 2022 MEF Forum and its contributors


    This file includes content based on the TM Forum Customer Bill Management
    API (TMF678

    v4.0.0) available at https://github.com/tmforum-apis/TMF678_CustomerBill,

    which is licensed by the TM Forum under the Apache License version 2.0.

    Such content has been modified by the MEF Forum and its contributors.
  title: Billing Management
  version: 1.0.0-RC
servers:
  - url: 'https://{serverBase}/mefApi/sonata/customerBillManagement/v1/'
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
tags:
  - name: customerBill
  - name: customerBillItem
  - name: events subscription
paths:
  /customerBill:
    get:
      description: This operation lists or finds CustomerBill entities
      operationId: listCustomerBill
      parameters:
        - description: >-
            An identifier for the Billing Account that is unique within the
            Seller.
          explode: true
          in: query
          name: billingAccount.id
          required: false
          schema:
            type: string
          style: form
        - description: The date the Billing Period started - lower than.
          explode: true
          in: query
          name: billingPeriod.startDateTime.lt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: The date the Billing Period started - greater than.
          explode: true
          in: query
          name: billingPeriod.startDateTime.gt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: The date the Billing Period ended - lower than.
          explode: true
          in: query
          name: billingPeriod.endDateTime.lt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: The date the Billing Period ended - greater than.
          explode: true
          in: query
          name: billingPeriod.endDateTime.gt
          required: false
          schema:
            type: string
            format: date-time
          style: form
        - description: >-
            The category of Bill. One of the following:  - normal  - duplicate
            - trial
          explode: true
          in: query
          name: category
          required: false
          schema:
            enum:
              - normal
              - duplicate
              - trial
          style: form
        - description: The state of the Bill Item.
          explode: true
          in: query
          name: state
          required: false
          schema:
            enum:
              - generated
              - paymentDue
              - settled
          style: form
        - description:
            Requested index for start of resources to be provided in response.
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description:
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerBill_Find'
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >
                The total number of matching records. E.g. if there are 50
                matching records in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of records included in the response
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listCustomerBill
      summary: List or find CustomerBill objects
      tags:
        - customerBill
  '/customerBill/{id}':
    get:
      description: This operation retrieves a CustomerBill entity.
      operationId: retrieveCustomerBill
      parameters:
        - description: Identifier of the CustomerBill
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerBill'
          description: Success
          headers:
            X-Result-Count:
              description: Actual number of items returned in the response body
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Total number of items matching criteria
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveCustomerBill
      summary: Retrieves a CustomerBill by ID
      tags:
        - customerBill
  '/customerBillItem/{id}':
    get:
      description: This operation retrieves a CustomerBillItem entity.
      operationId: retrieveCustomerBillItem
      parameters:
        - description: Identifier of the CustomerBillItem
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerBillItem'
          description: Success
          headers:
            X-Result-Count:
              description: Actual number of items returned in the response body
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Total number of items matching criteria
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveCustomerBillItem
      summary: Retrieves a CustomerBillItem by ID
      tags:
        - customerBillItem
  /hub:
    post:
      description: The Buyer requests to subscribe to Bill Notifications.
      operationId: registerListener
      parameters:
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          explode: true
          in: query
          name: buyerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity represents more than one Seller.
          explode: true
          in: query
          name: sellerId
          required: false
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        description:
          Data containing the callback endpoint to deliver the information
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description:
            'Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - registerListener
      summary: Allows the Buyer to register to Bill state change notifications
      tags:
        - events subscription
      x-codegen-request-body-name: data
  '/hub/{id}':
    delete:
      description: The Buyer requests to unsubscribe from Bill Notifications
      operationId: unregisterListener
      parameters:
        - description: The id of the EventSubscription
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.
          explode: true
          in: query
          name: buyerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity represents more than one Seller.
          explode: true
          in: query
          name: sellerId
          required: false
          schema:
            type: string
          style: form
      responses:
        '204':
          description:
            'Deleted (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - unregisterListener
      summary: Unregister a listener
      tags:
        - events subscription
    get:
      description: This operation retrieves a hub entity.
      operationId: retrieveHub
      parameters:
        - description: Identifier of the Hub
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer. Reference: MEF 57.2 (Sn 9.18)
          explode: true
          in: query
          name: buyerId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller. Reference: MEF 57.2 (Sn
            9.18)
          explode: true
          in: query
          name: sellerId
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Success
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveHub
      summary: Retrieves a Hub by ID
      tags:
        - events subscription
components:
  schemas:
    AppliedPayment:
      type: object
      description:
        A list of details of a payment that has been received from the Buyer.
      properties:
        appliedAmount:
          $ref: '#/components/schemas/Money'
        payment:
          $ref: '#/components/schemas/PaymentItem'
    AttachmentURL:
      type: object
      description: The AttachmentURL is used to get the Bill document.
      properties:
        url:
          type: string
          description:
            'Uniform Resource Locator, is a web page address (a subset of URI)'
    BillingAccountRef:
      type: object
      description: >-
        An identifier for the Billing Account that is unique within the Seller.
        and is assigned by the Seller
      properties:
        id:
          type: string
          description: Unique-Identifier for this <123>
      required:
        - id
    CustomerBill:
      type: object
      description: >-
        A legal document generated by the Seller to the Buyer relating to
        charges associated to Products provided by the Seller to the Buyer.
      properties:
        id:
          type: string
          description: An identifier assigned to the Bill by the Seller.
        href:
          type: string
          description: Bill's unique reference.
        amountDue:
          $ref: '#/components/schemas/Money'
        appliedPayment:
          type: array
          description: >-
            A list of details of a payment that has been received from the
            Buyer.
          items:
            $ref: '#/components/schemas/AppliedPayment'
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        billCycle:
          type: string
          description: The identifier of the Billing Cycle iteration.
        billDate:
          type: string
          format: date-time
          description: Date the Bill was issued.
        billDocument:
          $ref: '#/components/schemas/AttachmentURL'
        billNo:
          type: string
          description: A number assigned to the Bill by the Seller.
        billingPeriod:
          $ref: '#/components/schemas/TimePeriod'
        category:
          $ref: '#/components/schemas/CustomerBillCategory'
        credits:
          $ref: '#/components/schemas/Money'
        customerBillItem:
          type: array
          description: A reference to the Bill Items for this Bill.
          items:
            $ref: '#/components/schemas/CustomerBillItemRef'
        discounts:
          $ref: '#/components/schemas/Money'
        fees:
          $ref: '#/components/schemas/Money'
        financialAccount:
          $ref: '#/components/schemas/FinancialAccountRef'
        lastUpdate:
          type: string
          format: date-time
          description: The date when the Bill was last modified.
        paymentDueDate:
          type: string
          format: date-time
          description: >-
            The date by which payment of the Amount Due must be received by the
            Seller.
        runType:
          $ref: '#/components/schemas/CustomerBillRunType'
        relatedContactInformation:
          type: array
          description: A party related to this Bill.
          items:
            $ref: '#/components/schemas/RelatedContactInformation'
        remainingAmount:
          $ref: '#/components/schemas/Money'
        state:
          $ref: '#/components/schemas/CustomerBillStateType'
        taxExcludedAmount:
          $ref: '#/components/schemas/Money'
        taxIncludedAmount:
          $ref: '#/components/schemas/Money'
        taxItem:
          type: array
          description: >-
            A tax item is created for each tax rate and tax type used in the
            bill.
          items:
            $ref: '#/components/schemas/TaxItem'
      required:
        - amountDue
        - appliedPayment
        - billCycle
        - billDate
        - billDocument
        - billNo
        - billingAccount
        - billingPeriod
        - category
        - credits
        - customerBillItem
        - discounts
        - fees
        - financialAccount
        - id
        - lastUpdate
        - paymentDueDate
        - relatedContactInformation
        - remainingAmount
        - runType
        - state
        - taxExcludedAmount
        - taxIncludedAmount
        - taxItem
    CustomerBill_Find:
      type: object
      description: >-
        A legal document generated by the Seller to the Buyer relating to
        charges associated to Products provided by the Seller to the Buyer.
      properties:
        id:
          type: string
          description: An identifier assigned to the Bill by the Seller.
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        billNo:
          type: string
          description: A number assigned to the Bill by the Seller.
        billingPeriod:
          $ref: '#/components/schemas/TimePeriod'
        category:
          $ref: '#/components/schemas/CustomerBillCategory'
        state:
          $ref: '#/components/schemas/CustomerBillStateType'
      required:
        - billNo
        - category
        - id
        - state
    CustomerBillStateType:
      type: string
      description: >
        The state of the Bill.


        | state                     | MEF 134 name               |
        Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
        |

        | -----------------------   | ----------------------     |
        ------------------------------------------------------------------------------------------------------------------------------|

        | `generated`               | GENERATED                  | A Bill that
        has been created based on the completion of an Billing Cycle and an
        Bill Notification has been sent to the Buyer. |

        | `paymentDue`              | PAYMENT_DUE                | The Seller
        has completed their dispute process and they are expecting payment from
        the Buyer                                  |

        | `settled`                 | SETTLED                    | A Bill for
        which all payment due has been received or for which payment is
        due.                                               |
      enum:
        - generated
        - paymentDue
        - settled
    CustomerBillItem:
      type: object
      description: >-
        One or more rows in a Bill that represent charges associated with a
        Product instance.
      properties:
        id:
          type: string
          description: The CustomerBillItem identifier.
        href:
          type: string
          description: Reference of the CustomerBillItem.
        appliedTax:
          type: array
          description: Taxes associated with the Bill Item.
          items:
            $ref: '#/components/schemas/CustomerBillItemTax'
        appliedFee:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBillItemFee'
        description:
          type: string
          description: A text description of the charge.
        periodCoverage:
          $ref: '#/components/schemas/TimePeriod'
        product:
          $ref: '#/components/schemas/ProductRef'
        productOrderItem:
          $ref: '#/components/schemas/MEFProductOrderItemRef'
        productName:
          type: string
          description:
            The name of the Product that is the subject of the Bill Item.
        state:
          $ref: '#/components/schemas/CustomerBillItemStateType'
        taxExcludedAmount:
          $ref: '#/components/schemas/Money'
        type:
          $ref: '#/components/schemas/MEFPriceType'
        unit:
          type: string
          description: >-
            The rate per unit for the Bill determined during or after the
            Billing Process.
        unitRate:
          $ref: '#/components/schemas/Money'
        unitQuantity:
          description: The number of units.
      required:
        - appliedFee
        - appliedTax
        - description
        - id
        - periodCoverage
        - product
        - productName
        - productOrderItem
        - state
        - taxExcludedAmount
        - type
        - unit
        - unitQuantity
        - unitRate
    CustomerBillItemFee:
      type: object
      description: Fees associated with the Bill Item.
      properties:
        category:
          $ref: '#/components/schemas/CustomerBillItemFeeCategory'
        rate:
          type: number
          format: float
          description: The rate at which the Fee is calculated.
        description:
          type: string
          description: A description of the type of Fee.
        amount:
          $ref: '#/components/schemas/Money'
    CustomerBillCategory:
      type: string
      description:
        'The type of Bill. One of the following: - normal - duplicate - trial.'
      enum:
        - normal
        - duplicate
        - trial
    CustomerBillRunType:
      type: string
      description: The Billing cycle as set by the Seller.
      enum:
        - onCycle
        - offCycle
    CustomerBillItemFeeCategory:
      type: string
      description: >-
        The category of the Fee. One of the following:  - Recurring  -
        Non-recurring  - Other
      enum:
        - recurring
        - nonRecurring
        - other
    CustomerBillItemTax:
      type: object
      description: >-
        The applied billing tax rate represents the taxes applied billing rate
        it refers to. It is calculated during the billing process.
      properties:
        category:
          $ref: '#/components/schemas/CustomerBillItemTaxCategory'
        rate:
          type: number
          format: float
          description: The rate at which the Tax is calculated.
        description:
          type: string
          description: A description of the type of Tax.
        amount:
          $ref: '#/components/schemas/Money'
    CustomerBillItemTaxCategory:
      type: string
      description: |-
        The category of the Tax. One of the following:
          - country
          - state
          - county
          - city
          - other
      enum:
        - country
        - state
        - county
        - city
        - other
    CustomerBillItemRef:
      type: object
      description: |
        A reference to a Customer Bill resource.
      properties:
        href:
          type: string
          description: |
            Hyperlink to the referenced Customer Bill.
        id:
          type: string
          description: Identifier of the referenced Customer Bill.
      required:
        - id
    CustomerBillItemStateType:
      type: string
      description: >
        The state of the Bill Item.


        | state                      | MEF 134 name               |
        Description                                                                                                                                                                  
        |

        | -------------------------- | -------------------------- |
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        |

        | `credit`                   | CREDIT                     | The Seller
        has agreed with the Buyer that disputed charges are in error and has
        provided a credit for the amount in
        error.                                                    |

        | `disputeBeingInvestigated` | DISPUTE_BEING_INVESTIGATED | A Buyer has
        disputed charges included in a Bill and those charges are in the
        Sellers Dispute Process. Disputes cannot exit the dispute process until
        the Dispute is resolved. |

        | `generated`                | GENERATED                  | A Bill that
        has been created based on the completion of a Billing Cycle and a Bill
        Notification has been sent to the
        Buyer.                                                   |

        | `paymentDue`               | PAYMENT_DUE                | The Seller
        has completed their dispute process and they are expecting payment from
        the
        Buyer.                                                                                
        |

        | `settled`                  | SETTLED                    | A Bill for
        which all payment due has been received or for which payment is
        due.                                                                                              
        |

        | `withdrawn`                | WITHDRAWN                  | A Seller
        has agreed with the Buyer that disputed charges are in error and has
        withdrawn the
        Bill.                                                                           
        |
      enum:
        - credit
        - disputeBeingInvestigated
        - generated
        - paymentDue
        - settled
        - withDrawn
    Error:
      type: object
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
      properties:
        code:
          type: string
          description:
            'Application relevant detail, defined in the API or a common list.'
        reason:
          type: string
          description: >-
            Explanation of the reason for the error which can be shown to a
            client user.
        message:
          type: string
          description: >-
            More details and corrective actions related to the error which can
            be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          format: uri
          description: URI of documentation describing the error.
      required:
        - code
        - reason
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
      description:
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error400Code:
      type: string
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
      description:
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error404:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                The following error code:

                - notFound: A current representation of the target resource not
                found
              enum:
                - notFound
          required:
            - code
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                The following error code:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
          required:
            - code
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    EventSubscription:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use
        to deliver notification information
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      required:
        - callback
        - id
    EventSubscriptionInput:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use
        to deliver notification information
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      required:
        - callback
    FieldedAddress:
      type: object
      description: >-
        A type of Address that has a discrete field and value for each type of
        boundary or identifier down to the lowest level of detail. For example
        "street number" is one field, "street name" is another field, etc.
        Reference: MEF 79 (Sn 8.9.2)
      properties:
        city:
          type: string
          description: The city that the address is in
        country:
          type: string
          description: Country that the address is in
        geographicSubAddress:
          $ref: '#/components/schemas/GeographicSubAddress'
        locality:
          type: string
          description: The locality that the address is in
        postcode:
          type: string
          description: >-
            Descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also known as zip code)
        postcodeExtension:
          type: string
          description: >-
            An extension of a postal code. E.g. the part following the dash in
            a US urban property address
        stateOrProvince:
          type: string
          description: The State or Province that the address is in
        streetName:
          type: string
          description: Name of the street or other street type
        streetNr:
          type: string
          description: >-
            Number identifying a specific property on a public street. It may
            be combined with streetNrLast for ranged addresses. MEF 79 defines
            it as required however as in certain countries it is not used we
            make it optional in API.
        streetNrLast:
          type: string
          description:
            Last number in a range of street numbers allocated to a property
        streetNrLastSuffix:
          type: string
          description: Last street number suffix for a ranged address
        streetNrSuffix:
          type: string
          description: The first street number suffix
        streetSuffix:
          type: string
          description: A modifier denoting a relative direction
        streetType:
          type: string
          description: >-
            The type of street (e.g., alley, avenue, boulevard, brae, crescent,
            drive, highway, lane, terrace, parade, place, tarn, way, wharf)
      required:
        - city
        - country
        - streetName
    FinancialAccountRef:
      type: object
      description: A Financial Account within the Seller.
      properties:
        id:
          type: string
          description: >-
            An identifier for the Financial Account that is unique within the
            Seller and is assigned by the Seller.
        href:
          type: string
          description: Unique reference of the account
        name:
          type: string
          description: The name of the Financial Account.
        type:
          type: string
          description: The type of the Financial Account.
      required:
        - id
    GeographicSubAddress:
      type: object
      description:
        'Additional fields used to specify an address, as detailed as possible.'
      properties:
        buildingName:
          type: string
          description: >
            Allows for identification of places that require building name  as
            part of addressing information
        id:
          type: string
          description: Unique Identifier of the subAddress
        levelNumber:
          type: string
          description:
            'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT
            2'
        levelType:
          type: string
          description: Describes level types within a building
        privateStreetName:
          type: string
          description: >-
            "Private streets internal to a property (e.g. a university) may
            have internal names that are not recorded by the land title office
        privateStreetNumber:
          type: string
          description: Private streets numbers internal to a private street
        subUnit:
          type: array
          description: >-
            Representation of a MEFSubUnit It is used for describing subunit
            within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: '#/components/schemas/MEFSubUnit'
    MEFPriceType:
      type: string
      description: The type of charge related to the Bill Item.
      enum:
        - recurring
        - nonRecurring
        - usageBased
    MEFProductOrderItemRef:
      type: object
      description: It's a ProductOrder item
      properties:
        productOrderHref:
          type: string
          description: Reference of the related ProductOrder.
        productOrderId:
          type: string
          description: Unique identifier of a ProductOrder.
        productOrderItemId:
          type: string
          description: Id of an Item within the Product Order
      required:
        - productOrderId
        - productOrderItemId
    MEFSubUnit:
      type: object
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          type: string
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
        subUnitType:
          type: string
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
      required:
        - subUnitNumber
        - subUnitType
    Money:
      type: object
      description: A base value business entity used to represent money
      properties:
        unit:
          type: string
          description:
            Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: A positive floating point number
      required:
        - unit
        - value
    PaymentItem:
      type: object
      description: A payment that has been received.
      properties:
        id:
          type: string
          description: >-
            An identifier for the payment that is unique within the Buyer
            Billing Account and is assigned by the Seller.
        amount:
          $ref: '#/components/schemas/Money'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        paymentDate:
          type: string
          format: date-time
          description: The Date the payment was received.
      required:
        - id
    PaymentMethod:
      type: string
      description: The specific means of payment.
      enum:
        - check
        - wireTransfer
        - electronic
        - cash
        - other
    ProductRef:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
      required:
        - id
    RelatedContactInformation:
      type: object
      description: A party related to this Bill.
      properties:
        emailAddress:
          type: string
          description: Email address
        name:
          type: string
          description: Name of the contact
        number:
          type: string
          description: Phone number
        numberExtension:
          type: string
          description: Phone number extension
        organization:
          type: string
          description: The organization or company that the contact belongs to
        postalAddress:
          $ref: '#/components/schemas/FieldedAddress'
        role:
          type: string
          description: A role the party plays in a given context.
      required:
        - emailAddress
        - name
        - number
        - role
    TaxItem:
      type: object
      description:
        A tax item is created for each tax rate and tax type used in the bill.
      properties:
        taxCategory:
          type: string
          description: The Tax Category for this tax item.
        taxRate:
          type: number
          format: float
          description: The Tax Rate for this Tax Item.
        taxAmount:
          $ref: '#/components/schemas/Money'
    TimePeriod:
      type: object
      description: >-
        A period of time, either as a deadline (endDateTime only) a
        startDateTime only, or both
      properties:
        endDateTime:
          type: string
          format: date-time
          description: The date the Billing Period ended.
        startDateTime:
          type: string
          format: date-time
          description: The date the Billing Period started.
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: 'http://mef.net/example/refresh'
          scopes:
            listCustomerBill: Scope for operation listCustomerBill
            retrieveCustomerBill: Scope for operation retrieveCustomerBill
            retrieveCustomerBillItem:
              Scope for operation retrieveCustomerBillItem
            registerListener: Scope for operation registerListener
            retrieveHub: Scope for operation retrieveHub
            unregisterListener: Scope for operation unregisterListener
          tokenUrl: 'http://mef.net/example/token'
      type: oauth2
