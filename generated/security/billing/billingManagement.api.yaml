openapi: 3.0.1
info:
  description:
    "**This file forms part of MEF 141**\n\n**This API implements Business\
    \ Requirements described in MEF 134.**\n\nBill is a legal document generated by\
    \ the Seller to the Buyer relating \nto charges associated to Products provided\
    \ by the Seller to the Buyer. \n\nList of supported use cases:\n- Retrieve Invoice\
    \ List\n- Retrieve Invoice by Identifier \n- Retrieve Invoice Line Item by Identifier\n\
    - Retrieve Printable Invoice   \n- Register for Invoice Notification\n\nCopyright\
    \ 2023 MEF Forum and its contributors\n\nThis file includes content based on the\
    \ TM Forum Customer Bill Management\nAPI (TMF678 v4.0.0) available at https://github.com/tmforum-apis/TMF678_CustomerBill,\n\
    which is licensed by the TM Forum under the Apache License version 2.0.\nSuch\
    \ content has been modified by the MEF Forum and its contributors.\n"
  title: Billing Management
  version: 2.0.0
servers:
  - url: "https://{serverBase}/mefApi/sonata/customerBillManagement/v2/"
    variables:
      serverBase:
        default: mef.net
        description: The base of Seller's URL.
security:
  - oauth2MEFLSOAPI:
      - default
tags:
  - name: Customer Bill
  - name: Events Subscription
paths:
  /customerBill:
    get:
      description: This operation lists or finds CustomerBill entities
      operationId: listCustomerBill
      parameters:
        - description:
            An identifier for the Billing Account that is unique within the
            Seller.
          in: query
          name: billingAccount.id
          required: false
          schema:
            type: string
        - description: The date the Billing Period started - lower than.
          in: query
          name: billingPeriod.startDateTime.lt
          required: false
          schema:
            type: string
            format: date-time
        - description: The date the Billing Period started - greater than.
          in: query
          name: billingPeriod.startDateTime.gt
          required: false
          schema:
            type: string
            format: date-time
        - description: The date the Billing Period ended - lower than.
          in: query
          name: billingPeriod.endDateTime.lt
          required: false
          schema:
            type: string
            format: date-time
        - description: The date the Billing Period ended - greater than.
          in: query
          name: billingPeriod.endDateTime.gt
          required: false
          schema:
            type: string
            format: date-time
        - description:
            "The category of Bill. One of the following:  - normal  - duplicate\
            \ - trial"
          in: query
          name: category
          required: false
          schema:
            type: string
            enum:
              - normal
              - duplicate
              - trial
        - description: The state of the Bill Item.
          in: query
          name: state
          required: false
          schema:
            type: string
            enum:
              - generated
              - paymentDue
              - settled
        - description: Requested index for start of resources to be provided in response.
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: Requested number of resources to be provided in response.
          in: query
          name: limit
          required: false
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerBill_Find"
          description: Success
          headers:
            X-Pagination-Throttled:
              description: |
                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched
              schema:
                type: boolean
            X-Total-Count:
              description: |
                The total number of matching records. E.g. if there are 50 matching records in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.
              schema:
                type: integer
            X-Result-Count:
              description: The number of records included in the response
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - listCustomerBill
      summary: List or find CustomerBill objects
      tags:
        - Customer Bill
  /customerBill/{id}:
    get:
      description: This operation retrieves a CustomerBill entity.
      operationId: retrieveCustomerBill
      parameters:
        - description: Identifier of the CustomerBill
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerBill"
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveCustomerBill
      summary: Retrieves a CustomerBill by ID
      tags:
        - Customer Bill
  /customerBillItem/{id}:
    get:
      description: This operation retrieves a CustomerBillItem entity.
      operationId: retrieveCustomerBillItem
      parameters:
        - description: Identifier of the CustomerBillItem
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerBillItem"
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal Server Error
      security:
        - oauth2MEFLSOAPI:
            - retrieveCustomerBillItem
      summary: Retrieves a CustomerBillItem by ID
      tags:
        - Customer Bill
  /hub:
    post:
      description: The Buyer requests to subscribe to Bill Notifications.
      operationId: registerListener
      parameters:
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/EventSubscriptionInput"
        description: Data containing the callback endpoint to deliver the information
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EventSubscription"
          description: Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      security:
        - oauth2MEFLSOAPI:
            - registerListener
      summary: Allows the Buyer to register to Bill state change notifications
      tags:
        - Events Subscription
  /hub/{id}:
    delete:
      description: The Buyer requests to unsubscribe from Bill Notifications
      operationId: unregisterListener
      parameters:
        - description: The id of the EventSubscription
          in: path
          name: id
          required: true
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            a Buyer. MUST be specified in the request only when the requester represents
            more than one Buyer.
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity represents
            more than one Seller.
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "204":
          description: Deleted (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      security:
        - oauth2MEFLSOAPI:
            - unregisterListener
      summary: Unregister a listener
      tags:
        - Events Subscription
    get:
      description: This operation retrieves a hub entity.
      operationId: retrieveHub
      parameters:
        - description: Identifier of the Hub
          in: path
          name: id
          required: true
          schema:
            type: string
        - description:
            "The unique identifier of the organization that is acting as\
            \ the a Buyer. MUST be specified in the request only when the requester\
            \ represents more than one Buyer. Reference: MEF 57.2 (Sn 9.18)"
          in: query
          name: buyerId
          required: false
          schema:
            type: string
        - description:
            "The unique identifier of the organization that is acting as\
            \ the Seller. MUST be specified in the request only when responding entity\
            \  represents more than one Seller. Reference: MEF 57.2 (Sn 9.18)"
          in: query
          name: sellerId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/EventSubscription"
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error401"
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error403"
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error404"
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Error501"
          description: Method not implemented.
      security:
        - oauth2MEFLSOAPI:
            - retrieveHub
      summary: Retrieves a Hub by ID
      tags:
        - Events Subscription
components:
  schemas:
    AppliedPayment:
      type: object
      description:
        A list of details of a payment that has been received from the
        Buyer.
      properties:
        appliedAmount:
          $ref: "#/components/schemas/Money"
        payment:
          $ref: "#/components/schemas/PaymentItem"
    AttachmentURL:
      type: object
      description: The URL pointing to an Attachment for download.
      properties:
        url:
          type: string
          description: The URL pointing to an Attachment for download.
    BillingAccountRef:
      type: object
      description:
        An identifier for the Billing Account that is unique within the
        Seller
      properties:
        id:
          type: string
          description: Unique-Identifier
      required:
        - id
    CustomerBill:
      type: object
      description:
        A legal document generated by the Seller to the Buyer relating
        to charges associated to Products provided by the Seller to the Buyer.
      properties:
        id:
          type: string
          description: An identifier assigned to the Bill by the Seller.
        href:
          type: string
          description: Bill's unique reference.
        amountDue:
          $ref: "#/components/schemas/Money"
        appliedPayment:
          type: array
          description:
            A list of details of a payment that has been received from
            the Buyer.
          items:
            $ref: "#/components/schemas/AppliedPayment"
        billingAccount:
          $ref: "#/components/schemas/BillingAccountRef"
        billCycle:
          type: string
          description: The identifier of the Billing Cycle iteration.
        billDate:
          type: string
          format: date-time
          description: Date the Bill was issued.
        billDocument:
          $ref: "#/components/schemas/AttachmentURL"
        billNo:
          type: string
          description: A number assigned to the Bill by the Seller.
        billingPeriod:
          $ref: "#/components/schemas/TimePeriod"
        category:
          $ref: "#/components/schemas/CustomerBillCategory"
        credits:
          $ref: "#/components/schemas/Money"
        customerBillItem:
          type: array
          description: A reference to the Bill Items for this Bill.
          items:
            $ref: "#/components/schemas/CustomerBillItemRef"
        discounts:
          $ref: "#/components/schemas/Money"
        fees:
          $ref: "#/components/schemas/Money"
        financialAccount:
          $ref: "#/components/schemas/FinancialAccountRef"
        lastUpdate:
          type: string
          format: date-time
          description: The date when the Bill was last modified.
        paymentDueDate:
          type: string
          format: date-time
          description:
            The date by which payment of the Amount Due must be received
            by the Seller.
        runType:
          $ref: "#/components/schemas/CustomerBillRunType"
        relatedContactInformation:
          type: array
          description: A party related to this Bill.
          items:
            $ref: "#/components/schemas/RelatedContactInformation"
        remainingAmount:
          $ref: "#/components/schemas/Money"
        state:
          $ref: "#/components/schemas/CustomerBillStateType"
        taxExcludedAmount:
          $ref: "#/components/schemas/Money"
        taxIncludedAmount:
          $ref: "#/components/schemas/Money"
        taxItem:
          type: array
          description:
            A tax item is created for each tax rate and tax type used in
            the bill.
          items:
            $ref: "#/components/schemas/TaxItem"
      required:
        - amountDue
        - appliedPayment
        - billCycle
        - billDate
        - billDocument
        - billNo
        - billingAccount
        - billingPeriod
        - category
        - credits
        - customerBillItem
        - discounts
        - fees
        - financialAccount
        - id
        - lastUpdate
        - paymentDueDate
        - relatedContactInformation
        - remainingAmount
        - runType
        - state
        - taxExcludedAmount
        - taxIncludedAmount
        - taxItem
    CustomerBillCategory:
      type: string
      description:
        "The type of Bill. \n\n| Value       | MEF 134   |Description \
        \                                                                        \
        \                                                                        \
        \                   |\n| ----------- | --------- |------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
        \ |\n| `normal`    | NORMAL    |An Bill for the Billing Cycle            \
        \                                                                        \
        \                                                              |\n| `duplicate`\
        \ | DUPLICATE |A copy of an Bill that has been provided                  \
        \                                                                        \
        \                                             |\n| `trial`     | TRIAL   \
        \  |An Bill that is sent by the Seller to the Buyer for test Billing purposes\
        \ to assist in assuring that their Billing implementations are compatible.\
        \ The Trial Bill is not paid. |\n"
      enum:
        - normal
        - duplicate
        - trial
    CustomerBillItem:
      type: object
      description:
        One or more rows in a Bill that represent charges associated with
        a Product instance.
      properties:
        id:
          type: string
          description: The CustomerBillItem identifier.
        href:
          type: string
          description: Reference of the CustomerBillItem.
        appliedTax:
          type: array
          description: Taxes associated with the Bill Item.
          items:
            $ref: "#/components/schemas/CustomerBillItemTax"
        appliedFee:
          type: array
          items:
            $ref: "#/components/schemas/CustomerBillItemFee"
        customerBillItemType:
          $ref: "#/components/schemas/MEFPriceType"
        description:
          type: string
          description: A text description of the charge.
        periodCoverage:
          $ref: "#/components/schemas/TimePeriod"
        product:
          $ref: "#/components/schemas/ProductRef"
        productOrderItem:
          $ref: "#/components/schemas/MEFProductOrderItemRef"
        productName:
          type: string
          description: The name of the Product that is the subject of the Bill Item.
        state:
          $ref: "#/components/schemas/CustomerBillItemStateType"
        taxExcludedAmount:
          $ref: "#/components/schemas/Money"
        unit:
          type: string
          description:
            The rate per unit for the Bill determined during or after the
            Billing Process.
        unitRate:
          $ref: "#/components/schemas/Money"
        unitQuantity:
          type: number
          description: The number of units.
      required:
        - appliedFee
        - appliedTax
        - customerBillItemType
        - description
        - id
        - periodCoverage
        - product
        - productName
        - productOrderItem
        - state
        - taxExcludedAmount
        - unit
        - unitQuantity
        - unitRate
    CustomerBillItemFee:
      type: object
      description: Fees associated with the Bill Item.
      properties:
        category:
          $ref: "#/components/schemas/CustomerBillItemFeeCategory"
        description:
          type: string
          description: A description of the type of Fee.
        rate:
          type: number
          format: float
          description: The rate at which the Fee is calculated.
        amount:
          $ref: "#/components/schemas/Money"
    CustomerBillItemFeeCategory:
      type: string
      description: |
        The category of the Fee. One of the following:
        - recurring
        - nonRecurring
        - other
      enum:
        - recurring
        - nonRecurring
        - other
    CustomerBillItemRef:
      type: object
      description: |
        A reference to a Customer Bill resource.
      properties:
        href:
          type: string
          description: |
            Hyperlink to the referenced Customer Bill.
        id:
          type: string
          description: Identifier of the referenced Customer Bill.
      required:
        - id
    CustomerBillItemStateType:
      type: string
      description: |
        The state of the Bill Item.

        | state                      | MEF 134 name               | Description                                                                                                                                                                   |
        | -------------------------- | -------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `credit`                   | CREDIT                     | The Seller has agreed with the Buyer that disputed charges are in error and has provided a credit for the amount in error.                                                    |
        | `disputeBeingInvestigated` | DISPUTE_BEING_INVESTIGATED | A Buyer has disputed charges included in a Bill and those charges are in the Sellers Dispute Process. Disputes cannot exit the dispute process until the Dispute is resolved. |
        | `generated`                | GENERATED                  | A Bill that has been created based on the completion of a Billing Cycle and a Bill Notification has been sent to the Buyer.                                                   |
        | `paymentDue`               | PAYMENT_DUE                | The Seller has completed their dispute process and they are expecting payment from the Buyer.                                                                                 |
        | `settled`                  | SETTLED                    | A Bill for which all payment due has been received or for which payment is due.                                                                                               |
        | `withdrawn`                | WITHDRAWN                  | A Seller has agreed with the Buyer that disputed charges are in error and has withdrawn the Bill.                                                                            |
      enum:
        - credit
        - disputeBeingInvestigated
        - generated
        - paymentDue
        - settled
        - withDrawn
    CustomerBillItemTax:
      type: object
      description:
        The applied billing tax rate represents the taxes applied billing
        rate it refers to. It is calculated during the billing process.
      properties:
        category:
          $ref: "#/components/schemas/CustomerBillItemTaxCategory"
        description:
          type: string
          description: A description of the type of Tax.
        rate:
          type: number
          format: float
          description: The rate at which the Tax is calculated.
        amount:
          $ref: "#/components/schemas/Money"
    CustomerBillItemTaxCategory:
      type: string
      description: |-
        The category of the Tax. One of the following:
          - country
          - state
          - county
          - city
          - other
      enum:
        - country
        - state
        - county
        - city
        - other
    CustomerBillRunType:
      type: string
      description:
        "The Billing cycle as set by the Seller.\n\n| Value      | MEF\
        \ 134   | Description                                                    \
        \                                              |\n| ---------- | ---------\
        \ | ------------------------------------------------------------------------------------------------------------\
        \ |\n| `onCycle`  | On_Cycle  | Bill created as a result of the normal Invoicing\
        \ Cycle                                                       | \n| `offCycle`\
        \ | Off_Cycle | Bill created outside the normal Invoicing Cycle.  This may\
        \ be based on a Buyer request or for other reasons. |\n"
      enum:
        - onCycle
        - offCycle
    CustomerBillStateType:
      type: string
      description: |
        The state of the Bill.

        | state                     | MEF 134 name               | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |
        | -----------------------   | ----------------------     | ------------------------------------------------------------------------------------------------------------------------------|
        | `generated`               | GENERATED                  | A Bill that has been created based on the completion of an Billing Cycle and an Bill Notification has been sent to the Buyer. |
        | `paymentDue`              | PAYMENT_DUE                | The Seller has completed their dispute process and they are expecting payment from the Buyer                                  |
        | `settled`                 | SETTLED                    | A Bill for which all payment due has been received or for which payment is due.                                               |                                            |
      enum:
        - generated
        - paymentDue
        - settled
    CustomerBill_Find:
      type: object
      description:
        A legal document generated by the Seller to the Buyer relating
        to charges associated to Products provided by the Seller to the Buyer.
      properties:
        id:
          type: string
          description: An identifier assigned to the Bill by the Seller.
        billingAccount:
          $ref: "#/components/schemas/BillingAccountRef"
        billNo:
          type: string
          description: A number assigned to the Bill by the Seller.
        billingPeriod:
          $ref: "#/components/schemas/TimePeriod"
        category:
          $ref: "#/components/schemas/CustomerBillCategory"
        state:
          $ref: "#/components/schemas/CustomerBillStateType"
      required:
        - billNo
        - category
        - id
        - state
    Error:
      type: object
      description: |
        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        message:
          type: string
          description:
            Text that provides mode details and corrective actions related
            to the error. This can be shown to a client user.
        reason:
          type: string
          description:
            Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
        referenceError:
          type: string
          format: uri
          description: URL pointing to documentation describing the error
      required:
        - reason
    Error400:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error400Code"
          required:
            - code
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error401:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error401Code"
          required:
            - code
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Error403Code"
          required:
            - code
      description:
        Forbidden. This code indicates that the server understood the request
        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error404:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notFound: A current representation of the target resource not found
              enum:
                - notFound
          required:
            - code
      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error500:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
              enum:
                - internalError
          required:
            - code
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Error501:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notImplemented: Method not supported by the server
              enum:
                - notImplemented
          required:
            - code
      description:
        Not Implemented. Used in case Seller is not supporting an optional
        operation (https://tools.ietf.org/html/rfc7231#section-6.6.2)
    EventSubscription:
      type: object
      description:
        Sets the communication endpoint address the service instance must
        use to deliver notification information
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      required:
        - callback
        - id
    EventSubscriptionInput:
      type: object
      description:
        Sets the communication endpoint address the service instance must
        use to deliver notification information
      properties:
        callback:
          type: string
          description:
            "This callback value must be set to *host* property from Buyer\
            \ Notification API (billingNotification.api.yaml). This property is appended\
            \ with the base path and notification resource path specified in that\
            \ API to construct an URL to which notification is sent. E.g. for \"callback\"\
            : \"http://buyer.com/listenerEndpoint\", the state change event notification\
            \ will be sent to: `http://buyer.com/listenerEndpoint/mefApi/sonata/customerBillManagement/v2/listener/troubleTicketStatusChangeEvent`"
        query:
          type: string
          description:
            "This attribute is used to define to which type of events to\
            \ register to. Example: \"query\":\"eventType = customerBillCreateEvent\"\
            . To subscribe for more than one event type, put the values separated\
            \ by comma: `eventType=customerBillCreateEvent,customerBillStateChangeEvent`.\
            \ The possible values are enumerated by the 'CustomerBillEventType' in\
            \ billingNotification.api.yaml. An empty query is treated as specifying\
            \ no filters - ending in  subscription for all event types."
      required:
        - callback
    FieldedAddress:
      type: object
      description:
        "A type of Address that has a discrete field and value for each\
        \ type of boundary or identifier down to the lowest level of detail. For example\
        \ \"street number\" is one field, \"street name\" is another field, etc. Reference:\
        \ MEF 79 (Sn 8.9.2)"
      properties:
        city:
          type: string
          description: The city that the address is in
        country:
          type: string
          description: Country that the address is in
        geographicSubAddress:
          $ref: "#/components/schemas/GeographicSubAddress"
        locality:
          type: string
          description: The locality that the address is in
        postcode:
          type: string
          description:
            "Descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also known as zip code)"
        postcodeExtension:
          type: string
          description:
            An extension of a postal code. E.g. the part following the
            dash in a US urban property address
        stateOrProvince:
          type: string
          description: The State or Province that the address is in
        streetName:
          type: string
          description: Name of the street or other street type
        streetNr:
          type: string
          description:
            Number identifying a specific property on a public street.
            It may be combined with streetNrLast for ranged addresses. MEF 79 defines
            it as required however as in certain countries it is not used we make
            it optional in API.
        streetNrLast:
          type: string
          description: Last number in a range of street numbers allocated to a property
        streetNrLastSuffix:
          type: string
          description: Last street number suffix for a ranged address
        streetNrSuffix:
          type: string
          description: The first street number suffix
        streetSuffix:
          type: string
          description: A modifier denoting a relative direction
        streetType:
          type: string
          description:
            "The type of street (e.g., alley, avenue, boulevard, brae,\
            \ crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf)"
      required:
        - city
        - country
        - streetName
    FinancialAccountRef:
      type: object
      description: A Financial Account within the Seller.
      properties:
        id:
          type: string
          description:
            An identifier for the Financial Account that is unique within
            the Seller and is assigned by the Seller.
        href:
          type: string
          description: Unique reference of the account
        name:
          type: string
          description: The name of the Financial Account.
        type:
          type: string
          description: The type of the Financial Account.
      required:
        - id
    GeographicSubAddress:
      type: object
      description: "Additional fields used to specify an address, as detailed as possible."
      properties:
        buildingName:
          type: string
          description: |
            Allows for identification of places that require building name  as part of addressing information
        levelNumber:
          type: string
          description:
            "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
            \ 2"
        levelType:
          type: string
          description: Describes level types within a building
        privateStreetName:
          type: string
          description:
            '"Private streets internal to a property (e.g. a university)
            may have internal names that are not recorded by the land title office'
        privateStreetNumber:
          type: string
          description: Private streets numbers internal to a private street
        subUnit:
          type: array
          description:
            "Representation of a MEFSubUnit It is used for describing subunit\
            \ within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\
            \ WHARF."
          items:
            $ref: "#/components/schemas/MEFSubUnit"
    MEFPriceType:
      type: string
      description: The type of charge related to the Bill Item.
      enum:
        - recurring
        - nonRecurring
        - usageBased
    MEFProductOrderItemRef:
      type: object
      description: It's a ProductOrder item
      properties:
        productOrderHref:
          type: string
          description: Reference of the related ProductOrder.
        productOrderId:
          type: string
          description: Unique identifier of a ProductOrder.
        productOrderItemId:
          type: string
          description: Id of an Item within the Product Order
      required:
        - productOrderId
        - productOrderItemId
    MEFSubUnit:
      type: object
      description: Allows for sub unit identification
      properties:
        subUnitNumber:
          type: string
          description:
            "The discriminator used for the subunit, often just a simple\
            \ number but may also be a range."
        subUnitType:
          type: string
          description:
            "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
            \ UNIT, WHARF."
      required:
        - subUnitNumber
        - subUnitType
    Money:
      type: object
      description: A base value business entity used to represent money
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: A positive floating point number
      required:
        - unit
        - value
    PaymentItem:
      type: object
      description: A payment that has been received.
      properties:
        id:
          type: string
          description:
            An identifier for the payment that is unique within the Buyer
            Billing Account and is assigned by the Seller.
        amount:
          $ref: "#/components/schemas/Money"
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethod"
        paymentDate:
          type: string
          format: date-time
          description: The Date the payment was received.
      required:
        - id
    PaymentMethod:
      type: string
      description: The specific means of payment.
      enum:
        - check
        - wireTransfer
        - electronic
        - cash
        - other
    ProductRef:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
      required:
        - id
    RelatedContactInformation:
      type: object
      description: A party related to this Bill.
      properties:
        emailAddress:
          type: string
          description: Email address
        name:
          type: string
          description: Name of the contact
        number:
          type: string
          description: Phone number
        numberExtension:
          type: string
          description: Phone number extension
        organization:
          type: string
          description: The organization or company that the contact belongs to
        postalAddress:
          $ref: "#/components/schemas/FieldedAddress"
        role:
          type: string
          description: A role the party plays in a given context.
      required:
        - emailAddress
        - name
        - number
        - role
    TaxItem:
      type: object
      description:
        A tax item is created for each tax rate and tax type used in the
        bill.
      properties:
        taxCategory:
          type: string
          description: The Tax Category for this tax item.
        taxRate:
          type: number
          format: float
          description: The Tax Rate for this Tax Item.
        taxAmount:
          $ref: "#/components/schemas/Money"
    TimePeriod:
      type: object
      description:
        "A period of time, either as a deadline (endDateTime only) a startDateTime\
        \ only, or both"
      properties:
        endDateTime:
          type: string
          format: date-time
          description: The date the Billing Period ended.
        startDateTime:
          type: string
          format: date-time
          description: The date the Billing Period started.
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
