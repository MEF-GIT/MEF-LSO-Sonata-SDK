openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF W124**

    This API implements Business Requirements described in MEF W113

    **This specification represents MEF work in progress and is subject to
    change.** 

    It allows the Buyer to create, retrieve, and update Trouble Tickets as well
    as receive notifications about Incidents' and Trouble Tickets' updates.
    This allows managing issues and situations that are not part of normal
    operations of the Product provided by the Seller.

    List of supported use cases:
    - Send Event Notification

    Copyright 2022 MEF Forum and its contributors

    This file includes content based on the TM Forum Trouble Ticket API (TMF621
    v4.0.0) available at https://github.com/tmforum-apis/TMF621_TroubleTicket,
    which is licensed by the TM Forum under the Apache License version 2.0. Such
    content has been modified by the MEF Forum and its contributors.
  title: Trouble Ticket Notification
  version: 3.0.0-RC
servers:
  - url: 'https://{serverBase}/mefApi/sonata/troubleTicketNotification/v3/'
    variables:
      serverBase:
        default: mef.net
        description: The base of Buyer's URL.
security:
  - oauth2MefLsoApi:
      - listenToTroubleTicketAttributeValueChangeEvent
      - listenToTroubleTicketStatusChangeEvent
      - listenToTroubleTicketResolvedEvent
      - listenToTroubleTicketInformationRequiredEvent
      - listenToIncidentCreateEvent
      - listenToIncidentAttributeValueChangeEvent
      - listenToIncidentClosedEvent
      - listenToIncidentStatusChangeEvent
tags:
  - description: |
      The Buyer's endpoint to send particular event types notifications to.
    name: Notification listeners
paths:
  /listener/troubleTicketAttributeValueChangeEvent:
    post:
      description: >-
        Client listener for receiving the notification
        TroubleTicketAttributeValueChangeEvent
      operationId: listenToTroubleTicketAttributeValueChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary:
        Client listener for entity TroubleTicketAttributeValueChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/troubleTicketStatusChangeEvent:
    post:
      description: >-
        Client listener for receiving the notification
        TroubleTicketStatusChangeEvent
      operationId: listenToTroubleTicketStatusChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity TroubleTicketStatusChangeEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/troubleTicketResolvedEvent:
    post:
      description: >-
        Client listener for receiving the notification
        TroubleTicketResolvedEvent
      operationId: listenToTroubleTicketResolvedEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity TroubleTicketResolvedEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/troubleTicketInformationRequiredEvent:
    post:
      description: >-
        Client listener for receiving the notification
        TroubleTicketInformationRequiredEvent
      operationId: listenToTroubleTicketInformationRequiredEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity TroubleTicketInformationRequiredEvent
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/incidentCreateEvent:
    post:
      description: >-
        Client listener for receiving the notification
        Incident Create Event
      operationId: listenToIncidentCreateEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/IncidentEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity Incident Create Event
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/incidentAttributeValueChangeEvent:
    post:
      description: >-
        Client listener for receiving the notification
        Incident Attribute Value Change Event
      operationId: listenToIncidentAttributeValueChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/IncidentEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity Incident Attribute Value Change Event
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
  /listener/incidentStatusChangeEvent:
    post:
      description: >-
        Client listener for receiving the notification
        Incident Status Change Event
      operationId: listenToIncidentStatusChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/IncidentEvent'
        description: The event data
        required: true
      responses:
        '204':
          description:
            'No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '408':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error408'
          description: Request Time-out
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Client listener for entity Incident Status Change Event
      tags:
        - Notification listeners
      x-codegen-request-body-name: data
components:
  securitySchemes:
    oauth2MefLsoApi:
      type: oauth2
      description:
        Example of a security scheme conforming to MEF 128 LSO API Security
        Profiles standard
      flows:
        clientCredentials:
          tokenUrl: /oauth2/lsoApiToken/
          refreshUrl: /oauth2/refreshLsoApiToken/
          scopes:
            listenToTroubleTicketAttributeValueChangeEvent:
              Client listener for receiving the notification
              TroubleTicketAttributeValueChangeEvent
            listenToTroubleTicketStatusChangeEvent:
              Client listener for receiving the notification
              TroubleTicketStatusChangeEvent
            listenToTroubleTicketResolvedEvent:
              Client listener for receiving the notification
              TroubleTicketResolvedEvent
            listenToTroubleTicketInformationRequiredEvent:
              Client listener for receiving the notification
              TroubleTicketInformationRequiredEvent
            listenToIncidentCreateEvent:
              Client listener for receiving the notification
              Incident Created Event
            listenToIncidentAttributeValueChangeEvent:
              Client listener for receiving the notification
              Incident Attribute Value Change Event
            listenToIncidentClosedEvent:
              Client listener for receiving the notification
              Incident Closed Event
            listenToIncidentStatusChangeEvent:
              Client listener for receiving the notification
              Incident Status Change Event    
  schemas:
    Error400Code:
      description: >-
        One of the following error codes:

        - missingQueryParameter: The URI is missing a required query-string
        parameter

        - missingQueryValue: The URI is missing a required query-string
        parameter value

        - invalidQuery: The query section of the URI is invalid.

        - invalidBody: The request has an invalid body
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
      type: string
    Error:
      description: >
        Standard Class used to describe API response error

        Not intended to be use directly. The `code` in the HTTP header is used
        as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          description: >-
            Text that explains the reason for error. This can be shown to a
            client user.
          maxLength: 255
          type: string
        message:
          description: >-
            Text that provide mode details and corrective actions related to
            the error. This can be shown to a client user.
          type: string
        referenceError:
          description: url pointing to documentation describing the error
          format: uri
          type: string
      required:
        - reason
      type: object
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingQueryParameter: The URI is missing a required
                query-string parameter

                - missingQueryValue: The URI is missing a required query-string
                parameter value

                - invalidQuery: The query section of the URI is invalid.

                - invalidBody: The request has an invalid body
              $ref: '#/components/schemas/Error400Code'
          required:
            - code
          type: object
      description:
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                One of the following error codes:

                - missingCredentials: No credentials provided.

                - invalidCredentials: Provided credentials are invalid or
                expired
              $ref: '#/components/schemas/Error401Code'
          required:
            - code
          type: object
      description:
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
        - missingCredentials
        - invalidCredentials
      type: string
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: |-
                This code indicates that the server understood
                the request but refuses to authorize it because
                of one of the following error codes:
                - accessDenied: Access denied
                - forbiddenRequester: Forbidden requester
                - tooManyUsers: Too many users
              $ref: '#/components/schemas/Error403Code'
          required:
            - code
          type: object
      description:
        'Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)'
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
      type: string
    Error408:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                List of supported error codes:

                - timeOut: Request Time-out - indicates that the server did not
                receive a complete request message within the time that it was
                prepared to wait.
              enum:
                - timeOut
              type: string
          required:
            - code
          type: object
      description:
        'Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)'
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            code:
              description: >-
                One of the following error codes:

                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
              type: string
          required:
            - code
          type: object
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Event:
      description: >-
        Event class is used to describe information structure used for
        notification.
      properties:
        eventId:
          description: Id of the event
          type: string
        eventTime:
          description: Datetime when the event occurred
          format: date-time
          type: string
      required:
        - event
        - eventId
        - eventTime
        - eventType
      type: object
    IncidentEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - properties:
            eventType:
              description: |
                Indicates the type of the event.
              $ref: >-
                #/components/schemas/IncidentEventType
            event:
              description: |
                A reference to the object that is source of the notification.
              $ref: >-
                #/components/schemas/IncidentEventPayload
          required:
            - event
            - eventType
          type: object
    IncidentEventPayload:
      description:
        The identifier of the Incident being subject of this event.
      properties:
        sellerId:
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when requester entity
            represents more than one Seller.
          type: string
        id:
          description: ID of the Incident attributed by quoting system
          type: string
        href:
          description: Hyperlink to access the Incident
          type: string
        buyerId:
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the responding
            represents more than one Buyer.
          type: string
      required:
        - id
      type: object
    IncidentEventType:
      description: |
        Type of the Incident event.
        
        | API name                                 | MEF 113 name          | Description                                                                                                                                                                                                                                                                                                           |
        | ---------------------------------------- | --------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `incidentCreateEvent`                    | INCIDENT_CREATE       | A new Incident was created by the Seller.                                                                                                                                                                                                                                                                             |
        | `incidentAttributeValueChangeEvent`      | INCIDENT_UPDATE       | An open Incident was updated by the Seller.                                                                                                                                                                                                                                                                           |
        | `incidentStatusChangeEvent`              | INCIDENT_STATE_CHANGE | An Incident `status` was changed by the Seller.                                                                                                                                                                                                                                                                       |
      enum:
        - incidentCreateEvent
        - incidentAttributeValueChangeEvent
        - incidentStatusChangeEvent
      type: string
    TroubleTicketEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - properties:
            eventType:
              description: |
                Indicates the type of the event.
              $ref: >-
                #/components/schemas/TroubleTicketEventType
            event:
              description: |
                A reference to the object that is source of the notification.
              $ref: >-
                #/components/schemas/TroubleTicketEventPayload
          required:
            - event
            - eventType
          type: object
    TroubleTicketEventPayload:
      description:
        The identifier of the Trouble Ticket being subject of this event.
      properties:
        sellerId:
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when requester entity
            represents more than one Seller.
          type: string
        id:
          description: ID of the Trouble Ticket attributed by quoting system
          type: string
        href:
          description: Hyperlink to access the Trouble Ticket
          type: string
        buyerId:
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the responding
            represents more than one Buyer.
          type: string
      required:
        - id
      type: object
    TroubleTicketEventType:
      description: |
        Type of the Trouble Ticket event.

        | API name                                 | MEF 113 name          | Description                                                                                                                                                                                                                                                                                                           |
        | ---------------------------------------- | --------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `troubleTicketAttributeValueChangeEvent` | TICKET_UPDATE         | The Seller settable attributes for a Ticket were updated by the Seller. Note: Buyer initiated Ticket updates due to Patch operation will not trigger a `troubleTicketAttributeValueChangeEvent`                                                                                                                       |
        | `troubleTicketInformationRequiredEvent`  | TICKET_STATE_CHANGE   | A Ticket `status` was changed by the Seller.                                                                                                                                                                                                                                                                          |
        | `troubleTicketResolvedEvent`             | TICKET_INFO_REQUIRED  | The Seller requires more information from the Buyer for a Ticket to continue processing a Ticket. The details on what information is needed from the Buyer will be provided via a Ticket `note`. The Ticket `status` is `pending`. Note: The Buyer uses the Patch operation to provide more information for a Ticket. |
        | `troubleTicketStatusChangeEvent`         | TICKET_RESOLVED       | The Seller is informing the Buyer the Ticket is resolved and the Buyer to verify that the Issue on which the Ticket was based is no longer observed. The Ticket `status` is `resolved`. Note: The Buyer confirms if the Issue has been resolved satisfactorily or not using close or reopen operations                |
      enum:
        - troubleTicketAttributeValueChangeEvent
        - troubleTicketInformationRequiredEvent
        - troubleTicketResolvedEvent
        - troubleTicketStatusChangeEvent
      type: string