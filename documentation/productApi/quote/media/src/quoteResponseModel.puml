@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}


class Quote_Common {

    description: string 
    externalId: string 
    instantSyncQuote*: boolean 
    projectId: string 
    requestedQuoteCompletionDate: date-time 
    buyerRequestedQuoteLevel*: MEFBuyerQuoteLevel 
}


Quote_Common *-->"*" RelatedContactInformation : relatedContactInformation


class MEFProductConfiguration {

    @type*: string 
}

class MEFProductRefOrValueQuote {

    href: string 
    id: string 
}

MEFProductRefOrValueQuote *-->"*" RelatedPlaceRefOrValue : place
MEFProductRefOrValueQuote *--> MEFProductConfiguration : productConfiguration
MEFProductRefOrValueQuote *--> ProductOfferingRef : productOffering
MEFProductRefOrValueQuote *-->"*" ProductRelationshipWithGrouping : productRelationship

class MEFQuoteItem_Common {

    id*: string 
    dealReference: string 
    action*: MEFProductActionType 
    agreementName: string 
}

MEFQuoteItem_Common *--> MEFProductRefOrValueQuote : product
MEFQuoteItem_Common *-->"*" QuoteItemRelationship : quoteItemRelationship
MEFQuoteItem_Common *-->"*" RelatedContactInformation : relatedContactInformation


class ProductOfferingRef {

    id*: string 
    href: string 
}



class ProductRelationshipWithGrouping {

    id*: string 
    groupingKey: string 
    href: string 
    relationshipType*: string 
}



class Quote {

    id*: string 
    href: string 
    effectiveQuoteCompletionDate: date-time 
    expectedQuoteCompletionDate: date-time 
    quoteDate*: date-time 
    quoteLevel: MEFSellerQuoteLevel 
    state: MEFQuoteStateType 
}
Quote_Common <|-- Quote

Quote *-->"1..*" QuoteItem : quoteItem

class QuoteItem {

    subjectToFeasibilityCheck: boolean 
    state: MEFQuoteItemStateType 
}
MEFQuoteItem_Common <|-- QuoteItem

QuoteItem *-->"*" QuotePrice : quoteItemPrice

class QuoteItemRelationship {

    id*: string 
    relationshipType*: string 
}



class QuotePrice {

    description: string 
    name: string 
    unitOfMeasure: string 
    priceType: MEFPriceType 
    recurringChargePeriod: MEFChargePeriod 
}

QuotePrice *--> Price : price

class RelatedContactInformation {

    emailAddress*: string 
    name*: string 
    number*: string 
    numberExtension: string 
    organization: string 
    role*: string 
}


class RelatedPlaceRefOrValue {

    @schemaLocation: uri 
    @type*: string 
    role*: string 
}


class Money {

    unit: string 
    value: float 
}



class Price {

    taxRate: float 
}

Price *--> Money : dutyFreeAmount*
Price *--> Money : taxIncludedAmount



@enduml
