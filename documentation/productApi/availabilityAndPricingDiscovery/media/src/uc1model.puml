@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

class ProductOfferingAvailability_Common {

    action*: ProductActionAddModifyType
}

ProductOfferingAvailability_Common *--> ProductRef : productRef
ProductOfferingAvailability_Common *--> ProductSpecificationRef : productSpecification
ProductOfferingAvailability_Common *-->"*" ProductRelationship : productRelationship
ProductOfferingAvailability_Common *-->"*" RelatedPlaceRefOrValue : place


class ProductOfferingAvailability_Request {

}
ProductOfferingAvailability_Common <|-- ProductOfferingAvailability_Request



class ProductOfferingAvailability {

}
ProductOfferingAvailability_Common <|-- ProductOfferingAvailability

ProductOfferingAvailability *-->"1..*" ProductOfferingConfiguration : availableProductOfferingConfigurations


enum ProductActionAddModifyType {

    add
    modify
}
class ProductSpecificationRef {

    href: string
    id*: string
}



class ProductRelationship {

    href: string
    id*: string
    relationshipType*: string
}



class Duration {

    amount*: integer
    units*: TimeUnit
}



enum TimeUnit {

    calendarMonths
    calendarDays
    calendarHours
    calendarMinutes
    businessDays
    businessHours
    businessMinutes
}
class RelatedPlaceRefOrValue {

    role*: string
    @type*: string
    @schemaLocation: uri
}



class FieldedAddress {

    country*: string
    streetType: string
    postcodeExtension: string
    city*: string
    streetNr: string
    locality: string
    postcode: string
    streetNrLast: string
    streetNrSuffix: string
    streetName*: string
    stateOrProvince: string
    streetNrLastSuffix: string
    streetSuffix: string
}
RelatedPlaceRefOrValue <|-- FieldedAddress

FieldedAddress *--> GeographicSubAddress : geographicSubAddress


class FormattedAddress {

    country*: string
    postcodeExtension: string
    stateOrProvince: string
    city*: string
    addrLine2: string
    addrLine1*: string
    locality: string
    postcode: string
}
RelatedPlaceRefOrValue <|-- FormattedAddress



class GeographicAddressLabel {

    externalReferenceId*: string
    externalReferenceType*: string
}
RelatedPlaceRefOrValue <|-- GeographicAddressLabel



class GeographicAddressRef {

    href: string
    id*: string
}
RelatedPlaceRefOrValue <|-- GeographicAddressRef



class GeographicSiteRef {

    href: string
    id*: string
}
RelatedPlaceRefOrValue <|-- GeographicSiteRef



class GeographicSubAddress {

    buildingName: string
    levelType: string
    levelNumber: string
    privateStreetNumber: string
    privateStreetName: string
}

GeographicSubAddress *-->"*" MEFSubUnit : subUnit


class MEFGeographicPoint {

    spatialRef*: string
    x*: string
    y*: string
    z: string
}
RelatedPlaceRefOrValue <|-- MEFGeographicPoint



class MEFSubUnit {

    subUnitNumber*: string
    subUnitType*: string
}



class MEFProductConfiguration {

    @type*: string
}



class ProductOfferingRef {

    href: string
    id*: string
}



class ProductOfferingConfiguration {

    productConfigurationIdentifier*: string
}

ProductOfferingConfiguration *-->"1" ProductOfferingRef : productOffering
ProductOfferingConfiguration *-->"1" MEFProductConfiguration : productConfiguration
ProductOfferingConfiguration *-->"1" Duration : installationInterval


class ProductRef {

    id*: string
    href: string
}



@enduml
