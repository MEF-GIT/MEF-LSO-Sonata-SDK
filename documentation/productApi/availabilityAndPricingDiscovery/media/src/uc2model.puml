@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

class Duration {

    amount*: integer
    units*: TimeUnit
}




class GeographicAddressRef {

    href: string
    id*: string
}
RelatedPlaceRef <|-- GeographicAddressRef



class GeographicSiteRef {

    href: string
    id*: string
}
RelatedPlaceRef <|-- GeographicSiteRef



enum MEFChargePeriod {

    hour
    day
    week
    month
    year
}
enum MEFEndOfTermAction {

    roll
    autoDisconnect
    autoRenew
}
class MEFItemTerm {

    endOfTermAction*: MEFEndOfTermAction
    name*: string
    description: string
}

MEFItemTerm *-->"1" Duration : duration
MEFItemTerm *--> Duration : rollInterval


enum MEFPriceType {

    recurring
    nonRecurring
    usageBased
}
class Money {

    unit*: string
    value*: float
}



class Price {

    taxRate: float
}

Price *--> Money : taxIncludedAmount
Price *-->"1" Money : dutyFreeAmount


class PricingAndTerm {

    identifier*: string
    subjectToAdditionalNonrecurringCharges*: boolean
}

PricingAndTerm *-->"1" Duration : installationInterval
PricingAndTerm *-->"1" MEFItemTerm : term
PricingAndTerm *-->"1..*" QuotePrice : price
PricingAndTerm *-->"1" ProductOfferingRef : productOffering


class PricingDiscovery {

}
PricingDiscovery_Request <|-- PricingDiscovery

PricingDiscovery *-->"1..*" PricingAndTerm : pricingAndTerms


class PricingDiscovery_Request {

    action*: ProductActionAddModifyType
    productConfigurationIdentifier*: string
}

PricingDiscovery_Request *--> ProductRef : productRef
PricingDiscovery_Request *-->"*" ProductRelationship : productRelationship
PricingDiscovery_Request *-->"*" RelatedPlaceRef : place


enum ProductActionAddModifyType {

    add
    modify
}

class ProductOfferingRef {

    href: string
    id*: string
}



class ProductRef {

    id*: string
    href: string
}



class ProductRelationship {

    href: string
    id*: string
    relationshipType*: string
}


class QuotePrice {

    name*: string
    description: string
    priceType*: MEFPriceType
    unitOfMeasure: string
    recurringChargePeriod: MEFChargePeriod
}

QuotePrice *-->"1" Price : price


class RelatedPlaceRef {

    role*: string
    @type*: string
}



enum TimeUnit {

    seconds
    minutes
    businessHours
    calendarHours
    businessDays
    calendarDays
    calendarMonths
    calendarYears
}
@enduml
