@startuml

hide footbox

participant Buyer

entity "Product Order" as PO
entity "Product Order Item" as POI

entity Charge

autonumber

Buyer -> PO : POST productOrder request
activate PO
PO -> PO: validation
PO -> PO: assign id
PO -> PO: state: acknowledged
PO -> POI: (causes creation)
activate POI
POI -> POI: state: acknowledged
PO --> Buyer: POST productOrder response
...
note over PO, POI: Seller starts processing
POI -> POI: state: inProgress
POI -> Buyer: POST productOrderItemStateChangeEvent
POI -> PO: (causes state change)
PO -> PO: state: inProgress
PO -> Buyer: POST productOrderStateChangeEvent


note over POI, Charge: Product Order Item charges identified
POI -> POI: state: held
POI -> Buyer: POST productOrderItemStateChangeEvent
POI -> PO: (causes state change)
PO -> PO: state: held.assessingCharge
PO -> Buyer: POST productOrderStateChangeEvent
POI -> Charge: (causes creation)
activate Charge
Charge -> Charge: state: awaitingResponse
Charge -> Buyer: POST chargeCreateEvent
Buyer -> Charge: GET Charge request
...
note over Buyer: The Buyer decides to accept all charges
Buyer -> Charge: PATCH Charge (accept all charges)
Charge -> Charge: state: completed
Charge -> Buyer: POST chargeStateChangeEvent
Charge -> POI: (causes state change)

deactivate Charge
POI -> POI: state: inProgress
POI -> Buyer: POST productOrderItemStateChangeEvent
POI -> PO: (causes state change)
PO -> PO: state: inProgress
PO -> Buyer: POST productOrderStateChangeEvent

note over PO, POI: The Seller continues processing
...
@enduml