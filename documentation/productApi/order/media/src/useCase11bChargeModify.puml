@startuml

hide footbox

participant Buyer
entity "Modify Product Order Item Completion Date" as MPO
entity "Product Order" as PO
entity "Product Order Item" as POI
entity Charge

autonumber
activate PO
activate POI
note over PO, POI: Product Order and Product Order Item in state: inProgress
Buyer -> MPO : POST modifyProductOrderItemCompletionDate request \n `expediteIndicator=true`
activate MPO
MPO -> MPO: validation
MPO -> MPO: assign id
MPO -> MPO: state: acknowledged
MPO --> Buyer: POST modifyProductOrderItemCompletionDate response

MPO -> POI: (causes state change)
POI -> POI: state: pending
POI -> Buyer: POST productOrderItemStateChangeEvent

POI -> PO: (causes state change)
PO -> PO: state: pending.assessingModification
PO -> Buyer: POST productOrderStateChangeEvent


note over POI, Charge: Modification charges identified

POI -> Charge: (causes creation)
activate Charge

Charge -> Charge: state: awaitingResponse
Charge -> Buyer: POST chargeCreateEvent
Charge -> MPO: (causes state change)
MPO -> MPO: state: inProgress.assessingCharge
MPO -> Buyer: POST modifyProductOrderItemCompletionDateStateChangeEvent
Buyer -> Charge: GET Charge request
...
note over Buyer: The Buyer decides to accept all charges
Buyer -> Charge: PATCH Charge (accept all charges)
Charge -> Charge: state: completed
Charge -> Buyer: POST chargeStateChangeEvent
Charge -> MPO: (causes state change)
deactivate Charge
MPO -> MPO: state: done
MPO -> Buyer: POST modifyProductOrderItemCompletionDateStateChangeEvent
MPO -> POI: (set `expediteIndicator=true`, `expediteIndicatorAccepted=true`)
deactivate MPO

POI -> POI: state: inProgress
POI -> Buyer: POST productOrderItemStateChangeEvent
POI -> PO: (causes state change)
PO -> PO: state: inProgress
PO -> Buyer: POST productOrderStateChangeEvent

note over PO, POI: The Seller continues processing
...
@enduml