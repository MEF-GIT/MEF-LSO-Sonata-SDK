@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
    shadowing true
    RoundCorner 0
    LineColor DarkRed
    ArrowColor DarkRed
    ArrowThickness 1
}

class ProductSpecification_Common {

    id: string
    href: uri
    name: string
    lifecycleStatus: ProductSpecificationLifecycleStatusType
    lastUpdate: date-time
}


class ProductSpecification_Find {

}
ProductSpecification_Common <|-- ProductSpecification_Find



class ProductSpecification {

    description*: string
}
ProductSpecification_Common <|-- ProductSpecification

ProductSpecification *-->"*" AttachmentValue : attachment
ProductSpecification *-->"*" ProductRelationshipConstraint : productRelationship
ProductSpecification *-->"*" PlaceRelationshipConstraint : placeRelationship
ProductSpecification *-->"*" ProductMilestoneDefinition : milestone
ProductSpecification *-->"*" Note : note
ProductSpecification *-->"1" SchemaRefOrValue : sourceSchema

class AttachmentValue {

    attachmentId: string
    author*: string
    content: string
    creationDate*: date-time
    description: string
    mimeType: string
    name*: string
    source*: MEFBuyerSellerType
    url: string
}

class MEFByteSize {
   ammount*: float
   units*: DataSizeUnit
}

AttachmentValue *-->"0..1" MEFByteSize : size

class Note {

    author*: string
    date*: date-time
    id*: string
    source*: MEFBuyerSellerType
    text*: string
}

class SchemaRefOrValue {
    schema: string
    schemaLocation: string
}

class PlaceRelationshipConstraint {

    relationshipRole*: string
    minCardinality*: integer
    maxCardinality*: integer
}



class ProductRelationshipConstraint {

    id*: string
    relationshipType*: string
    minCardinality*: integer
    maxCardinality*: integer
}

enum ProductSpecificationLifecycleStatusType {

    obsolete
    published
}

class ProductMilestoneDefinition {

    name*: string
    description*: string
}



enum DataSizeUnit {
    BYTES
    KBYTES
    MBYTES
    GBYTES
    TBYTES
    PBYTES
    EBYTES
    ZBYTES
    YBYTES
}


@enduml
