@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

class AlternateProductOfferingProposal {

    id*: string 
}

AlternateProductOfferingProposal *-->"1" MEFAlternateProduct : alternateProduct
AlternateProductOfferingProposal *-->"1" Duration : installationInterval

class EventSubscription {

    callback*: string 
    id*: string 
    query: string 
}



class EventSubscriptionInput {

    callback*: string 
    query: string 
}



class FieldedAddress {

    city*: string 
    country*: string 
    locality: string 
    postcode: string 
    postcodeExtension: string 
    stateOrProvince: string 
    streetName*: string 
    streetNr: string 
    streetNrLast: string 
    streetNrLastSuffix: string
    streetNrSuffix: string 
    streetSuffix: string 
    streetType: string 
}
RelatedPlaceRefOrValue <|-- FieldedAddress

FieldedAddress *--> GeographicSubAddress : geographicSubAddress


class FormattedAddress {

    addrLine1*: string 
    addrLine2: string 
    city*: string 
    country*: string 
    locality: string 
    postcode: string 
    postcodeExtension: string 
    stateOrProvince: string 
}
RelatedPlaceRefOrValue <|-- FormattedAddress



class GeographicSubAddress {

    buildingName: string 
    id: string 
    levelNumber: string 
    levelType: string 
    privateStreetName: string 
    privateStreetNumber: string 
}

GeographicSubAddress *-->"*" MEFSubUnit : subUnit


class GeographicAddressLabel {

    externalReferenceId*: string 
    externalReferenceType*: string 
}
RelatedPlaceRefOrValue <|-- GeographicAddressLabel


class MEFGeographicPoint {

    spatialRef*: string 
    x*: string 
    y*: string 
    z: string 
}
RelatedPlaceRefOrValue <|-- MEFGeographicPoint



class MEFPOQItemStateChange {

    changeDate*: date-time 
    changeReason: string 
    state*: MEFPOQItemTaskStateType 
}



class MEFPOQStateChange {
    changeDate*: date-time 
    changeReason: string 
    state*: MEFPOQTaskStateType 
}

class MEFProductConfiguration {

    @type*: string 
}



class MEFAlternateProduct {

}

MEFAlternateProduct *-->"1" MEFProductConfiguration : productConfiguration
MEFAlternateProduct *--> ProductSpecificationRef : productSpecification
MEFAlternateProduct *-->"1" ProductOfferingRef : productOffering


class MEFProductRefOrValue {

    id: string 
    href: string 
}

MEFProductRefOrValue *-->"*" RelatedPlaceRefOrValue : place
MEFProductRefOrValue *--> MEFProductConfiguration : productConfiguration
MEFProductRefOrValue *-->"*" ProductRelationshipWithGrouping : productRelationship
MEFProductRefOrValue *--> ProductSpecificationRef : productSpecification
MEFProductRefOrValue *--> ProductOfferingRef : productOffering


class ProductSpecificationRef {

    href: string 
    id*: string 
}


class ProductOfferingRef {

    href: string 
    id*: string 
}



class MEFSubUnit {

    subUnitNumber*: string 
    subUnitType*: string 
}



class GeographicAddressRef  {

    href: string 
    id*: string 
}
RelatedPlaceRefOrValue <|-- GeographicAddressRef 

class GeographicSiteRef  {

    href: string 
    id*: string 
}
RelatedPlaceRefOrValue <|-- GeographicSiteRef 


class ProductOfferingQualification {

    effectiveQualificationDate: date-time 
    expectedPOQCompletionDate: date-time 
    href: string 
    id*: string 
    state*: MEFPOQTaskStateType 
}
ProductOfferingQualification_Common <|-- ProductOfferingQualification

ProductOfferingQualification *-->"1..*" ProductOfferingQualificationItem : productOfferingQualificationItem
ProductOfferingQualification *-->"*" MEFPOQStateChange : stateChange


class ProductOfferingQualificationItem {

    guaranteedUntilDate: date-time 
    serviceabilityConfidenceReason: string 
    serviceabilityConfidence: MEFServiceabilityColor 
    state*: MEFPOQItemTaskStateType 
}
ProductOfferingQualificationItem_Common <|-- ProductOfferingQualificationItem

ProductOfferingQualificationItem *-->"*" AlternateProductOfferingProposal : alternateProductOfferingProposal
ProductOfferingQualificationItem *--> Duration : installationInterval
ProductOfferingQualificationItem *-->"*" MEFPOQItemStateChange : stateChange
ProductOfferingQualificationItem *-->"*" TerminationError : terminationError


class ProductOfferingQualificationItem_Common {

    action*: ProductActionType 
    id*: string 
}

ProductOfferingQualificationItem_Common *-->"1" MEFProductRefOrValue : product
ProductOfferingQualificationItem_Common *-->"*" QualificationItemRelationship : qualificationItemRelationship
ProductOfferingQualificationItem_Common *-->"*" RelatedContactInformation : relatedContactInformation


class QualificationItemRelationship {

    id*: string 
    relationshipType*: string 
}



class TerminationError {
    code: string
    propertyPath: string
    value: string 
}




class Duration {

    amount*: integer 
    units*: TimeUnit 
}



enum MEFServiceabilityColor {

    green
    yellow
    red
}
class ProductOfferingQualification_Create {

}
ProductOfferingQualification_Common <|-- ProductOfferingQualification_Create

ProductOfferingQualification_Create *-->"1..*" ProductOfferingQualificationItem_Create : productOfferingQualificationItem


enum MEFPOQTaskStateType {

    acknowledged
    terminatedWithError
    inProgress
    done.unableToProvide
    done.ready
}
class ProductOfferingQualificationItem_Create {

}
ProductOfferingQualificationItem_Common <|-- ProductOfferingQualificationItem_Create



class ProductOfferingQualification_Common {

    externalId:string
    instantSyncQualification: boolean 
    projectId: string 
    provideAlternative: boolean 
    requestedPOQCompletionDate: date-time 
}

ProductOfferingQualification_Common *-->"1..*" RelatedContactInformation : relatedContactInformation


class ProductOfferingQualification_Find {

    id*: string 
    externalId:string
    projectId: string 
    requestedPOQCompletionDate: date 
    state*: MEFPOQTaskStateType 
}




class ProductRelationshipWithGrouping {

    href: string 
    id*: string 
    groupingKey: string 
    relationshipType*: string 
}




class RelatedContactInformation {

    emailAddress*: string 
    name*: string 
    number*: string 
    numberExtension: string 
    organization: string
    role*: string 
}
RelatedContactInformation *--> FieldedAddress : postalAddress


class RelatedPlaceRefOrValue {

    @schemaLocation: uri 
    @type*: string 
    role*: string 
}



enum MEFPOQItemTaskStateType {

    acknowledged
    terminatedWithError
    inProgress
    done.abandoned
    done.ready
}
enum TimeUnit {

    calendarDays
    calendarHours
    calendarMinutes
    businessDays
    businessHours
    businessMinutes
}
enum ProductActionType {

    add
    modify
    delete
}
@enduml
