---
$schema: http://json-schema.org/draft-07/schema#
title: MEF LSO IP Common Types
definitions:
  AccessLinkBfd:
    description:
      The Access Link BFD Service Attribute indicates whether Bidirectional
      Forwarding Detection (BFD) is enabled on the UNI Access Link. Reference
      MEF 61.1[1] Section 13.8 UNI Access Link BFD Service Attribute and Section
      16.5 ENNI Link BFD Attribute.
    properties:
      activeEnd:
        $ref: "#/definitions/BfdActiveEnd"
        description: >-
          BFD Active End. At least one end of BFD session has to have an active
          role, meaning that it sends out asynchronous control messages
          regardless of whether it has received any. Reference MEF 61.1 Section
          13.8 UNI Access Link BFD Service Attribute.
      authenticationType:
        $ref: "#/definitions/BfdAuthenticationType"
        description: >-
          BFD Authentication as describer in RFC 5880. Reference MEF 61.1
          Section 13.8 UNI Access Link BFD Service Attribute and Section 16.5
          ENNI Link BFD Attribute.
      connectionAddressFamily:
        $ref: "#/definitions/AddressFamilyIpv4Ipv6Both"
        description: >-
          The Connection Address Family parameter specifies whether the session
          is established over IPv4 or IPv6 or whether two separate sessions are
          established using IPv4 and IPv6. Reference MEF 61.1 Section 13.8 UNI
          Access Link BFD Service Attribute and Section 16.5 ENNI Link BFD
          Attribute.
      detectMultiplier:
        description: >-
          BFD Detect multiple as an Integer. Reference MEF 61.1 Section 13.8 UNI
          Access Link BFD Service Attribute and Section 16.5 ENNI Link BFD
          Attribute.
        type: integer
        minimum: 0
      transmissionInterval:
        type: integer
        minimum: 0
        description: >-
          Transmission Interval Reference MEF 61.1 Section 13.8 UNI Access Link
          BFD Service Attribute and Section 16.5 ENNI Link BFD Attribute.
    type: object
  AddressFamilyIpv4Ipv6:
    description: >-
      Specifies whether the session is established over IPv4 or IPv6.
    enum:
      - IPV4
      - IPV6
    type: string
  AddressFamilyIpv4Ipv6Both:
    description: >-
      Specifies whether the session is established over IPv4 or IPv6 or whether
      two separate session are established using IPv4 and IPv6.
    enum:
      - IPV4
      - IPV6
      - BOTH
    type: string
  Addressing:
    description: |
      Enumeration representing the Address type for the Control Protocols data
      type. Reference MEF 61.1 Section 12.6 UNI List of Control Protocols 
      Service Attribute 
      - SP_OPERATOR_ADDRESSES: If the addressing information is
      SP/Operator Addresses, then Ingress IP Packets for the specified  protocol
      that have a multicast or broadcast destination address, or a unicast
      destination address  that is reachable within the SP's or Operator's
      network, are considered to be IP Control Protocol  Packets, and Egress IP
      Packets for the specified protocol that have a source address that is
      reachable  within the SP's or Operator's network are considered to be IP
      Control Protocol Packets.
      - ANY: If the addressing information is Any, then all IP Packets for the
      specified protocol that cross the UNI are considered to be 
      IP Control Protocol Packets.
    enum:
      - SP_OPERATOR_ADDRESSES
      - ANY
    type: string
  BfdActiveEnd:
    description: |
      At least one end of the BFD session must have an active role, meaning that
      it sends out asynchronous control messages regardless of whether it has
      received any. This enumeration represents the values that can be set for
      the BFD Active End. Reference MEF 61.1 Section 13.8 UNI Access Link BFD
      Service Attribute [R171] and [R172].
      - SUBSCRIBER: Subscriber takes active BFD role.
      - SP: Service Provider takes active BFD role.
      - BOTH: Subscriber and Service Provider take active BFD role.
    type: string
    enum:
      - SUBSCRIBER
      - SP
      - BOTH
  BfdAuthenticationType:
    description: |
      RFC 7419 specifies a set of common intervals which are used to ensure
      interoperability.
      - NONE: No BFD authentication.
      - SIMPLE_PASSWORD: Simple Password Authentication is the most 
      straightforward (and weakest) form of authentication. In this method
      of authentication one or more Passwords (with corresponding Key IDs) 
      are configured in each system and one of these Password/ID pairs is 
      carried in each BFD Control packet. The receiving system accepts the 
      packet if the Password and Key ID matches one of the Password/ID 
      pairs configured in that system. Reference IETF RFC5880 Section 6.7.2.
      - KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 Authentication 
      mechanisms are very similar to those used in other protocols. 
      In these methods of authentication, one or more security keys 
      (with corresponding key IDs) are configured in each system. 
      Reference RFC5880 Section 6.7.3 Keyed MD5 and Meticulous Keyed MD5 
      Authentication.
      - METICULOUS_KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 
      Authentication mechanisms are very similar to those used in other 
      protocols. In these methods of authentication, one or more security
      keys (with corresponding key IDs) are configured in each system.
      Reference RFC5880 Section 6.7.3 Keyed MD5 and Meticulous Keyed MD5
      Authentication.
      - KEYED_SHA1: The Keyed SHA1 and Meticulous Key SHA1 Authentication
      mechanisms are very similar to those used in other protocols. In 
      these methods of authentication, one or more secret keys (with 
      corresponding key IDs) are configured in each system. Reference
      RFC5880 Section 6.7.4 Keyed SHA1 and Meticulous Keyed SHA1 
      Authentication.
      - METICULOUS_KEYED_SHA1: The Keyed SHA1 and Meticulous Key 
      SHA1 Authentication mechanisms are very similar to those used in
      other protocols. In these methods of authentication, one or more 
      secret keys (with corresponding key IDs) are configured in each system.
      Reference RFC5880 Section 6.7.4 Keyed SHA1 and Meticulous Keyed SHA1 
      Authentication.
    type: string
    enum:
      - NONE
      - SIMPLE_PASSWORD
      - KEYED_MD5
      - METICULOUS_KEYED_MD5
      - KEYED_SHA1
      - METICULOUS_KEYED_SHA1
  Bgp:
    description: >-
      When an entry in the UNI Routing Protocol is for BGP, BGP as specified in
      RFC 4271 is used across the UNI to exchange information. Reference MEF
      61.1 Section 12.7.3 BGP.
    properties:
      subscriberAsNumber:
        description: BGP Subscriber Autonomous System number.
        type: integer
        minimum: 0
      peerAsNumber:
        description: BGP Peer Autonomous System Number.
        type: integer
        minimum: 0
      connectionAddressFamily:
        description: Connection Address Family (IPv4 or IPv6).
        $ref: "#/definitions/AddressFamilyIpv4Ipv6"
      peeringAddresses:
        description: Peering Addresses.
        $ref: "#/definitions/PeeringAddress"
      authentication:
        description:
          BGP Authentication. It is either None or if present is it a value of
          MD5 Password. It is assumed that an encrypted channel is used for API
          session so that the password is protected.
        type: string
        nullable: true
      bgpCommunityList:
        description:
          Used to control which routers are accepted, preferred, distributed, or
          advertised.
        items:
          $ref: "#/definitions/BgpCommunity"
        type: array
      bgpExtendedCommunityList:
        description:
          Mechanism for labeling information carried in BGP-4. Provide
          enhancement over existing BGP Community Attribute an extended range,
          the addition of type field.
        items:
          $ref: "#/definitions/BgpExtendedCommunity"
        type: array
      holdTime:
        description:
          Hold time in seconds. Indicates the agreed Hold Time used for BGP
          sessions. The possible values are 0 or an integer in the range
          3-65535.
        type: integer
        minimum: 0
        maximum: 65535
      damping:
        $ref: "#/definitions/Damping"
        description: >-
          Route flap damping. When the Damping parameter is NONE, the attribute
          is not set. When not NONE a single set of parameters described in
          Section 4.3 of RFC 2430 MUST be agreed.
        nullable: true
      asOverride:
        description:
          Autonomous System Override. The SP (or Operator) can overwrite
          instances of the Subscriber's AS Number in the AS Path with their own
          AS Number, when advertising routes to the Subscriber. This needs to be
          explicitly agreed between the SP and the Subscriber, and/or between an
          SP/SO and an Operator.
        $ref: "#/definitions/EnabledDisabled"
      administrativeDistance:
        description: BGP Administrative Distance.
        type: integer
        minimum: 0
    type: object
  BgpCommunity:
    description: >
      A  community is a group of destinations which share some common property.
      Each autonomous system administrator may define which communities a
      destination belongs to.
    properties:
      autonomousSystemNumber:
        description: The first two octets encoding the Autonomous System value.
        type: integer
        minimum: 0
        maximum: 65535
      autonomousSystemDefined:
        description: The remaining octets.
        type: integer
        minimum: 0
        maximum: 65535
      required:
        - autonomousSystemNumber
        - autonomousSystemDefined
  BgpExtendedCommunity:
    description: >-
      This attribute provides a mechanism for labeling information carried in
      BGP-4. These labels can be used to control the distribution of this
      information, or for other applications.
    properties:
      regularType:
        description: Regular Type Field, 1 octet length
        type: integer
        minimum: 0
        maximum: 256
      regularValue:
        description:
          Octets 2 - 8 of the value part of the address. Used in case only
          Regular Type is provided.
        type: integer
        minimum: 0
      extendedType:
        description: Extended Type Field, 2 octets length
        type: integer
        minimum: 0
        maximum: 65535
      extendedValue:
        description:
          Octets 3 - 8 of the value part of the address. Used in case only
          Extended Type is provided.
        type: integer
        minimum: 0
    oneOf:
      - required: [regularType, regularValue]
      - required: [extendedType, extendedValue]
  BurstBehavior:
    description: |
      Enumeration used to select the Bandwidth Profile Flow Burst Behavior
      attribute. Reference MEF 61.1 Section 17.3 Table 29 Bandwidth Profile
      Parameters for a Bandwidth Profile Flow.
      - OPTIMIZE_DELAY: Enumeration representing the Burst Behavior of optimization of delay.
      - OPTIMIZE_THROUGHPUT: Enumeration representing the Burst Behavior of optimization of throughput.
    enum:
      - OPTIMIZE_DELAY
      - OPTIMIZE_THROUGHPUT
    type: string
  CloudDataLimit:
    description: >-
      Specifies an absolute limit on the amount of data the Subscriber can
      transmit to, or receive from, the cloud service in a given time period. It
      is either Unlimited or a 4-tuple (scdl, tcdl, ucdl, dcdl).  Reference MEF
      61.1 Section 10.13.3 Cloud Data Limit.
    properties:
      startTime:
        description: Specifies a start time.
        format: date-time
        type: string
      duration:
        $ref: "#/definitions/TimeDuration"
        description: >-
          Specifies a duration. Together with the start time, it describes a
          service of contiguous time intervals, starting at the specified start
          time and each lasting for the specified duration.
      upload:
        description: >-
          An integer indicating a limit, in octets, on the amount of IP traffic
          that can be transmitted towards the cloud service during each time
          interval described by startTime and duration.
        type: integer
        minimum: 0
      download:
        description: >-
          An integer indicating a limit, in octets, on the amount of IP traffic
          received from the cloud service that can be delivered to the
          Subscriber during each time interval described by startTime and
          duration.
        type: integer
        minimum: 0
    type: object
  CloudDns:
    description: |
      Data type representing a Domain Name System.  Reference  MEF 61.1 Sn 10.13.5.
      Reference MEF 69.1 Section 9.1
      [R12]	For a Basic Internet Access Service, Cloud DNS MUST NOT be NONE.
      [R13] For an Internet Access Service, if the Cloud DNS parameter of the
      IPVC Cloud Service Attribute is STATIC, the associated list of DNS Servers
      MUST have at least one entry. 
      [D4] For an Internet Access Service, if the Cloud DNS parameter of the
      IPVC Cloud Service Attribute is STATIC, the associated list of DNS Servers
      SHOULD contain at least two DNS servers.
    properties:
      dnsServerIpv4List:
        description: DNS server list an IPv4 addresses
        items:
          $ref: "#/definitions/Ipv4Address"
        type: array
      dnsServerIpv6List:
        description: DNS server list an IPv6 addresses
        items:
          $ref: "#/definitions/Ipv6Address"
        type: array
      dnsType:
        $ref: "#/definitions/DnsType"
        description: Domain Name System type.
    required:
      - dnsType
    type: object
  ClassOfServiceMapEntry:
    description: >-
      Values for the Cloud Ingress Class of Service Map. Reference MEF 61.1
      Table 11 - Values for the Cloud Ingress Class of Service Map, 11.0 IPVC EP
      Ingress Class of Service Map Service Attribute.
    properties:
      cosName:
        description: Class of Service name
        type: string
      destinationIpAddress:
        $ref: "#/definitions/Ipv4OrIpv6Prefix"
        description: Destination IP Address
      destinationL4Port:
        description: Destination Layer 4 Port
        type: integer
        maximum: 65535
        minimum: 0
      ethernetPcp:
        description: Ethernet PCP value
        maximum: 7
        minimum: 0
        type: integer
      ipds:
        description: DSCP value
        maximum: 63
        minimum: 0
        type: integer
      l4protocol:
        description: Layer 4 Protocol
        type: integer
        maximum: 255
        minimum: 0
      sourceIpAddress:
        $ref: "#/definitions/Ipv4OrIpv6Prefix"
        description: Source IP Address
      sourceL4Port:
        description: Source Layer 4 Port
        type: integer
        maximum: 65535
        minimum: 0
    type: object
  ConnectionType:
    description: |
      An enumeration representing the connection type.
      - POINT_TO_POINT indicates that the link is logically point to Point.
      - MULTIPOINT indicates the link is logically multipoint.
    enum:
      - "POINT_TO_POINT"
      - "MULTIPOINT"
    type: string
  ConnectorType:
    description:
      Enumeration representing type of connector presented to Subscriber.
    type: string
    enum:
      - "RJ45"
      - "SC"
      - "LC"
      - "OTHER"
  ConversationIdRange:
    description: >-
      A range of ConversationID (either a VLAN Id or 0 for untagged frames)
    properties:
      start:
        description: >-
          The starting Conversation ID of the range or the only Conversation ID
          if there is no end value
        maximum: 4094
        minimum: 0
        type: integer
      end:
        description: The final Conversation ID in the range
        maximum: 4094
        minimum: 0
        type: integer
    type: object
  ConversationIdToAggregationLinkMap:
    description: >-
      This is a 2-tuple <x,y> where x is a list of Port Conversation IDs or
      ranges of Port Conversation IDs (a Port Conversation ID is a VLAN ID or 0
      for untagged frames) and y is a list of Link Numbers. This is used in the
      Port Conversation to Aggregation Link Map for the UNI and ENNI.
    properties:
      conversationIDs:
        description: >-
          802.1AX-2014 sec. 6.6.2.1 - A Port Conversation ID is a VLAN ID (1 to
          4094) or 0 to represent untagged and priority-tagged frames.
        items:
          $ref: "#/definitions/ConversationIdRange"
        minItems: 1
        type: array
        uniqueItems: true
      aggLinkList:
        description: >-
          802.1AX-2014 sec. 6.6.2.1 - An ordered list of Aggregation Link
          Numbers
        items:
          minimum: 1
          type: integer
        minItems: 1
        type: array
        uniqueItems: true
    type: object
  ControlProtocol:
    description: >-
      Data type representing Control Protocol. Each entry consists of a 3-tuple
      containing the protocol name, addressing information (either SP/Operator
      Addresses or Any) and one or more references. Reference MEF 61.1 Section
      12.6 UNI List of Control Protocols Service Attribute
    properties:
      addressing:
        description: Enumeration representing the addressing.
        $ref: "#/definitions/Addressing"
      protocolName:
        description: Protocol name.
        type: string
      reference:
        description: Protocol reference.
        items:
          type: string
        minItems: 1
        type: array
    type: object
  Damping:
    description: >-
      Damping parameters as defined in RFC 2439 BGP Route Flap Damping, Section
      4.2
    properties:
      cutoffThreshold:
        description: >-
          This value is expressed as a number of route withdrawals.  It is the
          value above which a route advertisement will be suppressed.
        type: integer
        minimum: 0
      decayHalfLifeWhileReachable:
        description: >-
          This value is the time duration in seconds during which the
          accumulated stability figure of merit will be reduced by half if the
          route if considered reachable (whether suppressed or not).
        type: integer
        minimum: 0
      decayHalfLifeWhileUnReachable:
        description: >-
          This value is the time duration in seconds during which the
          accumulated stability figure of merit will be reduced by half if the
          route if considered unreachable.  If not specified or set to zero, no
          decay will occur while a route remains unreachable.
        type: integer
        minimum: 0
      decayMemoryLimit:
        description: >-
          This is the maximum time (in seconds) that any memory of previous
          instability will be retained given that the route's state remains
          unchanged, whether reachable or unreachable.  This parameter is
          generally used to determine array sizes.
        type: integer
        minimum: 0
      maxHoldDownTime:
        description: >-
          This value is the maximum time a route can be suppressed no matter how
          unstable it has been prior to this period of stability. In seconds.
        type: integer
        minimum: 0
      numberOfReuseLists:
        description: >-
          This is the number of reuse lists.  It may be determined from
          reuse-list-max or set explicitly.
        type: integer
        minimum: 0
      reuseListMemoryReuseListMax:
        description: >-
          This is the time (in seconds) value corresponding to the last reuse
          list. This may be the maximum value of T-hold for all parameter sets
          of may be configured.
        type: integer
        minimum: 0
      reuseListTimeGranularity:
        description: >-
          This is the time (in seconds) interval between evaluations of the
          reuse lists.  Each reuse lists corresponds to an additional time
          increment.
        type: integer
        minimum: 0
      reuseThreshold:
        description: >-
          This value is expressed as a number of route withdrawals.  It is the
          value below which a suppressed route will now be used again.
        type: integer
        minimum: 0
      timeGranularity:
        description: >-
          This is the time granularity in seconds used to perform all decay
          computations.
        type: integer
        minimum: 0
      reuseIndexArraySize:
        description: >-
          This is the size of reuse index arrays.  This size determines the
          accuracy with which suppressed routes can be placed within the set of
          reuse lists when suppressed for a long time.
        type: integer
        minimum: 0
    type: object
  Demux:
    description:
      Is a value that is specific to each type of UNI Access Link Trunk and
      indicates which Layer 2 sub-channel should be select for this UNI Access
      Link. [A1-R8]	If the UNI Access Link Trunk identified by trunkID is of type
      ETHERNET, then the value of the demux element MUST be either UT/PT or a
      VLAN ID in the range 1 to 4094.
    properties:
      utpt:
        description: Untagged and priority tagged frames.
        type: boolean
      vlanId:
        description: VLAN ID.
        $ref: "#/definitions/VlanId"
    type: object
  DhcpRelay:
    description:
      Dynamic Host Configuration Protocol (DHCP) Relay functionality is useful
      when the Subscriber uses DHCP (per RFC 2131 and RFC 8415) in the
      Subscriber Network but does not want to place a DHCP server (or possibly a
      pair of redundant DHCP servers) in each part of the network. Reference MEF
      61.1 Section UNI Access Link DHCP Relay Service Attribute
    properties:
      dhcpServerList:
        description: >-
          Non-empty list of IP addresses for DHCP Servers belonging to the
          Subscriber. Reference MEF 61.1 Section 13.6 UNI Access Link DHCP Relay
          Server Attribute.
        type: array
        items:
          $ref: "#/definitions/Ipv4OrIpv6Address"
        minItems: 1
      ipvcEndPointIdentifier:
        description:
          IPVC End Point identifier as described in MEF 61.1 Section 11.1. Note
          - It points to the value of IpvcEndPoint.identifier Service Attribute.
          It is not intended to point to the potential Product identifier if
          IPVC Endpoint is an instance of a Product.
        $ref: "#/definitions/IpvcEndPointIdentifier"
    type: object
    oneOf:
      - required: [dhcpServerList]
      - required: [ipvcEndPointIdentifier]
  DnsType:
    description:
      Enumeration representing the different types of DNS. Reference MEF
      61.1  10.13.5 Cloud DNS Service
    enum:
      - NONE
      - DHCP
      - PPP
      - STATIC
      - SLAAC
    type: string
  DscpMapping:
    description:
      IP DSCP mapping of CoS name to DSCP value Reference MEF 61.1 Section 11.9
      IPVC EP Ingress Class of Service Map Service Attribute, 11.10 IPVC EP
      Egress Class of Service Map Service Attribute
    properties:
      ipds:
        description: DSCP value
        maximum: 63
        minimum: 0
        type: integer
      cosName:
        description: Class of Service name
        type: string
    type: object
  EgressClassOfServiceMapUni:
    description: >-
      Pair of values (D,P). D specifies how to set the DS field in Egress IP
      Data Packets based on CoS Name. It is either None, or a mapping from CoS
      Names to DSCP values. P specifies how to set the PCP field in VLAN Tagged
      Ethernet Frames containing Egress IP Data Packets based on CoS Name. It is
      either None, or a mapping from CoS Names to PCP values. Reference MEF 61.1
      Section 11.10 IPVC EP  Egress Class of Service Map Service Attribute.  The
      "Uni" version of this class does not have the "pcpMapping" attribute - MEF
      61.1 [R95] The value of P in the IPVC EP Egress Class of Service Map
      Service Attribute MUST be None unless the following conditions are met:
      The IPVC EP is at an ENNI using Option A; and All of the ENNI Links in the
      ENNI have a value for the ENNI Link  L2 Technology Attribute (section
      16.2) that indicates that VLAN  Tagged Ethernet Frames are used to carry
      IP Packets across the ENNI.
    properties:
      dscpMapping:
        description: Reference to CoS to IP DSCP mapping.
        items:
          $ref: "#/definitions/DscpMapping"
        type: array
    type: object
  EnabledDisabled:
    description: Enumeration to indicate Enabled/Disabled state of an attribute
    type: string
    enum:
      - "ENABLED"
      - "DISABLED"
  EthernetPhysicalLayer:
    description:
      Enumeration representing the different Ethernet physical layers. Reference
      MEF 61.1.1 Table A1-4 Ethernet PHYs for UNI Access Link Trunks.
    enum:
      - "10BASE_FB"
      - "10BASE_FL"
      - "10BASE_FP"
      - "10BASE_T"
      - "10BASE_T1L"
      - "10BASE_T1S"
      - "10BASE_TE"
      - "10BROAD36"
      - "10PASS_TS"
      - "100BASE_BX10"
      - "100BASE_FX"
      - "100BASE_LX10"
      - "100BASE_T"
      - "100BASE_T1"
      - "100BASE_T2"
      - "100BASE_T4"
      - "100BASE_TX"
      - "100BASE_X"
      - "1000BASE_BX10"
      - "1000BASE_CX"
      - "1000BASE_LX"
      - "1000BASE_LX10"
      - "1000BASE_PX10"
      - "1000BASE_PX20"
      - "1000BASE_RHA"
      - "1000BASE_RHB"
      - "1000BASE_RHC"
      - "1000BASE_SX"
      - "1000BASE_T"
      - "1000BASE_T1"
      - "1000BASE_X"
      - "2_5GBASE_T"
      - "2_5GBASE_T1"
      - "5GBASE_T"
      - "5GBASE_T1"
      - "10GBASE_E"
      - "10GBASE_EW"
      - "10GBASE_L"
      - "10GBASE_LR"
      - "10GBASE_LRM"
      - "10GBASE_LW"
      - "10GBASE_LX4"
      - "10GBASE_R"
      - "10GBASE_S"
      - "10GBASE_SR"
      - "10GBASE_SW"
      - "10GBASE_T"
      - "10GBASE_T1"
      - "10GBASE_X"
      - "25GBASE_CR"
      - "25GBASE_CR_S"
      - "25GBASE_ER"
      - "25GBASE_SR"
      - "25GBASE_T"
      - "40GBASE_CR4"
      - "40GBASE_ER4"
      - "40GBASE_FR"
      - "40GBASE_LR4"
      - "40GBASE_R"
      - "40GBASE_SR4"
      - "40GBASE_T"
      - "50GBASE_CR"
      - "50GBASE_ER"
      - "50GBASE_FR"
      - "50GBASE_LR"
      - "50GBASE_SR"
      - "100GBASE_CR10"
      - "100GBASE_CR2"
      - "100GBASE_CR4"
      - "100GBASE_DR"
      - "100GBASE_ER4"
      - "100GBASE_LR4"
      - "100GBASE_R"
      - "100GBASE_SR10"
      - "100GBASE_SR2"
      - "100GBASE_SR4"
      - "200GBASE_CR4"
      - "200GBASE_DR4"
      - "200GBASE_ER4"
      - "200GBASE_FR4"
      - "200GBASE_LR4"
      - "200GBASE_SR4"
      - "400GBASE_DR4"
      - "400GBASE_ER8"
      - "400GBASE_FR8"
      - "400GBASE_LR8"
      - "400GBASE_SR16"
      - "400GBASE_SR4_2"
      - "400GBASE_SR8"
    type: string
  EthernetPhysicalLink:
    description:
      Data type representing UNI Access Link Trunk List of Ethernet Physical
      Links of form <id,pl,fs,ct,gn> as defined in MEF 61.1.1 Section A1-1.3.1.
    properties:
      identifier:
        description: >
          Identifier of the Physical LInk
        type: string
        maxLength: 53
      physicalLayer:
        description: >
          Enumeration representing the different Ethernet physical layers.
          Reference MEF 61.1.1 Table A1-4 Ethernet PHYs for UNI Access Link
          Trunks.
        $ref: "#/definitions/EthernetPhysicalLayer"
      synchronousEthernet:
        description:
          Enumeration indicating if the physical link supports Synchronous
          Ethernet.
        $ref: "#/definitions/SynchronousEthernet"
      connectorType:
        description:
          Enumeration representing type of connector presented to Subscriber.
        $ref: "#/definitions/ConnectorType"
      gender:
        description: >
          Enumeration representing the gender of the connector presented to the
          Subscriber.
        $ref: "#/definitions/Gender"
    type: object
  ForwardingInformation:
    description: >-
      Forwarding information, consisting of either a nexthop IP address in the
      Subscriber Network (if the access medium is multipoint capable, e.g.,
      Ethernet), or a specific UNI Access Link (if the access medium is strictly
      point-to-point, e.g., HDLC, PPP over DSL).
    properties:
      nextHopIpAddress:
        description: Next hop IP address.
        $ref: "#/definitions/Ipv4OrIpv6Address"
      uniAccessLink:
        description: UNI Access Link unique identifier.
        $ref: "#/definitions/IpUniAccessLinkIdentifier"
    type: object
    oneOf:
      - required: [nextHopIpAddress]
      - required: [uniAccessLink]
  Gender:
    description:
      Enumeration representing the gender of the connector presented to the
      Subscriber.
    type: string
    enum:
      - "SOCKET"
      - "PLUG"
  InformationRate:
    type: object
    description:
      A value and a unit of measure that specifies an Information Rate.
    properties:
      irValue:
        description: >-
          The value in the information rate. For example if the information rate
          is 70 kbps this element is 70.
        type: number
        minimum: 0
      irUnits:
        description: >-
          The unit of measure for the Information Rate. For example if the
          Information Rate is 70KBPS this element is KBPS. Note that the values
          are decimal values. 1 KBPS is 1000 bits per second and 1MBPS is
          1,000,000 bits per second.
        type: string
        enum:
          - "BPS"
          - "KBPS"
          - "MBPS"
          - "GBPS"
          - "TBPS"
          - "PBPS"
          - "EBPS"
          - "ZBPS"
          - "YBPS"
  IpBwpEnvelope:
    description: >-
      A BWP Envelope is a list of Bandwidth Profile Flows, plus additional
      parameters for the BWP as a whole. A BWP Envelope is a set of one or more
      BWP Flows that are associated such that the amount of traffic for one flow
      can affect the amount that is permitted for another flow. This is an
      abstract superclass. There subclasses of IPVC Endpoint, IP UNI and IP NI
      Access Link Envelopes. Reference MEF 61.1 Section 17.3 Bandwidth Profile
      Envelopes.
    properties:
      maxIrE:
        description:
          The Envelope Maximum Information Rate in bits per second. This is the
          limit on the total aggregate information rate of traffic across all
          BWP Flows in the Envelope. Reference MEF 61.1 Section 17.3 Bandwidth
          Profile Envelopes.
        $ref: "#/definitions/InformationRate"
      tE:
        description: >-
          The Envelope IR Time in milliseconds. This is the time period over
          which average Information Rates are calculated and thus it limits the
          size of a burst. Reference MEF 61.1 Section 17.3 Bandwidth Profile
          Envelopes.
        type: integer
        minimum: 0
    type: object
  IpBwpFlow:
    type: object
    description: >-
      A Bandwidth Profile Flow is a stream of IP Packets meeting certain
      criteria. This is an abstract superclass. It has subclasses depending on
      the criteria used. The criteria than can be used depends on which BWP
      Envelope the BWP Flow is a part of. Reference MEF 61.1 Section 17.2
      Bandwidth Profile Flows.
    properties:
      flowIdentifier:
        description: >-
          Identifier for the BWP Flow within the BWP Envelope. Unique integer
          between 1 and n where n is the number of BWP Flows in the BWP
          Envelope. Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters
          for a Bandwidth Profile Flow.
        type: integer
        minimum: 0
      cir:
        description: >-
          Committed Information Rate in bits per second. Average information
          rate of IP Packets that is committed to this BWP Flow. Reference MEF
          61.1 Table 29 - Bandwidth Profile Parameters for a Bandwidth Profile
          Flow.
        $ref: "#/definitions/InformationRate"
      maxIr:
        description: >-
          Maximum Information Rate in bits per second. Limit on the average
          information rate of IP Packets for this BWP Flow. Reference MEF 61.1
          Table 29 - Bandwidth Profile Parameters for a Bandwidth Profile Flow.
        $ref: "#/definitions/InformationRate"
      weight:
        description:
          Weight as an integer greater than or equal to 0. Relative weight for
          this BWP Flow compared to other BWP Flows in the BWP Envelope.
          Reference MEF 61.1 Table 29 - Bandwidth Profile Parameters for a
          Bandwidth Profile Flow.
        type: integer
        minimum: 0
      burstBehavior:
        description: >-
          Burst Behavior either Optimize-Delay or Optimize-Throughput. Whether
          the SP is requested to optimize the delay characteristic of this flow,
          or the throughput. Reference MEF 61.1 Table 29 - Bandwidth Profile
          Parameters for a Bandwidth Profile Flow.
        $ref: "#/definitions/BurstBehavior"
  IpBwpFlowAll:
    allOf:
      - $ref: "#/definitions/IpBwpFlow"
        description: >-
          All IP Data Packets. NOTE: No attributes are needed.
  IpBwpFlowPerAccessLink:
    allOf:
      - $ref: "#/definitions/IpBwpFlow"
      - description: >-
          All Ingress IP Data Packets at the UNI that are received over one of a
          give set of UNI Access Links. Reference MEF 61.1 Section 12.5 UNI
          Egress BWP Envelope.
        properties:
          uniAccessLinkIdentifier:
            description: List of UNI Access Link Identifiers.
            items:
              $ref: "#/definitions/IpUniAccessLinkIdentifier"
            minItems: 1
            type: array
        type: object
  IpBwpFlowPerAccessLinkIpvcEpAndCosName:
    allOf:
      - $ref: "#/definitions/IpBwpFlow"
      - description: >-
          All Ingress IP Data Packets at the UNI that are received over one of a
          given set of UNI Access Links,and that are mapped to the any of a
          given set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1 Section
          12.4 UNI Ingress BWP Envelope.
        properties:
          ipvcEpAndCosName:
            description:
              List of pairs of IPVC End Point Identifier and Class of Service
              Name. Reference MEF 61.1 Table 28.
            items:
              $ref: "#/definitions/IpvcEpAndCosName"
            minItems: 1
            type: array
          uniAccessLinkIdentifier:
            description: List of UNI Access Link Identifiers.
            items:
              $ref: "#/definitions/IpUniAccessLinkIdentifier"
            minItems: 1
            type: array
        type: object
  IpBwpFlowPerCosName:
    allOf:
      - $ref: "#/definitions/IpBwpFlow"
      - description:
          A Bandwidth for and IPVC End Point with an associated Class of Service
          identifier.
        type: object
        properties:
          cosName:
            description: List of Class of Service names.
            items:
              type: string
            minItems: 1
            type: array
  IpBwpFlowPerIpvcEp:
    allOf:
      - $ref: "#/definitions/IpBwpFlow"
      - type: object
        description: >-
          All Egress/Ingress IP Data Packets at the UNI that are received over
          the UNI Access  Link, and are mapped to any of a given set of IPVC End
          Points. Reference MEF 61.1  Section 13.10 UNI Access Link Ingress BWP
          Envelope, Section 13.11 UNI Access Link Egress BWP Envelope
        properties:
          ipvcEndPointIdentifier:
            description:
              List of IPVC End Point Identifiers for an IPVC End Point located
              at the UNI Access Link. Reference MEF 61.1 Table 28.
            items:
              $ref: "#/definitions/IpvcEndPointIdentifier"
            minItems: 1
            type: array
  IpBwpFlowPerIpvcEpAccessLink:
    allOf:
      - $ref: "#/definitions/IpBwpFlow"
      - description: >-
          All Ingress IP Data Packets at the UNI that are received over one of a
          give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI
          Ingress BWP Envelope.
        properties:
          ipvcEndPointIdentifier:
            description:
              List of IPVC End Point identifiers as described in MEF 61.1
              Section 11.1. Note - It points to the value of
              IpvcEndPoint.identifier Service Attribute. It is not intended to
              point to the potential Product identifier if IPVC Endpoint is an
              instance of a Product.
            items:
              $ref: "#/definitions/IpvcEndPointIdentifier"
            minItems: 1
            type: array
          uniAccessLinkIdentifier:
            description: List of UNI Access Link Identifiers.
            items:
              $ref: "#/definitions/IpUniAccessLinkIdentifier"
            minItems: 1
            type: array
        type: object
  IpBwpFlowPerIpvcEpAndCosName:
    allOf:
      - $ref: "#/definitions/IpBwpFlow"
      - type: object
        description:
          CoS Name from the IPVC List of Class of Service Names (section 10.8)
          for the IPVC that has the IPVC EP.
        properties:
          ipvcEpAndCosName:
            description:
              List of pairs of IPVC End Point Identifier and Class of Service
              Name. Reference MEF 61.1 Table 28.
            items:
              $ref: "#/definitions/IpvcEpAndCosName"
            minItems: 1
            type: array
  IpPrefixOrigin:
    description: |
      Enumeration of possible values of Ip Prefix Origin.
    enum:
      - "SP"
      - "OTHER"
    type: string
  IpUniAccessLinkTrunkIdentifier:
    description:
      IPVC End Point identifier as described in MEF 61.1 Section 11.1. Note - It
      points to the value of IpvcEndPoint.identifier Service Attribute. It is
      not intended to point to the potential Product identifier if IPVC Endpoint
      is an instance of a Product.
    type: string
    maxLength: 53
    pattern: "[\x20-\x7F]+"
  IpUniAccessLinkTrunk:
    description:
      A UNI Access Link Trunk is a construct that encapsulates the details of
      Layer 1 and Layer 2 configuration shared by one or more UNI Access Links.
      Reference MEF 61.1.1 Section A1-1 UNI Access Link Trunk Service
      Attributes.
    type: object
    properties:
      trunkType:
        description: The type of Layer 2 technology of the UNI Access Link Trunk
        $ref: "#/definitions/UniAccessLinkTrunkType"
      identifier:
        $ref: "#/definitions/IpUniAccessLinkTrunkIdentifier"
        description:
          Unique identifier for the UNI Access Link Trunk for management
          purposes. Reference MEF 61.1.1 Section A1-1.1 UNI Access Link Trunk
          Identifier Service Attribute.
    required:
      - trunkType
  IpUniAccessLinkBwpEnvelope:
    allOf:
      - $ref: "#/definitions/IpBwpEnvelope"
      - type: object
        description: >-
          A single Bandwidth Profile Envelope consisting of parameters and
          Bandwidth Profile Flow specifications. An Ingress Bandwidth Profile
          Envelope can be specified for one of a UNI, a UNI Access, or an IPVC
          EP. Reference MEF 61.1 Section 13.10 UNI Access Link Ingress Bandwidth
          Profile Envelope Service Attribute.
        properties:
          bwpFlowAll:
            description:
              BWP Flow for all IP Data Packets at the UNI that are transmitted
              or received over the UNI Access Link.
            $ref: "#/definitions/IpBwpFlowAll"
          bwpFlowPerIpvcEp:
            description:
              List of BWP FLows matching IPVC Endpoint Identifier(s) for an IPVC
              EP located at the UNI.
            items:
              $ref: "#/definitions/IpBwpFlowPerIpvcEp"
            type: array
          bwpFlowPerIpvcEpAndCosName:
            description:
              List of BWP FLows matching pairs of IPVC Endpoint Identifier and
              CoS Name.
            items:
              $ref: "#/definitions/IpBwpFlowPerIpvcEpAndCosName"
            type: array
        oneOf:
          - required: [bwpFlowAll]
          - required: [bwpFlowPerIpvcEp]
          - required: [bwpFlowPerIpvcEpAndCosName]
  IpUniAccessLinkCommon:
    type: object
    description: >-
      An individual connection between the Subscriber and the SP that forms part
      of a UNI. Reference MEF 61.1 Section 7.3 UNIs and UNI Access Link.
    properties:
      identifier:
        description: >-
          IPVC End Point identifier as described in MEF 61.1 Section 11.1. Note
          - it is not the same thing as the potential Product identifier if IPVC
          Endpoint is an instance of a Product.
        type: string
        maxLength: 53
        pattern: "[\x20-\x7F]+"
      connectionType:
        description:
          Indicates whether the UNI Access Link is point-to-point or multipoint.
        $ref: "#/definitions/ConnectionType"
      l2Technology:
        description:
          Specifies the UNI Access Link Trunk (61.1.1 section A1-1) used to
          carry IP Packets across the UNI along with information needed to
          identify IP Packets for this UNI Access Link.
        $ref: "#/definitions/L2Technology"
      prefixDelegation:
        description: >-
          Indicates whether DHCP Prefix delegation is enabled. Reference MEF
          61.1 Section 13.7 UNI Access Link Prefix Delegation Service Attribute.
        $ref: "#/definitions/EnabledDisabled"
      mtu:
        description: >-
          Maximum size, in octets of an IP Packet that can traverse the UNI
          Access Link. Reference MEF 61.1 Section 13.9 UNI Access Link IP MTU
          Service Attribute.
        minimum: 576
        type: integer
      reservedVrids:
        description: >-
          List of VRRP (Virtual Router Redundancy Protocol) VRIDs (Virtual
          Router Identifier) reserved for use by the SP or Operator. Reference
          MEF 61.1 Section 13.12 UNI Access Link Reserved VRIDs Service
          Attribute.
        items:
          $ref: "#/definitions/Vrid"
        type: array
  IpUniAccessLinkIdentifier:
    description:
      Ip Uni Access Link identifier as described in MEF 61.1 Section 11.1. Note
      - It points to the value of IpUniAccessLink.identifier Service Attribute.
      It is not intended to point to the potential Product identifier if
      IpUniAccessLink is an instance of a Product.
    type: string
    maxLength: 53
    pattern: "[\x20-\x7F]+"
  IpUniBwpEnvelope:
    allOf:
      - $ref: "#/definitions/IpBwpEnvelope"
      - description: >-
          A single Bandwidth Profile Envelope consisting of parameters and
          Bandwidth Profile Flow specifications. The BWP Flows can be defined
          per UNI, per IPVC EP, per UNI Access Link, per CosName, etc. Reference
          MEF 61.1 Sections 12.4	UNI Ingress Bandwidth Profile Envelope Service
          Attribute, 12.5 UNI Egress Bandwidth Profile Envelope Service
          Attribute.
        type: object
        properties:
          bwpFlowPerAccessLink:
            description: >-
              A list of BWP Flows for IP Packets that are received over one of a
              given set of UNI Access Links. Reference MEF 61.1 Section 12.5 UNI
              Egress BWP Envelope.
            items:
              $ref: "#/definitions/IpBwpFlowPerAccessLink"
            minItems: 1
            type: array
          bwpFlowPerIpvcEp:
            description: >-
              A list of BWP Flows that are mapped to any of a given set of IPVC
              EPs. Reference MEF 61.1 Section 12.5 UNI Egress BWP Envelope.
            items:
              $ref: "#/definitions/IpBwpFlowPerIpvcEp"
            minItems: 1
            type: array
          bwpFlowPerIpvcEpAccessLink:
            description: >-
              A list of BWP Flows for IP Packets that are received over one of a
              given set of UNI Access Links and re mapped to any of a given set
              of IPVC EPs. Reference MEF 61.1 Section 12.5 UNI Egress BWP
              Envelope.
            items:
              $ref: "#/definitions/IpBwpFlowPerIpvcEpAccessLink"
            minItems: 1
            type: array
          bwpFlowPerIpvcEpAndCosName:
            description: >-
              A list of BWP Flows that are mapped to any of a given set of (IPVC
              EP, CoS Name) pairs. Reference MEF 61.1 Section 12.5 UNI Egress
              BWP Envelope.
            items:
              $ref: "#/definitions/IpBwpFlowPerIpvcEpAndCosName"
            minItems: 1
            type: array
          bwpFlowPerAccessLinkIpvcEpAndCosName:
            description: >-
              A list of BWP Flows that are mapped to the UNI Access Link and any
              of a given set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1
              Section 12.5 UNI Egress BWP Envelope.
            items:
              $ref: "#/definitions/IpBwpFlowPerAccessLinkIpvcEpAndCosName"
            minItems: 1
            type: array
          bwpFlowAll:
            $ref: "#/definitions/IpBwpFlowAll"
            description: >-
              A BWP Flow for all IP Data Packets at the UNI. Reference MEF 61.1
              Section 12.5 UNI Egress BWP Envelope.
        oneOf:
          - required: [bwpFlowPerAccessLink]
          - required: [bwpFlowPerIpvcEp]
          - required: [bwpFlowPerIpvcEpAccessLink]
          - required: [bwpFlowPerIpvcEpAndCosName]
          - required: [bwpFlowPerAccessLinkIpvcEpAndCosName]
          - required: [bwpFlowAll]
  IpUniCommon:
    type: object
    description: >-
      A User Network Interface (UNI) is the demarcation point between the
      responsibility  of the SP and the responsibility of the Subscriber. Note
      that a given UNI always  relates to a single SP and a single Subscriber.
      Reference MEF 61.1 Section 12. UNI Service Attributes
    properties:
      managementType:
        $ref: "#/definitions/UniManagementType"
        description: >-
          Attribute indicating whether the CE is the responsibility of the
          Subscriber or the Service Provider. Reference MEF 61.1 Section 12.2
          UNI Management Type Service Attribute.
      listOfControlProtocols:
        description: >-
          Indication of IP Control Protocols that are not forwarded
          transparently by the SP. Reference MEF 61.1 Section 12.6 UNI List of
          Control Protocols Service Attribute. Absence of this attribute
          corresponds to a value of "None". [D9]  At a UNI with an IPVC EP for
          an Internet Access Service, if the UNI has at least one UNI Access
          Link where the UNI Access Lin IPv4 Connection Addressing is not None,
          the UNI List of Control Protocols SHOULD include ICMP with a list of
          applicable ISP IP addresses. [D10]  At a UNI with an IPVC EP for an
          Internet Access Service with at least one UNI Access Link where the
          UNI Access Link IPv6 Connection Addressing is not None, the UNI List
          of Control Protocols SHOULD include ICMPv6 with a list of applicable
          SP IP addresses. Reference MEF 69.1 Section 9.3 Internet Access UNI
          Requirements.
        items:
          $ref: "#/definitions/ControlProtocol"
        type: array
      reversePathForwarding:
        $ref: "#/definitions/EnabledDisabled"
        description: >-
          Indicates whether Reverse Path Forwarding checks are used by the SP at
          the UNI. Reference MEF 61.1 Section 12.8 UNI Reverse Path Forwarding
          Service Attribute. [D11] At a UNI with an IPVC EP for an Internet
          Access Service, reversePathForwarding SHOULD be ENABLED. Reference MEF
          69.1 Section 9.3 Internet Access UNI Requirements.
  Ipv4Address:
    description: Data type representing IPv4 address.
    type: string
    format: ipv4
  Ipv4AddressingType:
    description: |
      Enumeration representing IPv4 Address Types specific for UNI Access Links.
      - DHCP: Dynamic Host Configuration Protocol (DHCP) is used the Subscriber devices 
      to request IPv4 addresses in a given subnet from the SP or Operator.
      - STATIC: IPv4 addresses in a given IPv4 subnet are statically assigned to the 
      SP or Operator and to the Subscriber.
      - UNNUMBERED: The SP or Operator and the Subscriber each assigned an IPv4 address
      (from their own address pools) independently. These addresses can be on different 
      subnets, and so an interface-based routing protocol is needed to ensure reachability.
    enum:
      - "DHCP"
      - "STATIC"
      - "UNNUMBERED"
    type: string
  Ipv4OrIpv6Prefix:
    description: IPv4 or IPv6 prefix. Includes subnet address and prefix length.
    properties:
      ipv4Prefix:
        description: IPv4 prefix.
        $ref: "#/definitions/Ipv4Prefix"
      ipv6Prefix:
        description: IPv6 prefix.
        $ref: "#/definitions/Ipv6Prefix"
    oneOf:
      - required: [ipv4Prefix]
      - required: [ipv6Prefix]
    type: object
  Ipv4OrIpv6Address:
    description: Data type representing IPv4 or IPV6 address.
    type: string
    oneOf:
      - format: ipv4
      - format: ipv6
  Ipv4Prefix:
    description:
      Data type representing IPv4 address prefix and mask length between 0 and
      31 bits.
    properties:
      ipv4Address:
        description: IPv4 address.
        $ref: "#/definitions/Ipv4Address"
      prefixLength:
        description: IPv4 address prefix. Length 0-31.
        type: integer
        minimum: 0
        maximum: 31
    type: object
  Ipv4PrimarySubnet:
    allOf:
      - $ref: "#/definitions/Ipv4Subnet"
      - description: >-
          Ipv4Subnet used in context of Primary Ipvc subnet. It adds the
          subscriberIpv4Address attribute to the Ipv4Subnet.
        properties:
          subscriberIpv4Address:
            description: Subscriber IPv4 Address
            $ref: "#/definitions/Ipv4Address"
          nullable: true
        type: object
  Ipv4Subnet:
    description: >-
      Ipv4Subnet is a data type representing an IPv4 subnet logical partition of
      an IP network. Included is list of Service Provider IPv4 addresses.
    properties:
      ipv4Prefix:
        description:
          IPv4 address prefix (IPv4 address prefix and mask length between 0 and
          31 in bits).
        $ref: "#/definitions/Ipv4Prefix"
      serviceProviderIpv4Addresses:
        description: >
          List of Service Provider IPv4 addresses.  [R25] If IPv4 Connection
          Addressing is DHCP, the UNI Access Link IPv4 Connection Addressing
          Primary Subnet parameter MUST contain only a single Service Provider
          IPv4 Address. Reference MEF 69.1[1] Section 9.4 Subscriber Internet
          Access Service: UNI Access Link Requirements
        items:
          $ref: "#/definitions/Ipv4Address"
        minItems: 1
        type: array
      reservedPrefixes:
        description: List of IPv4 Prefixes, possibly empty
        items:
          $ref: "#/definitions/Ipv4Prefix"
        type: array
      required:
        - ipv4Prefix
    type: object
  Ipv6Address:
    description: Data type representing IPv6 address.
    type: string
    format: ipv6
  Ipv6AddressingType:
    description: |
      Enumeration representing IPv6 Address Types specific for UNI Access Links.
      -DHCP: Dynamic Host Configuration Protocol (DHCP) is used by the Subscriber
      devices to request IPv6 addresses in a given subnet from the SP or Operator.
      -SLAAC: Stateless Address Autoconfiguration (SLAAC) is used by the Subscriber 
      devices to create unique IPv6 global addresses within an IP Prefix advertised 
      by the SP or Operator as describer in RFC 4862.
      -STATIC: IPv6 addresses in a given IPv6 subnet are statically assigned to the 
      SP or Operator and to the Subscriber.
      - LL_ONLY: o	If the value is LL-only, these are only IPv6 addresses used on 
      the UNI Access Link.
    enum:
      - "DHCP"
      - "SLAAC"
      - "STATIC"
      - "LL_ONLY"
    type: string
  Ipv6Prefix:
    description:
      Data type representing IPv6 address prefix and mask length between 0 and
      127 in bits.
    properties:
      ipv6Address:
        description: IPv6 address.
        $ref: "#/definitions/Ipv6Address"
      prefixLength:
        description: IPv6 address prefix. Length 0-127.
        type: integer
        minimum: 0
        maximum: 127
    type: object
  Ipv6Subnet:
    description: >-
      IPv6Subnet is a data type representing an IPv6 subnet logical partition of
      an IP network. Included is list of Service Provider IPv6 addresses.
    properties:
      ipv6Prefix:
        description:
          IPv6 Prefix (IPv6 address prefix and mask length between 0 and 127 in
          bits).
        $ref: "#/definitions/Ipv6Prefix"
      serviceProviderIpv6Addresses:
        description: List of IPv6 Service Provider addresses.
        items:
          $ref: "#/definitions/Ipv6Address"
        minItems: 1
        type: array
      reservedPrefixes:
        description: List of IPv6 Prefixes, possibly empty
        items:
          $ref: "#/definitions/Ipv6Prefix"
        type: array
      required:
        - ipv6Prefix
    type: object
  IpvcEndPointIdentifier:
    description:
      IPVC End Point identifier as described in MEF 61.1 Section 11.1. Note - It
      points to the value of IpvcEndPoint.identifier Service Attribute. It is
      not intended to point to the potential Product identifier if IPVC Endpoint
      is an instance of a Product.
    type: string
    maxLength: 53
    pattern: "[\x20-\x7F]+"
  IpvcEpAndCosName:
    description: >-
      Data type representing IPVC End Point Identifier and CoS name use for
      Bandwidth Profiles.
    properties:
      ipvcEndPointIdentifier:
        description:
          IPVC End Point identifier as described in MEF 61.1 Section 11.1. Note
          - It points to the value of IpvcEndPoint.identifier Service Attribute.
          It is not intended to point to the potential Product identifier if
          IPVC Endpoint is an instance of a Product.
        $ref: "#/definitions/IpvcEndPointIdentifier"
      cosName:
        description: Class of Service Name.
        type: string
    type: object
  IpvcEpBwpEnvelope:
    allOf:
      - $ref: "#/definitions/IpBwpEnvelope"
      - description: >-
          A single Bandwidth Profile Envelope consisting of parameters and
          Bandwidth Profile specifications. A Bandwidth Profile Envelope can be
          specified for one of a UNI, a UNI Access Link and ENNI Link or an IPVC
          End Point. Reference MEF 61.1 Section 11.11 IPVC EP Egress Bandwidth
          Profile Envelope Service Attribute. 11.12 IPVC EP Ingress Bandwidth
          Profile Envelope Service Attribute.
        properties:
          bwpFlowPerCosName:
            description: List of BWP flows matching given CoS Name
            items:
              $ref: "#/definitions/IpBwpFlowPerCosName"
            minItems: 1
            type: array
          bwpFlowAll:
            $ref: "#/definitions/IpBwpFlowAll"
            description: Pointer to IpvcEpBwpAll
        type: object
        oneOf:
          - required: [bwpFlowPerCosName]
          - required: [bwpFlowAll]
  L2Technology:
    description:
      Specifies the UNI Access Link Trunk used to carry IP Packets across the
      UNI along with information needed to identify IP Packets for this UNI
      Access Link. Reference MEF 61.1.1 Section 13.3 UNI Access Link Trunk
      Service Attributes
    type: object
    properties:
      trunkId:
        description:
          UNI Access Link Trunk Identifier. Reference MEF 61.1.1  described in
          section A1-1
        $ref: "#/definitions/IpUniAccessLinkTrunkIdentifier"
      demux:
        description:
          Value that is specific to each type of UNI Access Link Trunk and
          indicates which Layer 2 sub-channel should be selected for this UNI
          Access Link1
        $ref: "#/definitions/Demux"
  LacpVersion:
    type: object
    description:
      This is a 2-tuple <x,y> where x is a list of Port Conversation IDs or
      ranges of Port Conversation IDs (a Port Conversation ID is a VLAN ID or 0
      for untagged frames) and y is a list of Link Numbers. This is used in the
      Port Conversation to Aggregation Link Map for the UNI and ENNI.
    enum:
      - "LACPV1"
      - "LACPV2"
      - "STATIC"
  Ospf:
    description: >-
      When an entry in the UNI Routing Protocols is for OSPF, OSPF as specified
      in RFC 2328 (for IPv4) and/or RFC 5340 (for IPv6) is used across each UNI
      Access Link to exchange routing information. Reference MEF 61.1 Section
      12.7.2 OSPF.
    properties:
      areaId:
        description:
          Area ID (0-429967295), normally expressed as an IPv4 address.
        type: integer
        minimum: 0
        maximum: 429967295
      areaType:
        description: OSPF Area Type enumeration.
        $ref: "#/definitions/OspfAreaType"
      authenticationType:
        description: OSPF Authentication Type.
        $ref: "#/definitions/OspfAuthenticationType"
      helloInterval:
        description: Hello interval (0-65535, in seconds)
        type: integer
        minimum: 0
        maximum: 65535
      deadInterval:
        description: Dead interval (0-429496295, in seconds)
        type: integer
        minimum: 0
        maximum: 429967295
      retransmissionInterval:
        description: Retransmit interval (integer greater than 0, in seconds)
        type: integer
        minimum: 0
      administrativeDistance:
        description: Administrative distance (integer greater than 0)
        type: integer
        minimum: 0
    type: object
  OspfAreaType:
    description:
      OSPF Area Type enumeration. Reference MEF 61.1 Section 12.7.2 OSPF
    enum:
      - NORMAL
      - STUB
      - NSSA
    type: string
  OspfAuthenticationType:
    description: OSPF Authentication Type enumeration.
    enum:
      - NONE
      - PASSWORD
      - MESSAGE_DIGEST
    type: string
  PeeringAddress:
    description: >-
      Peering Addresses. Connection Addresses, or Loopbacks plus a list of pairs
      of IP addresses. Reference MEF 61.1 Section 12.7.3 BGP.
    properties:
      peeringAddressType:
        description: |
          If the Peering Addresses parameter is CONNECTION_ADDRESSES, a separate
          BGP peering session is established over each UNI Access Link, using
          the primary IPv4 addresses in the UNI Access Link IPv4 Connection
          Addressing Service Attribute (section 13.4) or the first IPv6
          addresses in the UNI Access Link IPv6 Connection Addressing Service
          Attribute (section 13.5), as indicated by the Connection Address
          Family parameter.
          If the Peering Addresses parameter is LOOPBACKS, a list of pairs of IP
          addresses is additionally specified, each pair containing the
          Subscriber's loopback address and the SP's or Operator's loopback
          address. A single BGP peering session is established for each pair of
          addresses.
        $ref: "#/definitions/PeeringAddressType"
      subscriberAndSpLoopbackAddresses:
        description:
          A list of pairs of IP addresses, each pair containing the Subscriber's
          loopback address and the SP's or Operator's loopback address. A single
          BGP peering session is established for each pair of addresses.
        items:
          $ref: "#/definitions/SubscriberAndSpLoopbackAddresses"
        type: array
    type: object
  PeeringAddressType:
    description: >
      If the Peering Addresses parameter is CONNECTION_ADDRESSES, a separate BGP
      peering session is established over each UNI Access Link, using the
      primary IPv4 addresses in the UNI Access Link IPv4 Connection Addressing
      Service Attribute (section 13.4) or the first IPv6 addresses in the UNI
      Access Link IPv6 Connection Addressing Service Attribute (section 13.5),
      as indicated by the Connection Address Family parameter. If the Peering
      Addresses parameter is LOOPBACKS, a list of pairs of IP addresses is
      additionally specified, each pair containing the Subscriber's loopback
      address and the SP's or Operator's loopback address. A single BGP peering
      session is established for each pair of addresses.
    enum:
      - CONNECTION_ADDRESSES
      - LOOPBACKS
  RoutingProtocols:
    description: >-
      Data type to support routing protocols and associated parameters that are
      used to exchange IP routes across the UNI. The value is a list of
      protocols (possibly empty), where each entry consists of the protocol name
      (one of Static, OSPF or BGP) the type of routes that will be exchanged
      (one of IPv4 or IPv6 or Both) and set of additional parameters as
      specified. Reference MEF 61.1 Section 12.7 UNI Routing Protocols Service
      Attributes.
    properties:
      bgp:
        description: BGP routing protocol configuration options.
        $ref: "#/definitions/RoutingProtocolsBgpOptions"
        nullable: true
      ospf:
        description: OSPF routing protocol configuration options.
        $ref: "#/definitions/RoutingProtocolsOspfOptions"
        nullable: true
      static:
        description: Static routing configuration options.
        $ref: "#/definitions/RoutingProtocolsStaticOptions"
        nullable: true
    type: object
  RoutingProtocolsBgpIpv4AndIpv6:
    description: >-
      Configuration for exchanging IPv4 and IPv6 types of routes.
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Bgp"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Bgp"
    required:
      - ipv4
      - ipv6
  RoutingProtocolsBgpOptions:
    description: |
      BGP routing protocol configuration options. The configuration of the BGP
      can be provided for the following type pf routes that will be exchanged:
      - ipv4, or
      - ipv6, or
      - both, or
      - ipv4 and ipv6
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Bgp"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Bgp"
      both:
        description: >-
          Configuration for exchanging both IPv4 and IPv6 types of routes.
        $ref: "#/definitions/Bgp"
      ipv4AndIpv6:
        description: >-
          Configuration for exchanging IPv4 and IPv6 types of routes.
        $ref: "#/definitions/RoutingProtocolsBgpIpv4AndIpv6"
    oneOf:
      - required: [ipv4]
      - required: [ipv6]
      - required: [both]
      - required: [ipv4AndIpv6]
  RoutingProtocolsOspfIpv4AndIpv6:
    description: >-
      Configuration for exchanging IPv4 and IPv6 types of routes.
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Ospf"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Ospf"
    required:
      - ipv4
      - ipv6
  RoutingProtocolsOspfOptions:
    description: |
      OSPF routing protocol configuration options. The configuration of the BGP
      can be provided for the following type pf routes that will be exchanged:
      - ipv4, or
      - ipv6, or
      - both, or
      - ipv4 and ipv6
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Ospf"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Ospf"
      both:
        description: >-
          Configuration for exchanging both IPv4 and IPv6 types of routes.
        $ref: "#/definitions/Ospf"
      ipv4AndIpv6:
        description: >-
          Configuration for exchanging IPv4 and IPv6 types of routes.
        $ref: "#/definitions/RoutingProtocolsOspfIpv4AndIpv6"
    oneOf:
      - required: [ipv4]
      - required: [ipv6]
      - required: [both]
      - required: [ipv4AndIpv6]
  RoutingProtocolsStaticIpv4AndIpv6:
    description: >-
      Configuration for exchanging IPv4 and IPv6 types of routes.
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Static"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Static"
    required:
      - ipv4
      - ipv6
  RoutingProtocolsStaticOptions:
    description: >-
      Static routing configuration options. The configuration of the BGP can be
      provided for the following type pf routes that will be exchanged: - ipv4,
      or - ipv6, or - both, or - ipv4 and ipv6
    properties:
      ipv4:
        description: >-
          Configuration for exchanging IPv4 types of routes.
        $ref: "#/definitions/Static"
      ipv6:
        description: >-
          Configuration for exchanging IPv6 types of routes.
        $ref: "#/definitions/Static"
      both:
        description: >-
          Configuration for exchanging both IPv4 and IPv6 types of routes.
        $ref: "#/definitions/Static"
      ipv4AndIpv6:
        description: >-
          Configuration for exchanging IPv4 and IPv6 types of routes.
        $ref: "#/definitions/RoutingProtocolsStaticIpv4AndIpv6"
    oneOf:
      - required: [ipv4]
      - required: [ipv6]
      - required: [both]
      - required: [ipv4AndIpv6]
  Static:
    description: >-
      When an entry in the UNI Routing Protocols list is for Static, the IP
      Prefixes used in the Subscriber Network that are reachable via this UNI
      are specified as additional parameters in the entry. These are known as
      Static IP Prefixes. Reference MEF 61.1 Section 12.7.1 Static.
    properties:
      staticIpEntry:
        description: Static IP address entry.
        items:
          $ref: "#/definitions/StaticIpEntry"
        minItems: 1
        type: array
    type: object
  StaticIpEntry:
    description: >-
      StaticIpEntry data type including IPv4/IPv6 prefixes, forwarding
      information and administrative distance.
    properties:
      administrativeDistance:
        description: Administrative distance, an integer > 0.
        type: integer
        minimum: 0
      forwardingInformation:
        description:
          Forwarding information with either Next Hop IP address or UNI Access
          Link identifier.
        $ref: "#/definitions/ForwardingInformation"
      staticPrefix:
        description: IPv4 or IPv6 Prefix that is advertised.
        $ref: "#/definitions/Ipv4OrIpv6Prefix"
    type: object
  SubscriberAndSpLoopbackAddresses:
    description: >-
      A list of pairs of IP addresses, each pair containing the Subscriber's
      loopback address and the SP's or Operator's loopback address. A single BGP
      peering session is established for each pair of addresses.
    properties:
      subscriberLoopbackAddress:
        description:
          Subscriber's loopback Address for BGP establishing a session
        $ref: "#/definitions/Ipv4OrIpv6Address"
      spLoopbackAddress:
        description:
          Service Provider's loopback Address for BGP establishing a session
        $ref: "#/definitions/Ipv4OrIpv6Address"
  SubscriberPrefixList:
    description: |
      The value of the Cloud Subscriber Prefix List parameter is None or a
      2-tuple ⟨prefixes, origin⟩, where: 
      - prefixes is a non-empty list of public IP Prefixes that are used
      in the Subscriber Network, and
      - origin is either `SP` or `Other` and indicates whether the
      IP Prefixes are assigned to the Subscriber by the SP or obtained
      by the Subscriber from another source.
      Reference MEF 61.1 Section 10.13.6 Cloud Subscriber Prefix List. 
      Reference MEF 61.1.1 Section 10.13	IPVC Cloud Service Attribute
    properties:
      prefixes:
        description:
          Non-empty list of public IP Prefixes that are used in the Subscriber
          Network
        type: array
        items:
          $ref: "#/definitions/Ipv4OrIpv6Prefix"
        minItems: 1
      origin:
        description:
          The origin of the IP Prefixes. Either `SP` or `Other` and indicates
          whether the IP Prefixes are assigned to the Subscriber by the SP or
          obtained by the Subscriber from another source.
        $ref: "#/definitions/IpPrefixOrigin"
  SynchronousEthernet:
    description:
      Enumeration indicating if the physical link supports Synchronous Ethernet.
    type: string
    enum:
      - "DISABLED"
      - "ESMC"
      - "NO_ESMC"
  TimeDuration:
    type: object
    description: >-
      This class is used to describe durations expressed as a 2-tuple, (value,
      units). The units from from nanoseconds to years.
    properties:
      timeDurationValue:
        description: >-
          The value of the duration. For example, if the duration is 20 ms, this
          element is 20.
        type: integer
        minimum: 0
      timeDurationUnits:
        description: >-
          The unit of measure in the duration. For example, if an interval is
          2ms, this element is MS.
        $ref: "#/definitions/TimeDurationUnits"
    required:
      - timeDurationValue
      - timeDurationUnits
  TimeDurationUnits:
    description: >-
      The unit of measure in the duration. For example, if an interval is 2ms,
      this element is MS.
        type: string
    enum:
      - "NS"
      - "US"
      - "MS"
      - "SEC"
      - "MIN"
      - "HOUR"
      - "DAY"
      - "WEEK"
      - "MONTH"
      - "YEAR"
    type: string
  UniAccessLinkEthernetLinkAggregation:
    description:
      Link Aggregation, as described in IEEE Std. 802.1AX-2020 allows one or
      more parallel instances of full-duplex point-to-point Ethernet links to be
      aggregated to form a Link Aggregation Group (LAG) such that the MAC Client
      (the UNI Access Link) can treat the LAG as if it were a single link.
      Reference MEF 61.1.1 Section A1-1.3.2 UNI Access Link Trunk Ethernet Link
      Aggregation Service Attribute.
    properties:
      lacpVersion:
        description:
          The value of LACPv1, LACPv2, or Static and indicates which version of
          the Link Aggregation Control Protocol, LACP, is used. (See clause 6.4
          in IEEE Std 802.1AX-2020 [A1-4].). If the value is Static, LACP is not
          used.
        $ref: "#/definitions/LacpVersion"
      portMap:
        description:
          A list of 2-tuples ⟨vid, lspl⟩ that represents a VLAN ID to
          Aggregation Link Map (in clause 6.6 of IEEE Std 802.1AX-2020 this is
          referred to as "Admin_Conv_Link_Map"). The first element, vid, is a
          VLAN ID, and the second element, lspl, (Link Selection Priority List)
          is a list of Link Number IDs.
        type: array 
        items:
          $ref: "#/definitions/ConversationIdToAggregationLinkMap"
    type: object
  UniAccessLinkTrunkType:
    description:
      Enumeration representing the UNI Access Link Trunk Type Service Attribute.
      MEF 61.1 Specifies value of ETHERNET and OTHER. Yet since OTHER means to
      practical implementation, only ETHERNET is used. The enumeration is
      remained though for future enhancements.
    type: string
    enum:
      - ETHERNET
  UniIpv4ConnectionAddressing:
    description: >-
      UniIpv4ConnectionAddressing is a data type representing how IPv4 addresses
      are allocated to the devices on the UNI Access Link. Reference MEF 61
      Section 13.4 UNI Access Link  IPv4 Connection Addressing Service
      Attribute. [R22] At a UNI Access Link in a UNI with an IPVC EP for an
      Advanced Internet Access Service, UNI Access Link IPv4 Connection
      Addressing MUST be Static or None. Reference MEF 69.1 Section 9.4
    properties:
      ipv4AddressingType:
        description: IPv4 Connection Addressing.
        $ref: "#/definitions/Ipv4AddressingType"
      ipv4PrimarySubnet:
        $ref: "#/definitions/Ipv4PrimarySubnet"
        description: >-
          Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider IPv4
          Addresses.
      ipv4SecondarySubnetList:
        description: >-
          Secondary IPv4 Subnet List. Includes IPv4 Prefix and Service Provider
          IPv4 Addresses.
        items:
          $ref: "#/definitions/Ipv4Subnet"
        type: array
    type: object
  UniIpv6ConnectionAddressing:
    description: >-
      UniIpv6ConnectionAddressing is a data type representing how IPv6 addresses
      are allocated to the devices on the UNI Access Link. Reference MEF 61
      Section 13.5  UNI Access Link IPv6 Connection Addressing Service
      Attribute. [R26] At a UNI Access Link in a UNI with an IPVC EP for an
      Advanced Internet Access Service, UNI Access Link IPv6 Connection
      Addressing MUST be Static or None. Reference MEF 69.1 Section 9.4
    properties:
      ipv6AddressingType:
        description: IPv6 Connection Addressing.
        $ref: "#/definitions/Ipv6AddressingType"
      subscriberIpv6Address:
        $ref: "#/definitions/Ipv6Address"
        description: Subscriber IPv6 address.
      ipv6Subnet:
        description: Ipv6 Subnet
        items:
          $ref: "#/definitions/Ipv6Subnet"
        type: array
    type: object
  UniManagementType:
    description: >-
      Enumeration representing the UNI Management Type options. Reference MEF
      61.1 Section 12.2 UNI Management Type Service Attribute.
    enum:
      - SUBSCRIBER_MANAGEMENT
      - PROVIDER_MANAGEMENT
    type: string
  Vrid:
    description:
      VRID (Virtual Router ID) as defined in RFC 5798 is a number between 1 and
      255
    maximum: 255
    minimum: 1
    type: integer
  VlanId:
    maximum: 4094
    minimum: 1
    type: integer
    description:
      Data type used for VLAN id configuration. Defined as a Integer, Value 1 to
      4094.
 