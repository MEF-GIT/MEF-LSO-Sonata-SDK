swagger: "2.0"
info:
  description: "**Product Order Management**\n\nThe scope of this API  introduces\
    \ the following capabilities to the API:\n•\tInstall order: request for new product\n\
    •\tChange Order: change an existing Product\n•\tDisconnect Order:  disconnect\
    \ an existing Product \n•\tCancel Order: cancellation of an inflight-order\n•\t\
    Support for Order Notifications\n\nThe buyer could also retrieve a single, or\
    \ set, of Product Orders based upon a specified filter.  \n\nFollowing feature\
    \ will be introduced in next release:\n•\tAmend Order: modification of an inflight-order\n\
    \nProduct Order API has been designed by MEF Sonata team and used TMF 622 as template.\n\
    \n"
  version: "3.0.1"
  title: "API ProductOrderManagement"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "serverRoot"
basePath: "/api/mef/productOrderManagement/v3/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "ProductOrder"
  description: "Product Order resource"
- name: "Hub"
  description: "Hub resource to manage notification subscription"
- name: "CancelProductOrder"
  description: "Request to cancel an order submitted by the buyer.\n\nSeller answers\
    \ with a cancel order request state + order state (could be CANCELLED, ASSESSING_CANCELLATION\
    \ or previous order state if seller did not accept cancellation request)."
paths:
  /productOrder:
    post:
      tags:
      - "ProductOrder"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOrderCreate"
      summary: "Create a product order"
      description: "This operation is used to create an order. Depending on the order\
        \ activity, one can \"INSTALL\", \"CHANGE\", or \"DISCONNECT\" an associated\
        \ product."
      deprecated: false
      parameters:
      - name: "ProductOrder"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/ProductOrder_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ProductOrder"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\n\n \n\n\n - code:\
            \ 100\nmessage: Missing order item (minimum 1)\ndescription: At least\
            \ one order item must be provided\n\n\n - code: 101\nmessage: Missing\
            \ Buyer at order level\ndescription: One and only one related partyRole\
            \ with a \"Buyer\" role should be provided at the product order level.\n\
            \n\n - code: 114\nmessage: Missing Seller at order level\ndescription:\
            \ One and only one related partyRole with a \"Seller\" role should be\
            \ provided at the product order level.\n\n\n - code: 102\nmessage: A relatedParty\
            \ is at the wrong level\ndescription: The partyRole provided is not at\
            \ the correct level - MEF allows to have\n\"Buyer\", \"Seller\", \"Billing\
            \ Contact\", \"Order Contact\", \"Implementation Contact\", \"Technical\
            \ Contact\" roles at product order level and \"UNI Site Contact\", \"\
            UNI Alt Site Contact\", \"ENNI Site Contact\", \"ENNI Alt Site Contact\"\
            \ at product order item level.\n\n\n - code: 103\nmessage: Missing Buyer\
            \ Order Contact at order level\ndescription: One and only one related\
            \ partyRole with a \"Order Contact\" role should be provided at the product\
            \ order level.\nBuyer Order Contact name & Telephone number must be provided.\n\
            \n\n - code: 104\nmessage: Missing Buyer Implementation Contact at order\
            \ level\ndescription: One and only one related partyRole with a \"Implementation\
            \ Contact\" role should be provided at the product order level.\nImplementation\
            \ Contact name & Telephone number must be provided.\n\n\n - code: 105\n\
            message: Missing Buyer Technical contact at order level\ndescription:\
            \ One and only one related partyRole with a \"Technical Contact\" role\
            \ should be provided at the product order level.\nTechnical Contact name,\
            \ Telephone number and email address must be provided.\n\n\n - code: 106\n\
            message: Address information must match place type\ndescription: If place\
            \ type is 'Formatted Address' : addrLine1, city, stateOrProvince, postCode\
            \ and country must be there.\nIf place type is 'Fielded Address' : streetName,\
            \ streetType, city, stateOrProvince, postCode and country must be there.\n\
            \n\n - code: 107\nmessage: postCode extension requires postcode value\
            \ to be filled\ndescription: A postCode extension must not be present\
            \ without a postcode being present\n\n\n - code: 108\nmessage: Product\
            \ id is required for all OrderItem Actions other than INSTALL\ndescription:\
            \ If orderItemAction is not INSTALL, orderItem.product.id is mandatory\n\
            \n\n - code: 109\nmessage: Order Activity must match all OrderItem Actions\
            \ for INSTALL\ndescription: If orderActivity is set to INSTALL, all orderItemAction\
            \ must be INSTALL\n\n\n - code: 110\nmessage: Referred quote cannot be\
            \ used for ordering due to its status\ndescription: Quote cannot be used\
            \ in the order if its status is in CANCELLED, UNABLE TO PROVIDE, REJECTED\
            \ or EXPIRED state.\n\n\n - code: 111\nmessage: Billing Account information\
            \ must not be both at order level and order item level\ndescription: Billing\
            \ Account must not be present both at order header level and order item\
            \ level.\n\n\n - code: 112\nmessage: PricingMethod, pricing Reference\
            \ & pricing term attributes  must not be both at order level and order\
            \ item level\ndescription: Pricing data  must not be present both at order\
            \ header level and order item level.\n\n\n - code: 113\nmessage: Referred\
            \ Serviceability request is expired\ndescription: Serviceability information\
            \ are expired.\n\n\n - code: 114\nmessage: A reccuring price is mentionned\
            \ without a charge period.\ndescription: \n\n\n - code: 115\nmessage:\
            \ Referred Quote is not existing\ndescription: \n\n\n - code: 116\nmessage:\
            \ Referred ProductOfferingQualification is not existing\ndescription:\
            \ \n\n\n - code: 117\nmessage: Product /item relationship is missing\n\
            description: \n\n\n - code: 118\nmessage: Product Id refered in a relationship\
            \ is not existing\ndescription: "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "ProductOrder"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOrderFind"
      summary: "Find a list of product order(s)"
      description: "This operation is used to retrieve one or more product orders\
        \ based upon filter criteria specified on input."
      deprecated: false
      parameters:
      - name: "buyerId"
        required: false
        in: "query"
        description: "A Party Role played by an Individual or an Organization that\
          \ buys products and services from a Seller. Specifically, the ID of the\
          \ Service Provider (Buyer) organization placing the order."
        type: "string"
      - name: "sellerId"
        required: false
        in: "query"
        description: "A Party Role played by an organization that provides products\
          \ and services to a Buyer.\nSpecifically, the ID of the Partner/Access Provider\
          \ (Seller) organization receiving the order."
        type: "string"
      - name: "state"
        required: false
        in: "query"
        description: "The status of the order"
        type: "string"
      - name: "buyerRequestedDate.gt"
        required: false
        in: "query"
        description: "Buyer requested date greater than"
        type: "string"
        format: "date-time"
      - name: "buyerRequestedDate.lt"
        required: false
        in: "query"
        description: "Buyer requested date lesser than"
        type: "string"
        format: "date-time"
      - name: "orderDate.gt"
        required: false
        in: "query"
        description: "Date when the order was created greater than"
        type: "string"
        format: "date-time"
      - name: "orderDate.lt"
        required: false
        in: "query"
        description: "Date when the order was created lesser than"
        type: "string"
        format: "date-time"
      - name: "requestedStartDate.gt"
        required: false
        in: "query"
        description: "Buyer requested start date greater than"
        type: "string"
        format: "date-time"
      - name: "requestedStartDate.lt"
        required: false
        in: "query"
        description: "Buyer requested start date lesser than"
        type: "string"
        format: "date-time"
      - name: "requestedCompletionDate.gt"
        required: false
        in: "query"
        description: "Identifies the Buyer's desired due date (requested delivery\
          \ date) greater than"
        type: "string"
        format: "date-time"
      - name: "requestedCompletionDate.lt"
        required: false
        in: "query"
        description: "Identifies the Buyer's desired due date (requested delivery\
          \ date) lesser than"
        type: "string"
        format: "date-time"
      - name: "expectedCompletionDate.gt"
        required: false
        in: "query"
        description: "Seller planned completion date greater than"
        type: "string"
        format: "date-time"
      - name: "expectedCompletionDate.lt"
        required: false
        in: "query"
        description: "Seller planned completion date lesser than"
        type: "string"
        format: "date-time"
      - name: "completionDate.gt"
        required: false
        in: "query"
        description: "Effective completion date greater than"
        type: "string"
        format: "date-time"
      - name: "completionDate.lt"
        required: false
        in: "query"
        description: "Effective completion date lesser than"
        type: "string"
        format: "date-time"
      - name: "orderCancellationDate.gt"
        required: false
        in: "query"
        description: "order cancellation date greater than"
        type: "string"
        format: "date-time"
      - name: "orderCancellationDate.lt"
        required: false
        in: "query"
        description: "order cancellation date lesser than"
        type: "string"
        format: "date-time"
      - name: "siteName"
        required: false
        in: "query"
        description: "A name by which the site is known."
        type: "string"
      - name: "siteCompanyName"
        required: false
        in: "query"
        description: "The name of the company that is located at the service location.\
          \  This may be different from the name of the Buyer that ordered services\
          \ at that site."
        type: "string"
      - name: "siteCustomerName"
        required: false
        in: "query"
        description: "The customer name at a site where the service is being delivered"
        type: "string"
      - name: "projectId"
        required: false
        in: "query"
        description: "An identifier that is used to group Orders that represent a\
          \ unit of functionality that is important to a Buyer."
        type: "string"
      - name: "externalId"
        required: false
        in: "query"
        description: "A number that uniquely identifies an order within the Buyer's\
          \ enterprise."
        type: "string"
      - name: "offset"
        required: false
        in: "query"
        description: "Requested index for start of resources to be provided in response\
          \ requested by client"
        type: "string"
      - name: "limit"
        required: false
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client"
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductOrderSummary"
          headers:
            X-Total-Count:
              description: "The total number of matching resources"
              type: "integer"
              format: "int32"
            X-Result-Count:
              description: "The number of resources retrieved in the response"
              type: "integer"
              format: "int32"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\n\n \n\n\n - code:\
            \ 100\nmessage: Too many records retrieved - please restrict requested\
            \ parameter value(s)\ndescription: "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrder/{ProductOrderId}:
    get:
      tags:
      - "ProductOrder"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOrderGet"
      summary: "Get a product order (by id)"
      description: "This operation is used to retrieve a single product order based\
        \ upon a specified product order id."
      deprecated: false
      parameters:
      - name: "ProductOrderId"
        required: true
        in: "path"
        description: ""
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ProductOrder"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub:
    post:
      tags:
      - "Hub"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubCreate"
      summary: "Create a Hub"
      description: "Structure used to create a hub (to subscribe to notification)"
      deprecated: false
      parameters:
      - name: "Hub"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/HubInput"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "Hub"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubFind"
      summary: "Find a list of Hub"
      description: "Find Hub"
      deprecated: false
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub/{HubId}:
    delete:
      tags:
      - "Hub"
      operationId: "hubDelete"
      summary: "Delete a Hub"
      description: "Delete Hub"
      deprecated: false
      parameters:
      - name: "HubId"
        required: true
        in: "path"
        description: ""
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /cancelProductOrder:
    post:
      tags:
      - "CancelProductOrder"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "cancelProductOrderCreate"
      summary: "Create product order cancellation request"
      description: "This operation allows buyer to request a product order cancellation\
        \ request "
      deprecated: false
      parameters:
      - name: "CancelProductOrder"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/CancelProductOrder_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CancelProductOrder"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\n\n \n\n\n - code:\
            \ 100\nmessage: externalId must be provided\ndescription: \n\n\n - code:\
            \ 101\nmessage: externalId does not match productOrderId\ndescription:\
            \ \n\n\n - code: 102\nmessage: Product order state is not compliant with\
            \ this request\ndescription: "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "CancelProductOrder"
      produces:
      - "application/json;charset=utf-8"
      operationId: "cancelProductOrderFind"
      summary: "Find a lost of product order cancellation request(s)"
      description: "This operation allows buyer to retrieve a list of product order\
        \ cancellation request"
      deprecated: false
      parameters:
      - name: "productOrderId"
        required: false
        in: "query"
        description: ""
        type: "string"
      - name: "productOrderExternalId"
        required: false
        in: "query"
        description: ""
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CancelProductOrder"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /cancelProductOrder/{CancelProductOrderId}:
    get:
      tags:
      - "CancelProductOrder"
      produces:
      - "application/json;charset=utf-8"
      operationId: "cancelProductOrderGet"
      summary: "Get a product order cancellation request (by id)"
      description: "This operation allows buyer to retrieve one product order cancellation\
        \ request"
      deprecated: false
      parameters:
      - name: "CancelProductOrderId"
        required: true
        in: "path"
        description: ""
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/CancelProductOrder"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  DesiredOrderResponses:
    description: "The kind of responses that the buyer expects to receive from the\
      \ seller."
    type: "string"
    enum:
    - "confirmationAndEngineeringDesign"
    - "confirmationOnly"
    - "none"
  OrderActivity:
    description: "The type of order as defined by the business."
    type: "string"
    enum:
    - "install"
    - "change"
    - "disconnect"
  ProductActionType:
    description: "An enumeration of valid product actions"
    type: "string"
    enum:
    - "add"
    - "change"
    - "remove"
    - "noChange"
  PricingMethod:
    description: "An enumeration of valid pricing methods for ordered items"
    type: "string"
    enum:
    - "tariff"
    - "contract"
    - "individualCaseBasis"
    - "other"
  Severity:
    description: "Severity of the order message"
    type: "string"
    enum:
    - "error"
    - "information"
  ProductOrderStateType:
    description: "An enumeration of valid order states"
    type: "string"
    enum:
    - "acknowledged"
    - "rejected"
    - "inProgress"
    - "pending"
    - "held"
    - "assessingCancellation"
    - "pendingCancellation"
    - "cancelled"
    - "inProgress.configured"
    - "inProgress.confirmed"
    - "inProgress.jeopardy"
    - "failed"
    - "partial"
    - "completed"
  ProductOrderItemStateType:
    description: "An enumeration of valid order item statuses."
    type: "string"
    enum:
    - "acknowledged"
    - "rejected"
    - "inProgress"
    - "pending"
    - "held"
    - "assesssingCancellation"
    - "pendingCancellation"
    - "cancelled"
    - "inProgress.configured"
    - "failed"
    - "completed"
  PriceType:
    description: "Type of price (as of now only recurring and non-recurring are managed)"
    type: "string"
    enum:
    - "recurring"
    - "nonRecurring"
  ChargePeriod:
    description: "Used to describe a charge period for recurring one"
    type: "string"
    enum:
    - "day"
    - "week"
    - "month"
    - "year"
  TaskStateType:
    description: ""
    type: "string"
    enum:
    - "acknowledged"
    - "inProgress"
    - "done"
    - "terminatedWithError"
  ErrorRepresentation:
    description: "Class used to describe API response error"
    required:
    - "code"
    - "reason"
    type: "object"
    properties:
      code:
        description: "Application related code (as defined in the API or from a common\
          \ list)"
        type: "integer"
        format: "int32"
      reason:
        description: "Text that explains the reason for error. This can be shown to\
          \ a client user."
        type: "string"
      message:
        description: "Text that provide more details and corrective actions related\
          \ to the error. This can be shown to a client user."
        type: "string"
      status:
        description: "http error code extension like 400-2"
        type: "integer"
        format: "int32"
      referenceError:
        description: "url pointing to documentation describing the error"
        type: "string"
      '@type':
        description: "The class type of a REST resource."
        type: "string"
      '@schemaLocation':
        description: "it provides a link to the schema describing a REST resource."
        type: "string"
  BillingAccountRef:
    description: "References the billing  arrangement that a buyer has with a seller\
      \ that provides products to the customer."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Identifies the buyer’s billing account to which the recurring\
          \ and non-recurring charges for this order or order item will be billed.\n\
          If the value ‘NEW’ is provided it means that buyer request a new BAN."
        type: "string"
      billingContact:
        $ref: "#/definitions/Contact"
  RelatedPlaceReforValue:
    description: "Place defines the places where the ordered products are sold or\
      \ delivered.\nThis is an abstract class that allow to define a role for a defined\
      \ location structure: fielded address, formatted address, geocode, service site\
      \ or references address. \nThis class features also site information attributes\
      \ valued bu the buyer and used by the seller in the site resource."
    discriminator: "@type"
    required:
    - "role"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the place."
        type: "string"
      href:
        description: "Reference link to the place"
        type: "string"
      role:
        description: "The role that the place plays, e.g. \"UNI Site\", or \"ENNI\
          \ Site\"."
        type: "string"
      '@type':
        description: "The type to which the place is referring. This may be \"Site\"\
          , \"FormattedAddress\", \"FieldedAddress\", \"ReferencedAddress\", or \"\
          GeographicLocation"
        type: "string"
      siteName:
        description: "A name commonly used by people to refer to this Service Site."
        type: "string"
      siteCompanyName:
        description: "The name of the company that is the administrative authority\
          \ (e.g. controls access) for this Service Site. (For example, the building\
          \ owner)."
        type: "string"
      siteCustomerName:
        description: "The name of the company that is the administrative authority\
          \ for the space within this Service Site. (For example, the company leasing\
          \ space in a multi-tenant building)."
        type: "string"
      additionalSiteInformation:
        description: "Additional information about the Site."
        type: "string"
      siteDescription:
        description: "A textual description of the Service Site."
        type: "string"
  ProductOrder:
    description: "A ProductOrder is a type of business interaction that is used to\
      \ procure a Product based upon a Product Offering."
    required:
    - "id"
    - "href"
    - "externalId"
    - "orderDate"
    - "state"
    - "requestedCompletionDate"
    - "orderActivity"
    - "desiredResponses"
    - "orderVersion"
    - "relatedParty"
    - "orderItem"
    type: "object"
    properties:
      id:
        description: "Unique (within the ordering domain) identifier for the order\
          \ that is generated by the seller when the order is initially accepted."
        type: "string"
      href:
        description: "Hyperlink to access the order"
        type: "string"
      externalId:
        description: "A number that uniquely identifies an order within the buyer's\
          \ enterprise."
        type: "string"
      orderDate:
        description: "Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)"
        type: "string"
        format: "date-time"
      buyerRequestDate:
        description: "Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g.\
          \ 1997-07-16T19:20+01:00)"
        type: "string"
        format: "date-time"
      state:
        $ref: "#/definitions/ProductOrderStateType"
      requestedStartDate:
        description: "The buyer's requested date that order processing should start.\
          \ Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      requestedCompletionDate:
        description: "Identifies the buyer's desired due date (requested delivery\
          \ date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      expectedCompletionDate:
        description: "Expected delivery date amended by the provider"
        type: "string"
        format: "date-time"
      completionDate:
        description: "The date the order is completed. Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)"
        type: "string"
        format: "date-time"
      cancellationDate:
        description: "Identifies the date the Seller canceled the Order"
        type: "string"
        format: "date-time"
      cancellationReason:
        description: "Indicates reason why buyer requested cancellation"
        type: "string"
      expeditePriority:
        description: "Indicates that expedited treatment is requested and any charges\
          \ generated in provisioning this request (e.g., additional engineering charges\
          \ or labor charges if applicable) will be accepted by the buyer."
        type: "boolean"
      priority:
        description: "An integer that specifies that expedited treatment is to be\
          \ provided in a specific priority.\nThis field will be ignored if the Expedite/Priority\
          \ Indicator is False.\nThe valid values and the business/operational rules\
          \ for this field will be defined by the Seller as part of the contracting\
          \ or on-boarding process."
        type: "integer"
        format: "int32"
      orderActivity:
        $ref: "#/definitions/OrderActivity"
      desiredResponses:
        $ref: "#/definitions/DesiredOrderResponses"
      orderVersion:
        description: "The version number that the Buyer uses to refer to this particular\
          \ version of the order"
        type: "string"
        default: "1"
      projectId:
        description: "An identifier that is used to group Orders that is important\
          \ to the Buyer. A ProjectId can be used to relate multiple Orders together"
        type: "string"
      tspRestorationPriority:
        description: "Within the United States, indicates the provisioning and restoration\
          \ priority as defined under the TSP Service Vendor Handbook, The valid values\
          \ are defined in ATIS OBF document: ATIS-0404001"
        type: "string"
      relatedBuyerPON:
        description: "Related Buyer Purchase Order Number (RPON)"
        type: "string"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing\
          \ terms, as applicable, based on the pricingMethod (e.g. a contract id or\
          \ tariff id."
        type: "string"
      pricingTerm:
        description: "The length of the contract in months."
        type: "integer"
        format: "int32"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      orderItem:
        type: "array"
        items:
          $ref: "#/definitions/OrderItem"
        minItems: 1
      orderMessage:
        type: "array"
        items:
          $ref: "#/definitions/OrderMessage"
      stateChange:
        type: "array"
        items:
          $ref: "#/definitions/StateChange"
      '@type':
        description: "Technical attribute to extend the API"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend the API"
        type: "string"
      '@baseType':
        description: "Technical attribute to extend the API"
        type: "string"
  Note:
    description: "Free form text to clarify or explain the order."
    required:
    - "text"
    - "date"
    - "author"
    type: "object"
    properties:
      text:
        description: "The text of the note"
        type: "string"
      date:
        description: "The date of the note. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      author:
        description: "The author of the note"
        type: "string"
  OrderItem:
    description: "An enumeration of the entities that are part of this order expressed\
      \ in terms of a Product Offering or a Product (for a change order)."
    required:
    - "id"
    - "action"
    - "state"
    type: "object"
    properties:
      id:
        description: "Identifier of the line item (generally it is a sequence number\
          \ 01, 02, 03, ...)"
        type: "string"
      action:
        $ref: "#/definitions/ProductActionType"
      state:
        $ref: "#/definitions/ProductOrderItemStateType"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing\
          \ terms, as applicable, based on the pricingMethod (e.g. a contract id or\
          \ tariff id."
        type: "string"
      pricingTerm:
        description: "The length of the contract in months"
        type: "integer"
        format: "int32"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      orderItemPrice:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemPrice"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
      product:
        $ref: "#/definitions/Product"
      orderItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemRelationShip"
      qualification:
        $ref: "#/definitions/QualificationRef"
      quote:
        $ref: "#/definitions/QuoteRef"
      stateChange:
        type: "array"
        items:
          $ref: "#/definitions/StateChange"
      '@type':
        description: "Type of productOrder"
        type: "string"
      '@schemaLocation':
        description: "Target a description file of productOrder extension"
        type: "string"
  OrderItemPrice:
    description: "Structure used to define a product price.\nAn order item could have\
      \ 0-* order item price."
    required:
    - "priceType"
    - "name"
    - "price"
    type: "object"
    properties:
      priceType:
        $ref: "#/definitions/PriceType"
      recurringChargePeriod:
        $ref: "#/definitions/ChargePeriod"
      name:
        description: "Name of the product price"
        type: "string"
      description:
        description: "A narrative that explains in detail the semantics of yhis order\
          \ item price"
        type: "string"
      price:
        $ref: "#/definitions/Price"
      '@type':
        description: "Technical attribute to extend the class"
        type: "string"
  ProductOfferingRef:
    description: "The commercial and technical details of a Product sold by a particular\
      \ Seller.  A Product Offering defines all of the commercial terms and, through\
      \ association with a particular Product Specification, defines all the technical\
      \ attributes and behaviors of the Product. A Product Offering may constrain\
      \ the allowable set of configurable technical attributes and/or behaviors specified\
      \ in the associated Product Specification"
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "A unique product offering identifier. This identifier is provided\
          \ by the seller and communicated to the buyer"
        type: "string"
  Product:
    description: "One or more services sold to a Buyer by a Seller.  A particular\
      \ Product Offering defines the technical and commercial attributes and behav-iors\
      \ of a Product."
    type: "object"
    properties:
      id:
        description: "Unique (within the product domain) identifier for the product\
          \ that is generated by the seller when the product is instantiated."
        type: "string"
      href:
        description: ""
        type: "string"
      buyerProductId:
        description: "Buyer product Id - informative information"
        type: "string"
      productSpecification:
        $ref: "#/definitions/ProductSpecificationRef"
      place:
        type: "array"
        items:
          $ref: "#/definitions/RelatedPlaceReforValue"
      productRelationship:
        type: "array"
        items:
          $ref: "#/definitions/ProductRelationship"
      characteristics:
        $ref: '#/definitions/ProductCharacteristics'
  ProductCharacteristics:
    title: ProductCharacteristics
    type: object
    discriminator: '@type'
    properties:
      '@type':
        type: string
      '@schemaLocation':
        type: string
    required:
      - '@type'
  OrderItemRelationShip:
    description: "This class allows the ability to associate one order item to another\
      \ order item."
    required:
    - "type"
    - "id"
    type: "object"
    properties:
      type:
        description: "Indicates the type of order item relationship"
        type: "string"
      id:
        description: "The id of the targeted order item by the relationship"
        type: "string"
      productOrderId:
        description: "Id of another product order if this relationship is between\
          \ two distinct orders."
        type: "string"
  ProductRelationship:
    description: "Indicates a relationship between products."
    required:
    - "type"
    - "product"
    type: "object"
    properties:
      type:
        description: "Indicates whether the product is \"bundled\", \"relies on\"\
          , or \"comesFrom\" another product."
        type: "string"
      product:
        $ref: "#/definitions/ProductRef"
  ProductRef:
    description: "Targeted existing product used in product relationship description."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Targeted Seller product id"
        type: "string"
      href:
        description: "Hyperlink to the product in the inventory"
        type: "string"
      buyerProductId:
        description: "Targeted Buyer product id - Informative."
        type: "string"
  Hub:
    description: "This resource is used to manage notification subscription."
    required:
    - "id"
    - "query"
    - "callback"
    type: "object"
    properties:
      id:
        description: "id of the Hub"
        type: "string"
      query:
        description: "attribute selection & search criteria"
        type: "string"
      callback:
        description: "callback urn, for instance an url http://yourdomain/listener/api/v1/event"
        type: "string"
  Price:
    description: "Provides pre tax & tax included amount for an ordered product"
    required:
    - "taxIncludedAmount"
    - "dutyFreeAmount"
    - "taxRate"
    type: "object"
    properties:
      taxIncludedAmount:
        $ref: "#/definitions/Money"
      dutyFreeAmount:
        $ref: "#/definitions/Money"
      taxRate:
        description: ""
        type: "number"
        format: "float"
      unitOfMesure:
        description: ""
        type: "string"
      '@type':
        description: "Technical attribute to extend the class."
        type: "string"
  QualificationRef:
    description: "Using to refer a serviceability request previously done"
    type: "object"
    properties:
      id:
        description: "id of the qualification previously done for this item"
        type: "string"
      href:
        description: "Hyperlink to the qualification previously done for this item"
        type: "string"
      qualificationItem:
        description: "item id of the qualification previously done for this item"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend the API"
        type: "string"
  RelatedParty:
    description: "An entity or organization that is involved in the product order,\
      \ such as the buyer, the seller, the order contact, etc."
    required:
    - "id"
    - "role"
    - "name"
    - "number"
    type: "object"
    properties:
      id:
        description: "An identifier of the related party. For the \"buyer\" and \"\
          seller\" id, this is a  Carrier ID number provided by local regulatory entity.\
          \  Unique in the local jurisdiction."
        type: "string"
      role:
        description: "Role payed by this party for this Order/OrderItem. It could\
          \ be at : BuyerOrderContact (header), BuyerImplementationContact, BuyerTechnicalContact,\
          \ UNISiteContact (item), AlternateSiteContact, Buyer (header), Seller(header),\
          \ ENNISiteContact(item), ENNIAlternateSiteContact(item)"
        type: "array"
        items:
          type: "string"
        minItems: 1
      name:
        description: "The name of the related party, e.g. \"Jean Pontus\"."
        type: "string"
      emailAddress:
        description: "The email address of the related party."
        type: "string"
      number:
        description: "The telephone number of the related party."
        type: "string"
      numberExtension:
        description: "Phone number Extension"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend the API"
        type: "string"
  ProductOrder_Create:
    description: "A CreateProductOrder object is provided as input to the product\
      \ order create operation."
    required:
    - "externalId"
    - "buyerRequestDate"
    - "requestedCompletionDate"
    - "orderActivity"
    - "desiredResponse"
    - "orderVersion"
    - "relatedParty"
    - "orderItem"
    type: "object"
    properties:
      externalId:
        description: "Buyer Purchase Order Number: A number that uniquely identifies\
          \ an order within the Buyer's enterprise"
        type: "string"
      buyerRequestDate:
        description: "Date when the order was submitted by the Buyer to the Seller"
        type: "string"
        format: "date-time"
      requestedCompletionDate:
        description: "Identifies the Buyer's desired due date (requested delivery\
          \ date)"
        type: "string"
        format: "date-time"
      requestedStartDate:
        description: "If specified, identifies the Buyer's desired date for order\
          \ processing to start"
        type: "string"
        format: "date-time"
      expeditePriority:
        description: "Indicates that expedited treatment is requested and any charges\
          \ generated in provisioning this request (e.g., additional engineering charges\
          \ or labor charges if applicable) will be accepted by the buyer."
        type: "boolean"
      priority:
        description: "An integer that specifies that expedited treatment is to be\
          \ provided in a specific priority."
        type: "integer"
        format: "int32"
      orderActivity:
        $ref: "#/definitions/OrderActivity"
      desiredResponse:
        $ref: "#/definitions/DesiredOrderResponses"
      orderVersion:
        description: "Buyer Order Version: The version number that the Buyer uses\
          \ to refer to this particular version of the order."
        type: "string"
      projectId:
        description: "An identifier that is used to group Orders that is important\
          \ to the Buyer. A ProjectId can be used to relate multiple Orders together."
        type: "string"
      tspRestorationPriority:
        description: "Within the United States, indicates the provisioning and restoration\
          \ priority as defined under the TSP Service Vendor Handbook."
        type: "string"
      relatedBuyerPON:
        description: "Related Buyer Purchase Order Number (RPON) - Identifies the\
          \ Buyer Purchase Order Number that is related to this order."
        type: "string"
      '@type':
        description: "Technical attribute to extend API"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend API"
        type: "string"
      '@baseType':
        description: "Technical attribute to extend API"
        type: "string"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing\
          \ terms, as applicable, based on the pricingMethod (e.g. a contract id or\
          \ tariff id."
        type: "string"
      pricingTerm:
        description: "The length of the contract in months"
        type: "integer"
        format: "int32"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      orderItem:
        type: "array"
        items:
          $ref: "#/definitions/ProductOrderItem_Create"
        minItems: 1
  ProductSpecificationRef:
    description: "A structured set of well-defined technical attributes and/or behaviors\
      \ that are used to construct a Product Offering for sale to a market."
    type: "object"
    properties:
      id:
        description: "A unique identifier for the product spec, within the product\
          \ spec domain. It is assigned by the seller and communicated to the buyer\
          \ at on-boarding time."
        type: "string"
      describing:
        $ref: "#/definitions/Describing"
  Describing:
    description: "Polymorphic class to describe request product attribute"
    type: "object"
    properties:
      '@type':
        description: "Type of the product"
        type: "string"
      '@schemaLocation':
        description: "URL targeting where product description is stored"
        type: "string"
  ProductOrderItem_Create:
    description: "A ProductOrderItem_Create object is provided as input to the product\
      \ order item create operation."
    required:
    - "id"
    - "action"
    - "productOffering"
    type: "object"
    properties:
      id:
        description: "Identifier of the line item (generally it is a sequence number\
          \ 01, 02, 03, ...)"
        type: "string"
      action:
        $ref: "#/definitions/ProductActionType"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing\
          \ terms, as applicable, based on the pricingMethod (e.g. a contract id or\
          \ tariff id."
        type: "string"
      pricingTerm:
        description: "The length of the contract in months"
        type: "integer"
        format: "int32"
        minimum: 0
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      orderItemPrice:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemPrice"
        minItems: 1
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
      product:
        $ref: "#/definitions/Product"
      orderItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemRelationShip"
      qualification:
        $ref: "#/definitions/QualificationRef"
      quote:
        $ref: "#/definitions/QuoteRef"
      '@type':
        description: "Technical attribute to extend API"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend API"
        type: "string"
  ProductOrderSummary:
    description: "Structure to define GET without id response. A list of productOrder\
      \ matching request criteria. Provides Product order summary view."
    required:
    - "id"
    - "externalId"
    - "orderDate"
    - "state"
    type: "object"
    properties:
      id:
        description: "ID created on repository side (OM system)\nMEF: Unique identifier\
          \ for the order that is generated by the Seller when the order is initially\
          \ accepted via an API."
        type: "string"
      externalId:
        description: "ID given by the consumer and only understandable by him (to\
          \ facilitate his searches afterwards).\nMEF: Buyer Purchase Order Number"
        type: "string"
      orderDate:
        description: "Date when the order was created"
        type: "string"
        format: "date-time"
      state:
        $ref: "#/definitions/ProductOrderStateType"
  CancelProductOrder:
    description: "Structure to allow Seller to answer to a cancel order request"
    required:
    - "id"
    - "state"
    - "requestedCancellationDate"
    - "productOrder"
    type: "object"
    properties:
      id:
        description: "Unique identifier for the order cancellation request that is\
          \ generated by the Seller when the order cancellation is accepted via an\
          \ API. This is not the order id."
        type: "string"
      href:
        description: "Hyperlink to access order cancellation request.This is not a\
          \ product order href."
        type: "string"
      state:
        $ref: "#/definitions/TaskStateType"
      requestedCancellationDate:
        description: "Identifies the date the Seller cancelled the Order."
        type: "string"
        format: "date-time"
      cancellationReason:
        description: "An optional free-form text field for the Seller to provide additional\
          \ information regarding the reason for the cancellation."
        type: "string"
      cancellationDeniedReason:
        description: "If seller denied cancellation request he could here provide\
          \ reason for this denial"
        type: "string"
      productOrder:
        $ref: "#/definitions/ProductOrderRefCancel"
      '@type':
        description: "Technical attribute to extend this class."
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class."
        type: "string"
  OrderMessage:
    description: "An optional array of messages associated with the Order"
    required:
    - "messageInformation"
    - "severity"
    type: "object"
    properties:
      code:
        description: "The code associated with the Message"
        type: "string"
      field:
        description: "The field/attribute on the Order associated with message"
        type: "string"
      messageInformation:
        description: "A description of the error condition or information to be conveyed\
          \ to the Buyer"
        type: "string"
      severity:
        $ref: "#/definitions/Severity"
      correctionRequired:
        description: "Indicates whether the Buyer must submit an updated Order to\
          \ resolve the Error/Jeopardy condition."
        type: "boolean"
        default: false
  QuoteRef:
    description: "Quote used before this order to define pricing terms"
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Unique identifier for the Quote that is generated by the Seller\
          \ when the Quote is initially accepted via an API."
        type: "string"
      href:
        description: "Hyperlink to access the quote (using MEF quote API)"
        type: "string"
      quoteItem:
        description: "Identifier of the quote item"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend the API"
        type: "string"
  HubInput:
    description: "This class is used to request a HUB creation - Used in the POST\
      \ operation"
    required:
    - "query"
    - "callback"
    type: "object"
    properties:
      query:
        description: "This attribute is used to define notification type. Example:\
          \ \",\"query\":”eventType = ProductOrderStateChangeNotification”}"
        type: "string"
      callback:
        description: "This attribute is the callback url where event will be sent\
          \ when occurs, for instance an url http://yourdomain/listener/api/v1/event"
        type: "string"
  Contact:
    description: "Contact allow to capture contact information. It is used to capture\
      \ billing account contact information"
    required:
    - "contactName"
    - "phoneNumber"
    - "emailAdress"
    - "streetAdress"
    type: "object"
    properties:
      contactName:
        description: "Identifies the name of the person or office to be contacted\
          \ on billing matters."
        type: "string"
      '@referredType':
        description: "Technical attribut to extend API"
        type: "string"
      phoneNumber:
        description: "Identifies the telephone number (excluding extension) of the\
          \ billing contact"
        type: "string"
      phoneNumberExtension:
        description: "Identifies the telephone number extension of the billing contact"
        type: "string"
      emailAdress:
        description: "Identifies the electronic mail address of the Billing Contact\
          \ when a Buyer profile does not already exist."
        type: "string"
      streetAdress:
        description: "Identifies the address of the person or office to be contacted\
          \ on billing matters."
        type: "string"
  SubUnit:
    description: ""
    required:
    - "subUnitType"
    - "subUnitIdentifier"
    type: "object"
    properties:
      subUnitType:
        description: "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
          \ UNIT, WHARF."
        type: "string"
      subUnitIdentifier:
        description: "The discriminator used for the subunit, often just a simple\
          \ number but may also be a range."
        type: "string"
  GeographicSubAddress:
    description: "It is used for addressing within a property in an urban area (country\
      \ properties are often defined differently). It may refer to a building, a building\
      \ cluster, or a floor of a multistory building."
    type: "object"
    properties:
      id:
        description: "Unique Identifier of the subAddress"
        type: "string"
      subUnit:
        type: "array"
        items:
          $ref: "#/definitions/SubUnit"
      levelType:
        description: "Describes level types within a building"
        type: "string"
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
          \ 2"
        type: "string"
      buildingName:
        description: "Allows for buildings that have well-known names"
        type: "string"
      privateStreetNumber:
        description: "Private streets numbers internal to a private street"
        type: "string"
      privateStreetName:
        description: "\"Private streets internal to a property (e.g. a university)\
          \ may have internal names that are not recorded by the land title office"
        type: "string"
      '@type':
        description: "Technical attribute to exend this class if needed"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to exend this class if needed (JSON schema\
          \ locator)"
        type: "string"
  FieldedAddress:
    description: "A type of Address that has a discrete field and value for each type\
      \ of boundary or identifier down to the lowest level of detail.  For example\
      \  “street number” is one field, “street name” is another field, etc."
    allOf:
    - $ref: "#/definitions/RelatedPlaceReforValue"
    - required:
      - "streetName"
      - "streetType"
      - "city"
      - "stateOrProvince"
      - "postcode"
      - "country"
      type: "object"
      properties:
        streetNr:
          description: "Number identifying a specific property on a public street.\
            \ It may be combined with streetNrLast for ranged addresses"
          type: "string"
        streetNrSuffix:
          description: "The first street number suffix"
          type: "string"
        streetNrLast:
          description: "Last number in a range of street numbers allocated to a property"
          type: "string"
        streetNrLastSuffix:
          description: "Last street number suffix for a ranged address"
          type: "string"
        streetName:
          description: "Name of the street or other street type"
          type: "string"
        streetType:
          description: "Alley, avenue, boulevard, brae, crescent, drive, highway,\
            \ lane, terrace, parade, place, tarn, way, wharf"
          type: "string"
        streetSuffix:
          description: "A modifier denoting a relative direction"
          type: "string"
        locality:
          description: "The locality that the address is in"
          type: "string"
        city:
          description: "The city that the address is in"
          type: "string"
        stateOrProvince:
          description: "The State or Province that the address is in"
          type: "string"
        postcode:
          description: "Descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also known as zipcode)"
          type: "string"
        postcodeExtension:
          description: "An extension of a postal code. E.g. the part following the\
            \ dash in an american urban property address"
          type: "string"
        country:
          description: "Country that the address is in"
          type: "string"
        GeographicSubAddress:
          $ref: "#/definitions/GeographicSubAddress"
  FormattedAddress:
    description: "A type of Address that has discrete fields for each type of boundary\
      \ or identifier with the exception of street and more specific location details,\
      \ which are combined into a maximum of two strings based on local postal addressing\
      \ conventions."
    allOf:
    - $ref: "#/definitions/RelatedPlaceReforValue"
    - required:
      - "addrLine1"
      - "city"
      - "stateOrProvince"
      - "postcode"
      - "country"
      type: "object"
      properties:
        addrLine1:
          description: "The first address line in a formatted address"
          type: "string"
        addrLine2:
          description: "The second address line in a formatted address"
          type: "string"
        locality:
          description: "An area of defined or undefined boundaries within a local\
            \ authority or other legislatively defined area, usually rural or semi\
            \ rural in nature"
          type: "string"
        city:
          description: "The city that the address is in"
          type: "string"
        stateOrProvince:
          description: "The State or Province that the address is in"
          type: "string"
        postcode:
          description: "Descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also known as ZIP code)"
          type: "string"
        postcodeExtension:
          description: "An extension of a postal code. E.g. the part following the\
            \ dash in an American urban property address"
          type: "string"
        country:
          description: "Country that the address is in"
          type: "string"
  ReferencedAddress:
    description: "A globally unique identifier controlled by a generally accepted\
      \ independent administrative authority that specifies a fixed geographical location."
    allOf:
    - $ref: "#/definitions/RelatedPlaceReforValue"
    - required:
      - "referenceType"
      - "referenceId"
      type: "object"
      properties:
        referenceType:
          description: "The type of the reference. For North American providers this\
            \ would normally be CLLI"
          type: "string"
        referenceId:
          description: "A reference to an address by id; this would include such things\
            \ as CLLI Codes, or Seller-assigned address identifiers"
          type: "string"
  GeographicPoint:
    description: ""
    required:
    - "latitude"
    - "longitude"
    type: "object"
    properties:
      latitude:
        description: "The latitude expressed in decimal degrees format"
        type: "string"
      longitude:
        description: "The longitude expressed in decimal degrees format"
        type: "string"
  GeographicLocation:
    description: "A set of coordinates (typically including latitude and longitude)\
      \ that describes a particular loca-tion on earth."
    allOf:
    - $ref: "#/definitions/RelatedPlaceReforValue"
    - required:
      - "spatialRef"
      - "geographicPoint"
      type: "object"
      properties:
        spatialRef:
          description: "The spatial reference system used to determine the coordinates"
          type: "string"
        geographicPoint:
          $ref: "#/definitions/GeographicPoint"
  Money:
    description: "base / value business entity used to represent money"
    required:
    - "value"
    - "unit"
    type: "object"
    properties:
      value:
        description: "A positive floating point number"
        type: "number"
        format: "float"
      unit:
        description: "Currency (ISO4217 norm uses 3 letters to define the currency"
        type: "string"
  ProductOrderRefCancel:
    description: "A reference to a product order used to perform cancellation request."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Unique (within the ordering domain) identifier for the order\
          \ that is generated by the seller when the order is initially accepted."
        type: "string"
      href:
        description: "Hyperlink to access the order"
        type: "string"
      externalId:
        description: "A number that uniquely identifies an order within the buyer's\
          \ enterprise.\nMust be provided if provided when the order was initially\
          \ accepted"
        type: "string"
      state:
        $ref: "#/definitions/ProductOrderStateType"
      version:
        description: "The version number that the Buyer uses to refer to this particular\
          \ version of the order.\nThis not checked for conformance (informative information)"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend the API"
        type: "string"
  CancelProductOrder_Create:
    description: ""
    required:
    - "requestedCancellationDate"
    - "productOrder"
    type: "object"
    properties:
      requestedCancellationDate:
        description: "Identifies the date the Seller cancelled the Order."
        type: "string"
        format: "date-time"
      cancellationReason:
        description: "An optional free-form text field for the Seller to provide additional\
          \ information regarding the reason for the cancellation."
        type: "string"
      productOrder:
        $ref: "#/definitions/ProductOrderRefCancel"
      '@type':
        description: "Technical attribute to extend this class."
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class."
        type: "string"
  GeographicSite:
    description: "A fixed physical location at which a Product can be installed."
    allOf:
    - $ref: "#/definitions/RelatedPlaceReforValue"
    - type: "object"
      properties: {}
  StateChange:
    description: "Holds the state notification reasons and associated date the state\
      \ changed, populated by the server"
    type: "object"
    properties:
      changeDate:
        description: ""
        type: "string"
        format: "date-time"
      changeReason:
        description: ""
        type: "string"
      state:
        $ref: "#/definitions/ProductOrderStateType"
