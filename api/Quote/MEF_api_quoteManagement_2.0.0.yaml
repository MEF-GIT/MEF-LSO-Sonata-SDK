---
swagger: "2.0"
info:
  description: "**Quote Management**\nMEF-LSO Sonata Quote API allows to manage quote\
    \ request & completion management between **Seller** and **Buyer**. \n\nQuote\
    \ API has been designed by MEF Sonata team and used TMF 648 as template.\n\nIn\
    \ particular 3 types of quote are managed:\n- Budgetary Quote: A quote that is\
    \ provided quickly and with very little analysis such that the Buyer can get an\
    \ idea of how much the requested product offering could cost. \n\n- Indicative\
    \ Quote :A quote that is provided to the Buyer based on some, but not a complete,\
    \ pre-order analysis.  At this stage there is further analysis that the Seller\
    \ can (and is will-ing) to undertake to provide a committed or firm price, but\
    \ the Seller needs some time to complete this.  Order-ing may be possible based\
    \ on the indicative quote with some stipulations as to how cost identified uncovered\
    \ during delivering.  Some fees on an indicative quote may be firm.\n\n- Firm\
    \ quote: A quote provided to the Buyer based on as rigorous a pre-order analysis\
    \ as the Seller is willing to carry out.  All fees specified on a firm quote are\
    \ committed and thus cannot be modified or more charges added through the ordering\
    \ process unless there are changes in the Buyer requirements.   \n\n"
  version: "2.0.0"
  title: "API QuoteManagement"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "serverRoot"
basePath: "/api/mef/quoteManagement/v2/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "Quote"
  description: "Quote can be used to negotiate service and product acquisition or\
    \ modification between a buyer and a seller (Partner). Quote contain list of quote\
    \ items, a reference to customer (partyRole), a list of productOffering/product\
    \ and attached prices and conditions."
- name: "Hub"
  description: "Hub allows to register notification subscription."
paths:
  /quote:
    post:
      tags:
      - "Quote"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "quoteCreate"
      summary: "Create a quote"
      description: "This operation is used to create a new quote."
      deprecated: false
      parameters:
      - name: "Quote"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Quote_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Quote"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\n\n \n\n\n - code:\
            \ 101\nmessage: A relatedPartyRole for Buyer role must be provided\ndescription:\
            \ \n\n\n - code: 103\nmessage: A relatedPartyRole is incomplete (must\
            \ have partyRole.id or role.id+relatedParty)\ndescription: \n\n\n - code:\
            \ 104\nmessage: A relatedParty is incomplete (must have a party.id or\
            \ a party.name)\ndescription: \n\n\n - code: 105\nmessage: Qualification\
            \ Id provided did not exist or expired\ndescription: \n\n\n - code: 106\n\
            message: At least a productOffering Id or a product.id or a productSpec.id\
            \ must be provided in quote item\ndescription: \n\n\n - code: 107\nmessage:\
            \ inconsistency between  requestedQuoteCompletionDate and expectedFulfillmentStartDate\n\
            description: \n\n\n - code: 108\nmessage: Seller requires agreement under\
            \ which the buyer is requesting but is missing from the request.\ndescription:\
            \ \n\n\n - code: 109\nmessage: The agreement provided cannot be validated\
            \ by the seller\ndescription: \n\n\n - code: 110\nmessage: Product requested\
            \ is not part of the provided agreement\ndescription: \n\n\n - code: 111\n\
            message: Mandatory product/item relationship is missing\ndescription: "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "Quote"
      produces:
      - "application/json;charset=utf-8"
      operationId: "quoteFind"
      summary: "List quotes"
      description: "This operation is used to retrieve quote information using filter\
        \ criteria."
      deprecated: false
      parameters:
      - name: "externalId"
        required: false
        in: "query"
        description: "ID given by the consumer and only understandable by him (to\
          \ facilitate his searches afterwards)"
        type: "string"
      - name: "state"
        required: false
        in: "query"
        description: "State of the Quote"
        type: "string"
        enum:
        - "IN_PROGRESS"
        - "READY"
        - "CANCELLED"
        - "REJECTED"
        - "ACCEPTED"
        - "EXPIRED"
        - "UNABLE_TO_PROVIDE"
        - "INSUFICIENT_INFORMATION_PROVIDED"
      - name: "quoteLevel"
        required: false
        in: "query"
        description: "Level of the quote - could be indicative, budgetary or firm"
        type: "string"
        enum:
        - "BUDGETARY"
        - "INDICATIVE"
        - "FIRM"
      - name: "projectId"
        required: false
        in: "query"
        description: "This value MAY be assigned by the Buyer/Seller to identify a\
          \ project the quoting request is associated with."
        type: "string"
      - name: "quoteDate.gt"
        required: false
        in: "query"
        description: "Date when the quote was created - greater than"
        type: "string"
        format: "date-time"
      - name: "quoteDate.lt"
        required: false
        in: "query"
        description: "Date when the quote was created - lower than"
        type: "string"
        format: "date-time"
      - name: "quoteCompletionDate.gt"
        required: false
        in: "query"
        description: "Date when the quote was completed -  greater than"
        type: "string"
        format: "date-time"
      - name: "quoteCompletionDate.lt"
        required: false
        in: "query"
        description: "Date when the quote was completed -  lower than"
        type: "string"
        format: "date-time"
      - name: "offset"
        required: false
        in: "query"
        description: "Requested index for start of resources to be provided in response\
          \ requested by client"
        type: "string"
      - name: "limit"
        required: false
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client"
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Quote_Find"
          headers:
            X-Total-Count:
              description: "Total number of items matching criteria"
              type: "integer"
              format: "int32"
            X-Result-Count:
              description: "The number of resources retrieved in the response"
              type: "integer"
              format: "int32"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\n\n \n\n\n - code:\
            \ 100\nmessage: Too many records retrieved - please restrict requested\
            \ parameter value(s)\ndescription: "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quote/{id}:
    get:
      tags:
      - "Quote"
      produces:
      - "application/json;charset=utf-8"
      operationId: "quoteGet"
      summary: "Retrieve a quote"
      description: "This operation is used to retrieve quote information using the\
        \ ID."
      deprecated: false
      parameters:
      - name: "id"
        required: true
        in: "path"
        description: ""
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/Quote"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quote/requestStateChange:
    post:
      tags:
      - "Quote"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "quoteRequestStateChange"
      summary: "request a quote state change"
      description: "Request from buyer to cancel or reject a quote.\nWhen seller receive\
        \ cancel request, seller will shift quote state to CANCELLED (no change on\
        \ order item state)\nWhen seller receive reject request, seller will shift\
        \ quote state to REJECTED (no change on order item state)"
      deprecated: false
      parameters:
      - name: "changeQuoteStateRequest"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/ChangelQuoteStateRequest"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/ChangeQuoteStateResponse"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\n\n \n\n\n - code:\
            \ 100\nmessage: Quote current status is incompatible with requested quote\
            \ state change\ndescription: \n\n\n - code: 101\nmessage: Quote external\
            \ Id provided did not match\ndescription: "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub:
    post:
      tags:
      - "Hub"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubCreate"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics"
      deprecated: false
      parameters:
      - name: "Hub"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/HubInput"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "Hub"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubFind"
      summary: "listHub"
      description: "Retrieve hub(s)"
      deprecated: false
      parameters:
      - name: "fields"
        required: false
        in: "header"
        description: ""
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub/{HubId}:
    delete:
      tags:
      - "Hub"
      operationId: "hubDelete"
      summary: "Unregister a listener"
      description: "Clears the communication endpoint address that was set by creating\
        \ the Hub"
      deprecated: false
      parameters:
      - name: "HubId"
        required: true
        in: "path"
        description: ""
        type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  QuoteStateType:
    description: "Valid quote state enumeration"
    type: "string"
    enum:
    - "IN_PROGRESS"
    - "READY"
    - "CANCELLED"
    - "REJECTED"
    - "ACCEPTED"
    - "EXPIRED"
    - "UNABLE_TO_PROVIDE"
    - "INSUFICIENT_INFORMATION_PROVIDED"
  QuoteItemStateType:
    description: "Valid quote item state enumeration"
    type: "string"
    enum:
    - "IN_PROGRESS"
    - "UNABLE_TO_PROVIDE"
    - "READY"
    - "ABANDONED"
    - "INSUFICIENT_INFORMATION_PROVIDED"
  QuoteLevel:
    description: "Quote level"
    type: "string"
    enum:
    - "BUDGETARY"
    - "INDICATIVE"
    - "FIRM"
  QuoteChangeState:
    description: "Quote state change 'request able' by buyer"
    type: "string"
    enum:
    - "CANCELLED"
    - "REJECTED"
  PriceType:
    description: "Price type (recurring or non-recurring)"
    type: "string"
    enum:
    - "RECURRING"
    - "NON_RECURRING"
  ChargePeriod:
    description: "Charge period for recurring charge"
    type: "string"
    enum:
    - "DAY"
    - "WEEK"
    - "MONTH"
    - "YEAR"
  RelationshipType:
    description: "Relationship type between item or product"
    type: "string"
    enum:
    - "RELIES_ON"
    - "BUNDLED"
    - "COMES_FROM"
  DurationUnit:
    description: ""
    type: "string"
    enum:
    - "DAY"
    - "WEEK"
    - "MONTH"
    - "YEAR"
  ProductActionType:
    description: "Action to be performed on the product"
    type: "string"
    enum:
    - "INSTALL"
    - "CHANGE"
    - "DISCONNECT"
    - "NO_CHANGE"
  ErrorRepresentation:
    description: "Standard Class used to describe API response error"
    required:
    - "code"
    - "reason"
    type: "object"
    properties:
      code:
        description: "Application related code (as defined in the API or from a common\
          \ list)"
        type: "integer"
        format: "int32"
      reason:
        description: "Text that explains the reason for error. This can be shown to\
          \ a client user."
        type: "string"
      message:
        description: "Text that provide mode details and corrective actions related\
          \ to the error.  This can be shown to a client user."
        type: "string"
      status:
        description: "Http error code extension like 400-2 for example"
        type: "string"
      referenceError:
        description: "url pointing to documentation describing the error"
        type: "string"
      '@type':
        description: "Type of the REST resource\nUsed to extend Error class"
        type: "string"
      '@schemaLocation':
        description: "Link to the schema describing the REST resource\nUsed to extend\
          \ Error class"
        type: "string"
  TimePeriod:
    description: "Indicates a time period for validity."
    required:
    - "startDate"
    - "endDate"
    type: "object"
    properties:
      startDate:
        description: "Quote valid from"
        type: "string"
        format: "date-time"
      endDate:
        description: "Quote valid to"
        type: "string"
        format: "date-time"
  Price:
    description: "Provides price amount (before tax) - Money structure is used"
    type: "object"
    properties:
      preTaxAmount:
        $ref: "#/definitions/Money"
      priceRange:
        $ref: "#/definitions/PriceRange"
      '@type':
        description: "Indicates the (class) type of the price"
        type: "string"
  QuoteItem:
    description: "A quote items describe an action to be performed on a productOffering\
      \ or a product in order to get pricing elements and condition"
    required:
    - "id"
    - "state"
    - "action"
    type: "object"
    properties:
      id:
        description: "Identifier of the quote item (generally it is a sequence number\
          \ 01, 02, 03, ...)."
        type: "string"
      state:
        $ref: "#/definitions/QuoteItemStateType"
      action:
        $ref: "#/definitions/ProductActionType"
      '@type':
        description: "Indicates the base (class) type of the quote Item."
        type: "string"
      '@schemaLocation':
        description: "Link to the schema describing this REST resource"
        type: "string"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      product:
        $ref: "#/definitions/Product"
      quoteItemPrice:
        type: "array"
        items:
          $ref: "#/definitions/QuotePrice"
      requestedQuoteItemTerm:
        $ref: "#/definitions/ItemTerm"
      quoteItemTerm:
        $ref: "#/definitions/ItemTerm"
      quoteItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/QuoteItemRelationship"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      qualification:
        type: "array"
        items:
          $ref: "#/definitions/ProductOfferingQualificationRef"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
  RelatedParty:
    description: "A related party defines party or party role linked to a quote."
    required:
    - "role"
    type: "object"
    properties:
      id:
        description: "Unique identifier of a related party"
        type: "string"
      role:
        description: "Role of the related party for this quote or quoteItem"
        type: "array"
        items:
          type: "string"
      name:
        description: "Name of the related party"
        type: "string"
      emailAddress:
        description: "email of the related party"
        type: "string"
      number:
        description: "Telephone number of the related party"
        type: "string"
      numberExtension:
        description: "Telephone number extension of the related party"
        type: "string"
      '@referredType':
        description: "Indicates the base (class) type of the party."
        type: "string"
  Note:
    description: "Extra information about the quote."
    required:
    - "date"
    - "author"
    - "text"
    type: "object"
    properties:
      date:
        description: "Date of the note"
        type: "string"
        format: "date-time"
      author:
        description: "Author of the note"
        type: "string"
      text:
        description: "Text of the note"
        type: "string"
  Product:
    description: "One or more services sold to a Buyer by a Seller.  A particular\
      \ Product Offering defines the technical and commercial attributes and behav-iors\
      \ of a Product."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the product"
        type: "string"
      href:
        description: "Reference of the product (url)"
        type: "string"
      productSpecification:
        $ref: "#/definitions/ProductSpecificationRef"
      productRelationship:
        type: "array"
        items:
          $ref: "#/definitions/ProductRelationship"
      place:
        type: "array"
        items:
          $ref: "#/definitions/RelatedPlaceRefOrValue"
  Quote:
    description: "A quote which can be used to negotiate service and product acquisition\
      \ or modification between\na customer and a service provider"
    discriminator: "id"
    required:
    - "state"
    - "instantSyncQuoting"
    - "quoteLevel"
    - "requestedQuoteCompletionDate"
    - "relatedParty"
    - "quoteItem"
    type: "object"
    properties:
      id:
        description: "Unique (within the quoting domain) identifier for the quote,\
          \ as attributed by the quoting system"
        type: "string"
      href:
        description: "Hyperlink to access the quote"
        type: "string"
      externalId:
        description: "ID given by the consumer and only understandable by him (to\
          \ facilitate his searches afterwards)"
        type: "string"
      projectId:
        description: "This value MAY be assigned by the Buyer/Seller to identify a\
          \ project the quoting request is associated with."
        type: "string"
      description:
        description: "Description of the quote"
        type: "string"
      state:
        $ref: "#/definitions/QuoteStateType"
      quoteDate:
        description: "Date when the quote was created"
        type: "string"
        format: "date-time"
      instantSyncQuoting:
        description: "If this flag is set to Yes, Buyer requests to have instant quoting\
          \ to be provided in operation POST response"
        type: "boolean"
        default: false
      quoteLevel:
        $ref: "#/definitions/QuoteLevel"
      requestedQuoteCompletionDate:
        description: "This is the date wished by the requester to have the quote completed\
          \ (meaning priced)"
        type: "string"
        format: "date-time"
      expectedQuoteCompletionDate:
        description: "This is the date filled by the seller to indicate expected quote\
          \ completion date."
        type: "string"
        format: "date"
      expectedFulfillmentStartDate:
        description: "This is the date wished by the requester to have the requested\
          \ quote item(s) delivered"
        type: "string"
        format: "date"
      effectiveQuoteCompletionDate:
        description: "Date when the quoted was Cancelled or Rejected or Accepted"
        type: "string"
        format: "date-time"
      validFor:
        $ref: "#/definitions/TimePeriod"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      agreement:
        type: "array"
        items:
          $ref: "#/definitions/AgreementRef"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
      quoteItem:
        type: "array"
        items:
          $ref: "#/definitions/QuoteItem"
      '@baseType':
        description: "Indicates the base (class) type of the quote."
        type: "string"
      '@type':
        description: "Indicates the (class) type of the quote."
        type: "string"
      '@schemaLocation':
        description: "Link to the schema describing the REST resource."
        type: "string"
  AgreementRef:
    description: "An agreement represents a contract or arrangement, either written\
      \ or verbal and sometimes enforceable by law, such as a service level agreement\
      \ or a customer price agreement. An agreement involves a number of other business\
      \ entities, such as products, services, and resources and/or their specifications."
    required:
    - "id"
    - "name"
    - "path"
    type: "object"
    properties:
      id:
        description: "Id of the agreement"
        type: "string"
      href:
        description: "Reference of the agreement"
        type: "string"
      name:
        description: "Name of the agreement"
        type: "string"
      path:
        description: "A URI/URL providing the path to where an agreement resides."
        type: "string"
  ProductOfferingRef:
    description: "The commercial and technical details of a Product sold by a particular\
      \ Seller.  A Product Offering defines all of the commercial terms and, through\
      \ association with a particular Product Specification, defines all the technical\
      \ attributes and behaviors of the Product. A Product Offering may constrain\
      \ the allowable set of configurable technical attributes and/or behaviors specified\
      \ in the associated Product Specification"
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the product offering"
        type: "string"
  ProductRelationship:
    description: "Represents a relationship between products - which potentially holds\
      \ an entire product object or a product reference (with partial content)."
    required:
    - "type"
    - "product"
    type: "object"
    properties:
      type:
        description: "Indicates whether the product is \"bundled\", \"relies on\"\
          , or \"comesFrom\" another product."
        type: "string"
      product:
        $ref: "#/definitions/ProductRef"
  QuotePrice:
    description: "Description of price and discount awarded."
    required:
    - "priceType"
    - "name"
    - "price"
    type: "object"
    properties:
      priceType:
        $ref: "#/definitions/PriceType"
      recurringChargePeriod:
        $ref: "#/definitions/ChargePeriod"
      name:
        description: "Name of the quote /quote item price"
        type: "string"
      description:
        description: "Description of the quote/quote item price."
        type: "string"
      '@type':
        description: "Indicates the base (class) type of the quote price"
        type: "string"
      price:
        $ref: "#/definitions/Price"
  ProductSpecificationRef:
    description: "A structured set of well-defined technical attributes and/or behaviors\
      \ that are used to construct a Product Offering for sale to a market."
    discriminator: "id"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the product specification"
        type: "string"
      describing:
        $ref: "#/definitions/Describing"
  Money:
    description: "A base / value business entity used to represent money"
    required:
    - "value"
    - "unit"
    type: "object"
    properties:
      value:
        description: "A positive floating point number"
        type: "number"
        format: "float"
      unit:
        description: "Currency (ISO4217 norm uses 3 letters to define the currency"
        type: "string"
  RelatedPlaceRefOrValue:
    description: "Place defines the places where the quoted products are sold or delivered"
    discriminator: "@type"
    required:
    - "role"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the place"
        type: "string"
      href:
        description: "Unique reference of the place"
        type: "string"
      role:
        description: "The role that the place plays, e.g.  \"UNI Site\", or \"ENNI\
          \ Site\"."
        type: "string"
      '@type':
        description: ""
        type: "string"
  Describing:
    description: "Target to the schema describing the product spec resource (and type)"
    type: "object"
    properties:
      '@type':
        description: "Indicates the (class) type of resource"
        type: "string"
      '@schemaLocation':
        description: "This field provided a link to the schema describing this REST\
          \ resource."
        type: "string"
  QuoteItemRelationship:
    description: "Used to describe relationship between quote item. These relationships\
      \ could have an impact on pricing and conditions."
    required:
    - "type"
    - "id"
    type: "object"
    properties:
      type:
        $ref: "#/definitions/RelationshipType"
      id:
        description: "ID of the related order item (must be in the same quote)."
        type: "string"
  QuoteItem_Create:
    description: "This structure is used to describe Quote item only in the POST operation\
      \ for the request."
    required:
    - "id"
    - "action"
    type: "object"
    properties:
      id:
        description: "Identifier of the quote item (generally it is a sequence number\
          \ 01, 02, 03, ...)."
        type: "string"
      action:
        $ref: "#/definitions/ProductActionType"
      '@type':
        description: "Indicates the base (class) type of the quote Item."
        type: "string"
      '@schemaLocation':
        description: "Link to the schema describing this REST resource"
        type: "string"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      requestedQuoteItemTerm:
        $ref: "#/definitions/ItemTerm"
      product:
        $ref: "#/definitions/Product"
      qualification:
        $ref: "#/definitions/ProductOfferingQualificationRef"
      quoteItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/QuoteItemRelationship"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
  Quote_Create:
    description: "This structure is used only in the POST operation for the request."
    required:
    - "requestedQuoteCompletionDate"
    - "relatedParty"
    - "quoteItem"
    type: "object"
    properties:
      externalId:
        description: "ID given by the consumer and only understandable by him (to\
          \ facilitate his searches afterwards)"
        type: "string"
      projectId:
        description: "This value MAY be assigned by the Buyer/Seller to identify a\
          \ project the quoting request is associated with."
        type: "string"
      quoteLevel:
        $ref: "#/definitions/QuoteLevel"
      instantSyncQuoting:
        description: "If this flag is set to Yes, Buyer requests to have instant quoting\
          \ to be provided in operation POST response"
        type: "boolean"
        default: false
      description:
        description: "Description of the quote"
        type: "string"
      requestedQuoteCompletionDate:
        description: "This is the date wished by the requester to have the quote completed\
          \ (meaning priced).\nThis attribute is not considered when instantSyncQuoting\
          \ is set to Yes."
        type: "string"
        format: "date-time"
      expectedFulfillmentStartDate:
        description: "This is the date wished by the requester to have the requested\
          \ quote item(s) delivered"
        type: "string"
        format: "date"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      agreement:
        type: "array"
        items:
          $ref: "#/definitions/AgreementRef"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
      quoteItem:
        type: "array"
        items:
          $ref: "#/definitions/QuoteItem_Create"
      '@baseType':
        description: "Indicates the base (class) type of the quote."
        type: "string"
      '@type':
        description: "Indicates the (class) type of the quote.\nTechnical attribute\
          \ to extend this class."
        type: "string"
      '@schemaLocation':
        description: "Link to the schema describing the REST resource.\nTechnical\
          \ attribute to extend this class."
        type: "string"
  Hub:
    description: "This resource is used to manage notification subscription."
    required:
    - "id"
    - "callback"
    - "query"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the hub"
        type: "string"
      callback:
        description: "This attribute is the callback url where event will be sent\
          \ when occurs, for instance an url http://yourdomain/listener/api/v1/event"
        type: "string"
      query:
        description: "This attribute is used to define notification type. Example:\
          \ \",\"query\":”eventType = QuoteStateChangeNotification”}"
        type: "string"
  HubInput:
    description: "This class is used to request a HUB creation - Used in the POST\
      \ operation."
    required:
    - "callback"
    - "query"
    type: "object"
    properties:
      callback:
        description: "This attribute is the callback url where event will be sent\
          \ when occurs, for instance an url http://yourdomain/listener/api/v1/event"
        type: "string"
      query:
        description: "This attribute is used to define notification type. Example:\
          \ \",\"query\":”eventType = QuoteStateChangeNotification”}"
        type: "string"
  ProductRef:
    description: "Product reference to be used to describe relationship"
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Id of the product (in the inventory). Provided by the Seller."
        type: "string"
      href:
        description: "Hyperlink to the product in the inventory"
        type: "string"
      buyerProductId:
        description: "Targeted Buyer product id - Informative"
        type: "string"
  ProductOfferingQualificationRef:
    description: "Reference to productOfferingQualification previously done to check\
      \ requested product serviceability"
    required:
    - "id"
    - "qualificationItem"
    type: "object"
    properties:
      id:
        description: "Id of the productOfferingQualification"
        type: "string"
      href:
        description: "Link to the productOfferingQualification"
        type: "string"
      qualificationItem:
        description: "Id of the item of the productOfferingQualification"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend this class"
        type: "string"
  PriceRange:
    description: "PriceRange class allows to describe a range of price (Min/Max) for\
      \ budgetary or indicative quote."
    required:
    - "minPreTaxAmount"
    - "maxPreTaxAmount"
    type: "object"
    properties:
      minPreTaxAmount:
        $ref: "#/definitions/Money"
      maxPreTaxAmount:
        $ref: "#/definitions/Money"
  Quote_Find:
    description: "Quote Summary view is provided in the response of the GET(LIST)\
      \ quote. Only a subset of information are provided."
    discriminator: "id"
    required:
    - "requestedQuoteCompletionDate"
    type: "object"
    properties:
      id:
        description: "ID attributed by quoting system"
        type: "string"
      href:
        description: "Hyperlink to access the quote"
        type: "string"
      externalId:
        description: "ID given by the consumer and only understandable by him (to\
          \ facilitate his searches afterwards)"
        type: "string"
      quoteLevel:
        $ref: "#/definitions/QuoteLevel"
      description:
        description: "Description of the quote"
        type: "string"
      quoteDate:
        description: "Date when the quote was created"
        type: "string"
        format: "date-time"
      state:
        $ref: "#/definitions/QuoteStateType"
      projectId:
        description: "This value MAY be assigned by the Buyer/Seller to identify a\
          \ project the quoting request is associated with."
        type: "string"
      requestedQuoteCompletionDate:
        description: "This is the date wished by the requester to have the quote completed\
          \ (meaning priced)"
        type: "string"
        format: "date-time"
      expectedQuoteCompletionDate:
        description: "This is the date filled by the seller to indicate expected quote\
          \ completion date."
        type: "string"
        format: "date"
      effectiveQuoteCompletionDate:
        description: "Date when the quoted was Cancelled or Rejected or Accepted"
        type: "string"
        format: "date-time"
  ChangelQuoteStateRequest:
    description: "Structure used to request quote cancellation/rejection"
    required:
    - "id"
    - "state"
    - "quoteChangeStateReason"
    type: "object"
    properties:
      id:
        description: "id of the quote to be cancelled"
        type: "string"
      externalId:
        description: "External Id of the quote (buyer quote id). If provided seller\
          \ will check consistence."
        type: "string"
      state:
        $ref: "#/definitions/QuoteChangeState"
      quoteChangeStateReason:
        description: "Cancellation reason"
        type: "string"
  ChangeQuoteStateResponse:
    description: "Structure to response for a quote cancellation/rejection request"
    required:
    - "id"
    - "quoteEffectiveStateChangeDate"
    - "state"
    type: "object"
    properties:
      id:
        description: "id of the quote to be cancelled"
        type: "string"
      externalId:
        description: "External Id of the quote (buyer quote id). If provided by seller\
          \ this information is send back in the response."
        type: "string"
      quoteEffectiveStateChangeDate:
        description: "Cancellation or rejection date (effective)"
        type: "string"
        format: "date-time"
      state:
        $ref: "#/definitions/QuoteStateType"
  Duration:
    description: "To describe a duration (period of time) with a value and an unit\
      \ (day, month, etc...)"
    required:
    - "value"
    - "unit"
    type: "object"
    properties:
      value:
        description: "value of the duration"
        type: "integer"
        format: "int32"
        default: 12
      unit:
        $ref: "#/definitions/DurationUnit"
  ItemTerm:
    description: "Used to describe a term (also know as commitment) for a quote item"
    required:
    - "duration"
    type: "object"
    properties:
      name:
        description: "Name of the term"
        type: "string"
      description:
        description: "Description of the term"
        type: "string"
      duration:
        $ref: "#/definitions/Duration"
  SubUnit:
    description: ""
    required:
    - "subUnitType"
    - "subUnitIdentifier"
    type: "object"
    properties:
      subUnitType:
        description: "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
          \ UNIT, WHARF."
        type: "string"
      subUnitIdentifier:
        description: "The discriminator used for the subunit, often just a simple\
          \ number but may also be a range."
        type: "string"
  GeographicSubAddress:
    description: "It is used for addressing within a property in an urban area (country\
      \ properties are often defined differently). It may refer to a building, a building\
      \ cluster, or a floor of a multistory building."
    type: "object"
    properties:
      id:
        description: "Unique Identifier of the subAddress"
        type: "string"
      subUnit:
        type: "array"
        items:
          $ref: "#/definitions/SubUnit"
      levelType:
        description: "Describes level types within a building"
        type: "string"
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
          \ 2"
        type: "string"
      buildingName:
        description: "Allows for buildings that have well-known names"
        type: "string"
      privateStreetNumber:
        description: "Private streets numbers internal to a private street"
        type: "string"
      privateStreetName:
        description: "\"Private streets internal to a property (e.g. a university)\
          \ may have internal names that are not recorded by the land title office"
        type: "string"
      '@type':
        description: "Technical attribute to exend this class if needed"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to exend this class if needed (JSON schema\
          \ locator)"
        type: "string"
  FieldedAddress:
    description: "A type of Address that has a discrete field and value for each type\
      \ of boundary or identifier down to the lowest level of detail. For example\
      \ “street number” is one field, “street name” is another field, etc."
    allOf:
    - $ref: "#/definitions/RelatedPlaceRefOrValue"
    - required:
      - "streetType"
      - "city"
      - "stateOrProvince"
      - "postcode"
      - "country"
      type: "object"
      properties:
        streetNr:
          description: "Number identifying a specific property on a public street.\
            \ It may be combined with streetNrLast for ranged addresses"
          type: "string"
        streetNrSuffix:
          description: "The first street number suffix"
          type: "string"
        streetNrLast:
          description: "Last number in a range of street numbers allocated to a property"
          type: "string"
        streetNrLastSuffix:
          description: "Last street number suffix for a ranged address"
          type: "string"
        streetName:
          description: "Name of the street or other street type"
          type: "string"
        streetType:
          description: "Alley, avenue, boulevard, brae, crescent, drive, highway,\
            \ lane, terrace, parade, place, tarn, way, wharf"
          type: "string"
        streetSuffix:
          description: "A modifier denoting a relative direction"
          type: "string"
        locality:
          description: "The locality that the address is in"
          type: "string"
        city:
          description: "The city that the address is in"
          type: "string"
        stateOrProvince:
          description: "The State or Province that the address is in"
          type: "string"
        postcode:
          description: "Descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also known as zipcode)"
          type: "string"
        postcodeExtension:
          description: "An extension of a postal code. E.g. the part following the\
            \ dash in an american urban property address"
          type: "string"
        country:
          description: "Country that the address is in"
          type: "string"
        geographicSubAddress:
          $ref: "#/definitions/GeographicSubAddress"
  FormattedAddress:
    description: "A type of Address that has discrete fields for each type of boundary\
      \ or identifier with the exception of street and more specific location details,\
      \ which are combined into a maximum of two strings based on local postal addressing\
      \ conventions."
    allOf:
    - $ref: "#/definitions/RelatedPlaceRefOrValue"
    - required:
      - "addrLine1"
      - "city"
      - "stateOrProvince"
      - "postcode"
      - "country"
      type: "object"
      properties:
        addrLine1:
          description: "The first address line in a formatted address"
          type: "string"
        addrLine2:
          description: "The second address line in a formatted address"
          type: "string"
        locality:
          description: "An area of defined or undefined boundaries within a local\
            \ authority or other legislatively defined area, usually rural or semi\
            \ rural in nature"
          type: "string"
        city:
          description: "The city that the address is in"
          type: "string"
        stateOrProvince:
          description: "The State or Province that the address is in"
          type: "string"
        postcode:
          description: "Descriptor for a postal delivery area, used to speed and simplify\
            \ the delivery of mail (also known as ZIP code)"
          type: "string"
        postcodeExtension:
          description: "An extension of a postal code. E.g. the part following the\
            \ dash in an American urban property address"
          type: "string"
        country:
          description: "Country that the address is in"
          type: "string"
  ReferencedAddress:
    description: "A globally unique identifier controlled by a generally accepted\
      \ independent administrative authority that specifies a fixed geographical location."
    allOf:
    - $ref: "#/definitions/RelatedPlaceRefOrValue"
    - required:
      - "referenceType"
      - "referenceId"
      type: "object"
      properties:
        referenceType:
          description: "The type of the reference. For North American providers this\
            \ would normally be CLLI"
          type: "string"
        referenceId:
          description: "A reference to an address by id; this would include such things\
            \ as CLLI Codes, or Seller-assigned address identifiers"
          type: "string"
  GeographicPoint:
    description: ""
    required:
    - "latitude"
    - "longitude"
    type: "object"
    properties:
      latitude:
        description: "The latitude expressed in decimal degrees format"
        type: "string"
      longitude:
        description: "The longitude expressed in decimal degrees format"
        type: "string"
  GeographicLocation:
    description: "A set of coordinates (typically including latitude and longitude)\
      \ that describes a particular loca-tion on earth."
    allOf:
    - $ref: "#/definitions/RelatedPlaceRefOrValue"
    - required:
      - "spatialRef"
      - "geographicPoint"
      type: "object"
      properties:
        spatialRef:
          description: "The spatial reference system used to determine the coordinates"
          type: "string"
        geographicPoint:
          $ref: "#/definitions/GeographicPoint"
