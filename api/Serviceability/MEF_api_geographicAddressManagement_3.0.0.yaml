---
swagger: "2.0"
info:
  description: "**Geographic Address Management**\n\nMEF-LSO Sonata Geographic address\
    \ API allows to\n- retrieve a geographic address in seller database from an adress\
    \ id for a buyer\n- validate geographic address data. Buyer will trigger an address\
    \ validation request to get a valid address description and id from seller\n\n\
    Geographic Address API has been designed by MEF Sonata team and used TMF 673 as\
    \ template.\n\n\n\n"
  version: "3.0.0"
  title: "API GeographicAddressManagement"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "serverRoot"
basePath: "/api/mef/geographicAddressManagement/v3/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "GeographicAddress"
  description: "Geographic address describe an geographic address with usual parameters\
    \ as street, postcode, county, etc... information"
- name: "GeographicAddressValidation"
  description: "geographic Address Validation - resource used to perform an address\
    \ validation: the requester provide an address description and in the response\
    \ he will get a validation of his address or alternate address proposal or information\
    \ that this address description is not corresponding to server existing address.\
    \ All address here a geographical."
paths:
  /geographicAddress/{GeographicAddressId}:
    get:
      tags:
      - "GeographicAddress"
      produces:
      - "application/json;charset=utf-8"
      operationId: "geographicAddressGet"
      summary: "retrieveAddress"
      description: "The Buyer requests the full details of a single Address based\
        \ on an Address identifier that was previously provided by the Seller."
      deprecated: false
      parameters:
      - name: "GeographicAddressId"
        required: true
        in: "path"
        description: ""
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/GeographicAddress"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /geographicAddressValidation:
    post:
      tags:
      - "GeographicAddressValidation"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "geographicAddressValidationCreate"
      summary: "validate a Geographic Address"
      description: "The Buyer sends Address information known to the Buyer to the\
        \ Seller.  The Seller re-sponds with a list of Addresses known to the Seller\
        \ that likely match the Address infor-mation sent by the Buyer.  For each\
        \ Address returned, the Seller generally also provides an Address Identifier,\
        \ which uniquely identifies this Address within the Seller."
      deprecated: false
      parameters:
      - name: "addressValidationRequest"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/GeographicAddressValidation_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/GeographicAddressValidation"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\n\n \n\n\n - code:\
            \ 100\nmessage: Too many addresses match - please re-try with more attribute\
            \ values restriction\ndescription: "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  ValidationResult:
    description: "Validation Result"
    type: "string"
    enum:
    - "success"
    - "fails"
    - "partial"
  ErrorRepresentation:
    description: "Class used to describe API response error"
    required:
    - "code"
    - "reason"
    type: "object"
    properties:
      code:
        description: "Application related code (as defined in the API or from a common\
          \ list)"
        type: "integer"
        format: "int32"
      reason:
        description: "Text that explains the reason for error. This can be shown to\
          \ a client user."
        type: "string"
      message:
        description: "Text that provide more details and corrective actions related\
          \ to the error. This can be shown to a client user."
        type: "string"
      status:
        description: "http error code extension like 400-2"
        type: "string"
      referenceError:
        description: "url pointing to documentation describing the error"
        type: "string"
      '@type':
        description: "The class type of a REST resource."
        type: "string"
      '@schemaLocation':
        description: "it provides a link to the schema describing a REST resource."
        type: "string"
  GeographicPoint:
    description: "A geometric point on earth, which can include a latitude, longitude,\
      \ and elevation in “decimal degrees” format."
    required:
    - "latitude"
    - "longitude"
    type: "object"
    properties:
      latitude:
        description: "The latitude expressed in decimal degrees format"
        type: "string"
      longitude:
        description: "The longitude expressed in decimal degrees format"
        type: "string"
  GeographicLocation:
    description: "A set of coordinates (typically including latitude and longitude)\
      \ that describes a particular location on earth."
    required:
    - "spatialRef"
    - "geographicPoint"
    type: "object"
    properties:
      id:
        description: "Unique Identifier of a GeographicLocation"
        type: "string"
      spatialRef:
        description: "The spatial reference system used to determine the coordinates"
        type: "string"
      geographicPoint:
        type: "array"
        items:
          $ref: "#/definitions/GeographicPoint"
  GeographicSubAddress:
    description: "It is used for addressing within a property in an urban area (country\
      \ properties are often defined differently). It may refer to a building, a building\
      \ cluster, or a floor of a multistory building."
    type: "object"
    properties:
      id:
        description: "Unique Identifier of the subAddress"
        type: "string"
      subUnit:
        type: "array"
        items:
          $ref: "#/definitions/SubUnit"
      levelType:
        description: "Describes level types within a building"
        type: "string"
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
          \ 2"
        type: "string"
      buildingName:
        description: "Allows for buildings that have well-known names"
        type: "string"
      privateStreetNumber:
        description: "Private streets numbers internal to a private street"
        type: "string"
      privateStreetName:
        description: "Private streets internal to a property (e.g. a university) may\
          \ have internal names that are not recorded by the land title office"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeographicAddress:
    description: "An address is a structured textual way of describing how to find\
      \ a Property in an urban area (country properties are often defined differently)"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the address"
        type: "string"
      hasPublicSite:
        description: "This attribute specifies if that Address contains Service Sites\
          \ that are public such as Meet-Me-Rooms at an interconnect location or a\
          \ shared telecom room in the basement of a multi-tenant building."
        type: "boolean"
      allowsNewSite:
        description: "This attribute specifies if a Buyer must use one of the known\
          \ existing Service Sites at this location for any Products delivered to\
          \ this Address.  For example, if a particular building owner mandated that\
          \ all interconnects be done in a shared Public Meet-Me-Room, this attribute\
          \ would be set to False for that Address."
        type: "boolean"
      fieldedAddress:
        $ref: "#/definitions/FieldedAddress"
      geographicLocation:
        $ref: "#/definitions/GeographicLocation"
      formattedAddress:
        $ref: "#/definitions/FormattedAddress"
      referencedAddress:
        $ref: "#/definitions/ReferencedAddress"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeographicAddressValidation:
    description: "Resource used to support a request for a validation address : check\
      \ if a geographic address described by values attributes exists)\nIf exist,\
      \ id is provided\nif not, alternate address(es) could be provided"
    required:
    - "requestedAddress"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the Address Validation (Not an address\
          \ id !!)"
        type: "string"
      validationDate:
        description: "Date when the address validation is performed"
        type: "string"
        format: "date-time"
      validationResult:
        $ref: "#/definitions/ValidationResult"
      requestedAddress:
        $ref: "#/definitions/GeographicAddressRequestBuyerInput"
      verifiedAddress:
        type: "array"
        items:
          $ref: "#/definitions/GeographicAddressSellerResponse"
  GeographicAddressValidation_Create:
    description: "Structure used to describe a geographic address validation request"
    required:
    - "requestedAddress"
    type: "object"
    properties:
      requestedAddress:
        $ref: "#/definitions/GeographicAddressRequestBuyerInput"
  GeographicAddressRequestBuyerInput:
    description: "Structure used by the buyer to request geographic address validation"
    type: "object"
    properties:
      formattedAddress:
        $ref: "#/definitions/FormattedAddressRequest"
      fieldedAddress:
        $ref: "#/definitions/FieldedAddressRequest"
  ReferencedAddress:
    description: "A globally unique identifier controlled by a generally accepted\
      \ independent administrative authority that specifies a fixed geographical location."
    required:
    - "referenceId"
    - "referenceType"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the address"
        type: "string"
      referenceId:
        description: "Id of a reference address"
        type: "string"
      referenceType:
        description: "Type of a reference address"
        type: "string"
  FormattedAddress:
    description: "A type of Address that has discrete fields for each type of boundary\
      \ or identifier with the exception of street and more specific location details,\
      \ which are combined into a maximum of two strings based on local postal addressing\
      \ conventions"
    required:
    - "addrLine1"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the address"
        type: "string"
      addrLine1:
        description: "The first address line in a formatted address"
        type: "string"
      addrLine2:
        description: "The second address line in a formatted address"
        type: "string"
      locality:
        description: "\"An area of defined or undefined boundaries within a local\
          \ authority or other legislatively defined area, usually rural or semi-rural\
          \ in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within\
          \ a city, town or shire principally of urban character \" [ANZLICSTREET]."
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      stateOrProvince:
        description: "The State or Province that the address is in"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes\
          \ after the hyphen when specified."
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
  FieldedAddress:
    description: "A type of Address that has a discrete field and value for each type\
      \ of boundary or identifier down to the lowest level of detail. For example\
      \ “street number” is one field, “street name” is another field, etc."
    type: "object"
    properties:
      id:
        description: "Unique identifier of the address"
        type: "string"
      streetNr:
        description: "Number identifying a specific property on a public street. It\
          \ may be combined with streetNrLast for ranged addresses"
        type: "string"
      streetNrSuffix:
        description: "The first street number suffix"
        type: "string"
      streetNrLast:
        description: "Last number in a range of street numbers allocated to a property"
        type: "string"
      streetNrLastSuffix:
        description: "Last street number suffix for a ranged address"
        type: "string"
      streetName:
        description: "Name of the street or other street type"
        type: "string"
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
          \ terrace, parade, place, tarn, way, wharf"
        type: "string"
      streetSuffix:
        description: "A modifier denoting a relative direction"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      locality:
        description: "\"An area of defined or undefined boundaries within a local\
          \ authority or other legislatively defined area, usually rural or semi-rural\
          \ in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within\
          \ a city, town or shire principally of urban character \" [ANZLICSTREET]."
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      stateOrProvince:
        description: "The State or Province that the address is in"
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes\
          \ after the hyphen when specified."
        type: "string"
      geographicSubAdress:
        type: "array"
        items:
          $ref: "#/definitions/GeographicSubAddress"
  FieldedAddressRequest:
    description: "A type of Address that has a discrete field and value for each type\
      \ of boundary or identifier down to the lowest level of detail. For example\
      \ “street number” is one field, “street name” is another field, etc.\nThis structure\
      \ is used in the request addressValidation only"
    type: "object"
    properties:
      streetNr:
        description: "Number identifying a specific property on a public street. It\
          \ may be combined with streetNrLast for ranged addresses"
        type: "string"
      streetNrSuffix:
        description: "The first street number suffix"
        type: "string"
      streetNrLast:
        description: "Last number in a range of street numbers allocated to a property"
        type: "string"
      streetNrLastSuffix:
        description: "Last street number suffix for a ranged address"
        type: "string"
      streetName:
        description: "Name of the street or other street type"
        type: "string"
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
          \ terrace, parade, place, tarn, way, wharf"
        type: "string"
      streetSuffix:
        description: "A modifier denoting a relative direction"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      locality:
        description: "\"An area of defined or undefined boundaries within a local\
          \ authority or other legislatively defined area, usually rural or semi-rural\
          \ in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within\
          \ a city, town or shire principally of urban character \" [ANZLICSTREET]."
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      stateOrProvince:
        description: "The State or Province that the address is in"
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes\
          \ after the hyphen when specified."
        type: "string"
      geographicSubAddress:
        $ref: "#/definitions/GeographicSubAddressRequest"
  SubUnit:
    description: "Sub Unit structure is used to describe several subUnits with a geographical\
      \ subAddress."
    required:
    - "subUnitType"
    - "subUnitIdentifier"
    type: "object"
    properties:
      subUnitType:
        description: "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
          \ UNIT, WHARF."
        type: "string"
      subUnitIdentifier:
        description: "The discriminator used for the subunit, often just a simple\
          \ number but may also be a range."
        type: "string"
  FormattedAddressRequest:
    description: "A type of Address that has discrete fields for each type of boundary\
      \ or identifier with the exception of street and more specific location details,\
      \ which are combined into a maximum of two strings based on local postal addressing\
      \ conventions"
    required:
    - "addrLine1"
    type: "object"
    properties:
      addrLine1:
        description: "The first address line in a formatted address"
        type: "string"
      addrLine2:
        description: "The second address line in a formatted address"
        type: "string"
      locality:
        description: "\"An area of defined or undefined boundaries within a local\
          \ authority or other legislatively defined area, usually rural or semi-rural\
          \ in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within\
          \ a city, town or shire principally of urban character \" [ANZLICSTREET]."
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      stateOrProvince:
        description: "The State or Province that the address is in"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes\
          \ after the hyphen when specified."
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
  GeographicSubAddressRequest:
    description: "It is used for addressing within a property in an urban area (country\
      \ properties are often defined differently). It may refer to a building, a building\
      \ cluster, or a floor of a multistory building."
    type: "object"
    properties:
      subUnit:
        type: "array"
        items:
          $ref: "#/definitions/SubUnit"
      levelType:
        description: "Describes level types within a building"
        type: "string"
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
          \ 2"
        type: "string"
      buildingName:
        description: "Allows for buildings that have well-known names"
        type: "string"
      privateStreetNumber:
        description: "Private streets numbers internal to a private street"
        type: "string"
      privateStreetName:
        description: "Private streets internal to a property (e.g. a university) may\
          \ have internal names that are not recorded by the land title office"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeographicAddressSellerResponse:
    description: "An address is a structured textual way of describing how to find\
      \ a Property in an urban area (country properties are often defined differently)"
    required:
    - "isBestMatch"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the address"
        type: "string"
      hasPublicSite:
        description: "This attribute specifies if that Address contains Service Sites\
          \ that are public such as Meet-Me-Rooms at an interconnect location or a\
          \ shared telecom room in the basement of a multi-tenant building"
        type: "boolean"
      allowsNewSite:
        description: "This attribute specifies if a Buyer must use one of the known\
          \ existing Service Sites at this location for any Products delivered to\
          \ this Address.  For example, if a particular building owner mandated that\
          \ all interconnects be done in a shared Public Meet-Me-Room, this attribute\
          \ would be set to False for that Address."
        type: "boolean"
      isBestMatch:
        description: "For each Address returned, this attribute specifies if the Seller\
          \ believes this is the best match to the Buyer specified Address.  Setting\
          \ this to TRUE also represents that the Seller believes this is likely a\
          \ direct match to the Buyer Specified Address."
        type: "boolean"
      fieldedAddress:
        $ref: "#/definitions/FieldedAddress"
      formattedAddress:
        $ref: "#/definitions/FormattedAddress"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
